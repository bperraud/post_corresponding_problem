{"ast":null,"code":"/*\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License, version 2.0, as\n * published by the Free Software Foundation.\n *\n * This program is also distributed with certain software (including\n * but not limited to OpenSSL) that is licensed under separate terms,\n * as designated in a particular file or component or in included license\n * documentation.  The authors of MySQL hereby grant you an\n * additional permission to link the program and your derivative works\n * with the separately licensed software that they have included with\n * MySQL.\n *\n * Without limiting anything contained in the foregoing, this file,\n * which is part of MySQL Connector/Node.js, is also subject to the\n * Universal FOSS Exception, version 1.0, a copy of which can be found at\n * http://oss.oracle.com/licenses/universal-foss-exception.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License, version 2.0, for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA\n */\n'use strict';\n/**\n * Mysqlx.Expect outbound message handlers.\n * @private\n * @module handlers.Mysqlx.Expect\n */\n\nconst close = require('../Wrappers/Messages/Expect/Close');\n\nconst logger = require('../../logger');\n\nconst open = require('../Wrappers/Messages/Expect/Open');\n\nconst log = logger('protocol:outbound:Mysqlx.Expect');\n/**\n * Expectation definition.\n * @private\n * @typedef {Object} Expectation\n * @prop {number} key - basic expectation (EXPECT_NO_ERROR|EXPECT_FIELD_EXIST|EXPECT_DOCID_GENERATED)\n * @prop {string} [value] - condition identifier\n * @prop {number} [operation] - set or unset an expectation\n */\n\n/**\n * Encode a Mysqlx.Expect.Close protobuf message.\n * @function\n * @name module:Expect#encodeClose\n * @returns {Buffer} The buffer-encoded protobuf object.\n */\n\nexports.encodeClose = function () {\n  const outboundClose = close.create();\n  log.info('Close', outboundClose);\n  return outboundClose.serialize();\n};\n/**\n * Encode a Mysqlx.Expect.Open protobuf message.\n * @function\n * @name module:Expect#encodeOpen\n * @param {Expectation[]} expectations - list of expectations\n * @returns {Buffer} The buffer-encoded protobuf object.\n */\n\n\nexports.encodeOpen = function (expectations) {\n  const outboundOpen = open.create(expectations);\n  log.info('Open', outboundOpen);\n  return outboundOpen.serialize();\n};","map":{"version":3,"sources":["/home/ad/Bureau/infof308/src/node_modules/@mysql/xdevapi/lib/Protocol/OutboundHandlers/Expect.js"],"names":["close","require","logger","open","log","exports","encodeClose","outboundClose","create","info","serialize","encodeOpen","expectations","outboundOpen"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,KAAK,GAAGC,OAAO,CAAC,mCAAD,CAArB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,cAAD,CAAtB;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,kCAAD,CAApB;;AAEA,MAAMG,GAAG,GAAGF,MAAM,CAAC,iCAAD,CAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AACAG,OAAO,CAACC,WAAR,GAAsB,YAAY;AAC9B,QAAMC,aAAa,GAAGP,KAAK,CAACQ,MAAN,EAAtB;AACAJ,EAAAA,GAAG,CAACK,IAAJ,CAAS,OAAT,EAAkBF,aAAlB;AAEA,SAAOA,aAAa,CAACG,SAAd,EAAP;AACH,CALD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAL,OAAO,CAACM,UAAR,GAAqB,UAAUC,YAAV,EAAwB;AACzC,QAAMC,YAAY,GAAGV,IAAI,CAACK,MAAL,CAAYI,YAAZ,CAArB;AACAR,EAAAA,GAAG,CAACK,IAAJ,CAAS,MAAT,EAAiBI,YAAjB;AAEA,SAAOA,YAAY,CAACH,SAAb,EAAP;AACH,CALD","sourcesContent":["/*\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License, version 2.0, as\n * published by the Free Software Foundation.\n *\n * This program is also distributed with certain software (including\n * but not limited to OpenSSL) that is licensed under separate terms,\n * as designated in a particular file or component or in included license\n * documentation.  The authors of MySQL hereby grant you an\n * additional permission to link the program and your derivative works\n * with the separately licensed software that they have included with\n * MySQL.\n *\n * Without limiting anything contained in the foregoing, this file,\n * which is part of MySQL Connector/Node.js, is also subject to the\n * Universal FOSS Exception, version 1.0, a copy of which can be found at\n * http://oss.oracle.com/licenses/universal-foss-exception.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License, version 2.0, for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\n'use strict';\n\n/**\n * Mysqlx.Expect outbound message handlers.\n * @private\n * @module handlers.Mysqlx.Expect\n */\n\nconst close = require('../Wrappers/Messages/Expect/Close');\nconst logger = require('../../logger');\nconst open = require('../Wrappers/Messages/Expect/Open');\n\nconst log = logger('protocol:outbound:Mysqlx.Expect');\n\n/**\n * Expectation definition.\n * @private\n * @typedef {Object} Expectation\n * @prop {number} key - basic expectation (EXPECT_NO_ERROR|EXPECT_FIELD_EXIST|EXPECT_DOCID_GENERATED)\n * @prop {string} [value] - condition identifier\n * @prop {number} [operation] - set or unset an expectation\n */\n\n/**\n * Encode a Mysqlx.Expect.Close protobuf message.\n * @function\n * @name module:Expect#encodeClose\n * @returns {Buffer} The buffer-encoded protobuf object.\n */\nexports.encodeClose = function () {\n    const outboundClose = close.create();\n    log.info('Close', outboundClose);\n\n    return outboundClose.serialize();\n};\n\n/**\n * Encode a Mysqlx.Expect.Open protobuf message.\n * @function\n * @name module:Expect#encodeOpen\n * @param {Expectation[]} expectations - list of expectations\n * @returns {Buffer} The buffer-encoded protobuf object.\n */\nexports.encodeOpen = function (expectations) {\n    const outboundOpen = open.create(expectations);\n    log.info('Open', outboundOpen);\n\n    return outboundOpen.serialize();\n};\n"]},"metadata":{},"sourceType":"script"}