{"ast":null,"code":"var _jsxFileName = \"/home/ad/Bureau/infof308/src/src/components/Instance.js\";\nimport React from 'react';\nimport Domino from './Domino';\nimport { v4 as uuidv4 } from 'uuid';\nimport Solution from './Solution';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Instance extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addToSolution = (_top, _bottom) => {\n      const obj = {\n        id: uuidv4(),\n        topText: _top,\n        bottomText: _bottom\n      };\n      const temp = [...this.state.addedDominos];\n      temp.push([uuidv4(), _top, _bottom]);\n      this.setState({\n        addedDominos: temp\n      });\n    };\n\n    this.handleOnDragEnd = result => {\n      if (!result.destination) return;\n      const items = Array.from(this.state.elements);\n      const [reorderedItem] = items.splice(result.source.index, 1);\n      items.splice(result.destination.index, 0, reorderedItem);\n      this.setState({\n        elements: items\n      });\n    };\n\n    this.handleClick = (e, index) => {\n      switch (e.detail) {\n        case 1:\n          console.log(\"1 click \");\n          break;\n\n        case 2:\n          const items = Array.from(this.state.elements);\n          console.log(items.length);\n          const item = items[index];\n          items.splice(index, 0, { ...item,\n            id: uuidv4()\n          });\n          this.setState({\n            elements: items\n          });\n          break;\n\n        default:\n          return;\n      }\n    };\n\n    this.state = {\n      dominos: [],\n      addedDominos: []\n    };\n    this.convertStringToArray();\n  }\n\n  convertStringToArray() {\n    const ConvertedData = this.props.data.split(\",\");\n\n    if (ConvertedData.length % 2 === 0) {\n      for (let i = 0; i < ConvertedData.length; i += 2) {\n        const Obj = {\n          id: uuidv4(),\n          topText: ConvertedData[i],\n          bottomText: ConvertedData[i + 1]\n        };\n        this.state.dominos.push(Obj);\n      }\n    }\n  }\n\n  addElement(top, bottom) {\n    const obj = {\n      id: uuidv4(),\n      topText: top,\n      bottomText: bottom\n    };\n    this.elements.push(obj);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"game\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"elements\",\n          children: this.state.dominos.map((_ref, index) => {\n            let {\n              topText,\n              bottomText\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                onClick: () => this.addToSolution(topText, bottomText),\n                children: /*#__PURE__*/_jsxDEV(Domino, {\n                  topText: topText,\n                  bottomText: bottomText\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Solution, {\n        elements: this.state.addedDominos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Instance;","map":{"version":3,"sources":["/home/ad/Bureau/infof308/src/src/components/Instance.js"],"names":["React","Domino","v4","uuidv4","Solution","DragDropContext","Droppable","Draggable","Instance","Component","constructor","props","addToSolution","_top","_bottom","obj","id","topText","bottomText","temp","state","addedDominos","push","setState","handleOnDragEnd","result","destination","items","Array","from","elements","reorderedItem","splice","source","index","handleClick","e","detail","console","log","length","item","dominos","convertStringToArray","ConvertedData","data","split","i","Obj","addElement","top","bottom","render","map"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Domino from './Domino';\nimport { v4 as uuidv4 } from 'uuid';\nimport Solution from './Solution';\nimport {DragDropContext, Droppable, Draggable} from 'react-beautiful-dnd'\n\nclass Instance extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            dominos : [],\n            addedDominos : []\n        }\n        this.convertStringToArray();\n\n    }\n\n    convertStringToArray(){\n        const ConvertedData = this.props.data.split(\",\");\n        if (ConvertedData.length%2 === 0){\n            for (let i=0; i < ConvertedData.length ; i+=2){\n                const Obj = {id: uuidv4(), topText : ConvertedData[i] , bottomText : ConvertedData[i+1]}\n                this.state.dominos.push(Obj)\n            }\n        }\n    }\n  \n    addToSolution = ( _top, _bottom) =>{\n        const obj = {id : uuidv4(), topText: _top, bottomText :_bottom}\n        const temp = [...this.state.addedDominos]\n        temp.push([ uuidv4(),_top,_bottom]);\n        this.setState({ addedDominos : temp})\n\n    }\n\n    addElement(top, bottom){\n        const obj = {id: uuidv4(), topText : top , bottomText : bottom}\n        this.elements.push(obj)\n    }\n\n    handleOnDragEnd = (result) => {\n        if (!result.destination) return;\n        const items = Array.from(this.state.elements);\n        const [reorderedItem] = items.splice(result.source.index, 1);\n        items.splice(result.destination.index, 0, reorderedItem);\n        this.setState({elements : items});\n      }\n\n    handleClick = (e, index) => {\n        switch (e.detail) {\n          case 1:\n            console.log(\"1 click \");\n            break;\n          case 2:\n            const items = Array.from(this.state.elements);\n            console.log(items.length);\n            const item = items[index];\n            items.splice(index, 0, { ...item, id: uuidv4() });\n            this.setState({elements : items})\n            break;\n          default:\n            return;\n        }\n      };\n\n\n    render(){\n        return (\n            <div>\n                <div id='game'>\n                    <ul className=\"elements\">\n                        {this.state.dominos.map(({topText, bottomText}, index) => {\n                            return (\n                                <li>\n                                    <div onClick={() => this.addToSolution(topText, bottomText)}>\n                                    <Domino topText={topText} bottomText={bottomText}></Domino>\n                                    </div>\n                                </li>\n                                )\n                            }\n                        )\n                    }\n                    </ul>\n                </div>\n                <Solution elements={this.state.addedDominos}/>\n            </div>\n        )\n    }\n}\n\n\n\n\n\nexport default Instance"]},"metadata":{},"sourceType":"module"}