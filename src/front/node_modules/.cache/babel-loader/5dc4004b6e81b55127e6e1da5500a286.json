{"ast":null,"code":"/*\n * Copyright (c) 2019, 2021, Oracle and/or its affiliates.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License, version 2.0, as\n * published by the Free Software Foundation.\n *\n * This program is also distributed with certain software (including\n * but not limited to OpenSSL) that is licensed under separate terms,\n * as designated in a particular file or component or in included license\n * documentation.  The authors of MySQL hereby grant you an\n * additional permission to link the program and your derivative works\n * with the separately licensed software that they have included with\n * MySQL.\n *\n * Without limiting anything contained in the foregoing, this file,\n * which is part of MySQL Connector/Node.js, is also subject to the\n * Universal FOSS Exception, version 1.0, a copy of which can be found at\n * http://oss.oracle.com/licenses/universal-foss-exception.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License, version 2.0, for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA\n */\n'use strict';\n\nconst errors = require('../../../constants/errors');\n\nconst parseQueryParameters = require('./parseQueryParameters');\n\nconst qs = require('querystring');\n\nmodule.exports = parse;\n\nfunction parse(input) {\n  const match = (input || '').trim().match(/^\\?([^#]+)/) || [];\n  const params = parseQueryParameters(match[1], {\n    allowDuplicates: false,\n    ignoreCase: ['connection-attributes'],\n    pctEncoded: true\n  });\n  const attributes = params['connection-attributes'];\n\n  if (!attributes || attributes === 'true') {\n    return {};\n  }\n\n  if (attributes === 'false') {\n    return false;\n  }\n\n  const isArray = attributes.charAt(0) === '[' && attributes.charAt(attributes.length - 1) === ']';\n\n  if (!isArray) {\n    return attributes;\n  }\n\n  const obj = qs.parse(attributes.slice(1, attributes.length - 1), ',', '=', {\n    decodeURIComponent: s => qs.unescape(s.trim())\n  });\n  const duplicates = Object.keys(obj).filter(k => Array.isArray(obj[k]));\n\n  if (!duplicates.length) {\n    return obj;\n  }\n\n  throw new Error(errors.MESSAGES.ER_DEVAPI_DUPLICATE_SESSION_ATTRIBUTE);\n}","map":{"version":3,"sources":["/home/ad/Bureau/infof308/src/node_modules/@mysql/xdevapi/lib/DevAPI/Util/URIParser/parseConnectionAttributes.js"],"names":["errors","require","parseQueryParameters","qs","module","exports","parse","input","match","trim","params","allowDuplicates","ignoreCase","pctEncoded","attributes","isArray","charAt","length","obj","slice","decodeURIComponent","s","unescape","duplicates","Object","keys","filter","k","Array","Error","MESSAGES","ER_DEVAPI_DUPLICATE_SESSION_ATTRIBUTE"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,2BAAD,CAAtB;;AACA,MAAMC,oBAAoB,GAAGD,OAAO,CAAC,wBAAD,CAApC;;AACA,MAAME,EAAE,GAAGF,OAAO,CAAC,aAAD,CAAlB;;AAEAG,MAAM,CAACC,OAAP,GAAiBC,KAAjB;;AAEA,SAASA,KAAT,CAAgBC,KAAhB,EAAuB;AACnB,QAAMC,KAAK,GAAG,CAACD,KAAK,IAAI,EAAV,EAAcE,IAAd,GAAqBD,KAArB,CAA2B,YAA3B,KAA4C,EAA1D;AACA,QAAME,MAAM,GAAGR,oBAAoB,CAACM,KAAK,CAAC,CAAD,CAAN,EAAW;AAAEG,IAAAA,eAAe,EAAE,KAAnB;AAA0BC,IAAAA,UAAU,EAAE,CAAC,uBAAD,CAAtC;AAAiEC,IAAAA,UAAU,EAAE;AAA7E,GAAX,CAAnC;AAEA,QAAMC,UAAU,GAAGJ,MAAM,CAAC,uBAAD,CAAzB;;AAEA,MAAI,CAACI,UAAD,IAAeA,UAAU,KAAK,MAAlC,EAA0C;AACtC,WAAO,EAAP;AACH;;AAED,MAAIA,UAAU,KAAK,OAAnB,EAA4B;AACxB,WAAO,KAAP;AACH;;AAED,QAAMC,OAAO,GAAGD,UAAU,CAACE,MAAX,CAAkB,CAAlB,MAAyB,GAAzB,IAAgCF,UAAU,CAACE,MAAX,CAAkBF,UAAU,CAACG,MAAX,GAAoB,CAAtC,MAA6C,GAA7F;;AAEA,MAAI,CAACF,OAAL,EAAc;AACV,WAAOD,UAAP;AACH;;AAED,QAAMI,GAAG,GAAGf,EAAE,CAACG,KAAH,CAASQ,UAAU,CAACK,KAAX,CAAiB,CAAjB,EAAoBL,UAAU,CAACG,MAAX,GAAoB,CAAxC,CAAT,EAAqD,GAArD,EAA0D,GAA1D,EAA+D;AAAEG,IAAAA,kBAAkB,EAAEC,CAAC,IAAIlB,EAAE,CAACmB,QAAH,CAAYD,CAAC,CAACZ,IAAF,EAAZ;AAA3B,GAA/D,CAAZ;AAEA,QAAMc,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYP,GAAZ,EAAiBQ,MAAjB,CAAwBC,CAAC,IAAIC,KAAK,CAACb,OAAN,CAAcG,GAAG,CAACS,CAAD,CAAjB,CAA7B,CAAnB;;AAEA,MAAI,CAACJ,UAAU,CAACN,MAAhB,EAAwB;AACpB,WAAOC,GAAP;AACH;;AAED,QAAM,IAAIW,KAAJ,CAAU7B,MAAM,CAAC8B,QAAP,CAAgBC,qCAA1B,CAAN;AACH","sourcesContent":["/*\n * Copyright (c) 2019, 2021, Oracle and/or its affiliates.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License, version 2.0, as\n * published by the Free Software Foundation.\n *\n * This program is also distributed with certain software (including\n * but not limited to OpenSSL) that is licensed under separate terms,\n * as designated in a particular file or component or in included license\n * documentation.  The authors of MySQL hereby grant you an\n * additional permission to link the program and your derivative works\n * with the separately licensed software that they have included with\n * MySQL.\n *\n * Without limiting anything contained in the foregoing, this file,\n * which is part of MySQL Connector/Node.js, is also subject to the\n * Universal FOSS Exception, version 1.0, a copy of which can be found at\n * http://oss.oracle.com/licenses/universal-foss-exception.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License, version 2.0, for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\n'use strict';\n\nconst errors = require('../../../constants/errors');\nconst parseQueryParameters = require('./parseQueryParameters');\nconst qs = require('querystring');\n\nmodule.exports = parse;\n\nfunction parse (input) {\n    const match = (input || '').trim().match(/^\\?([^#]+)/) || [];\n    const params = parseQueryParameters(match[1], { allowDuplicates: false, ignoreCase: ['connection-attributes'], pctEncoded: true });\n\n    const attributes = params['connection-attributes'];\n\n    if (!attributes || attributes === 'true') {\n        return {};\n    }\n\n    if (attributes === 'false') {\n        return false;\n    }\n\n    const isArray = attributes.charAt(0) === '[' && attributes.charAt(attributes.length - 1) === ']';\n\n    if (!isArray) {\n        return attributes;\n    }\n\n    const obj = qs.parse(attributes.slice(1, attributes.length - 1), ',', '=', { decodeURIComponent: s => qs.unescape(s.trim()) });\n\n    const duplicates = Object.keys(obj).filter(k => Array.isArray(obj[k]));\n\n    if (!duplicates.length) {\n        return obj;\n    }\n\n    throw new Error(errors.MESSAGES.ER_DEVAPI_DUPLICATE_SESSION_ATTRIBUTE);\n}\n"]},"metadata":{},"sourceType":"script"}