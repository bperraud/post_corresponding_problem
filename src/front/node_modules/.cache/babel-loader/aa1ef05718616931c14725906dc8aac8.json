{"ast":null,"code":"/*\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License, version 2.0, as\n * published by the Free Software Foundation.\n *\n * This program is also distributed with certain software (including\n * but not limited to OpenSSL) that is licensed under separate terms,\n * as designated in a particular file or component or in included license\n * documentation.  The authors of MySQL hereby grant you an\n * additional permission to link the program and your derivative works\n * with the separately licensed software that they have included with\n * MySQL.\n *\n * Without limiting anything contained in the foregoing, this file,\n * which is part of MySQL Connector/Node.js, is also subject to the\n * Universal FOSS Exception, version 1.0, a copy of which can be found at\n * http://oss.oracle.com/licenses/universal-foss-exception.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License, version 2.0, for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA\n */\n'use strict';\n\nconst BaseHandler = require('./BaseHandler');\n\nconst capabilities = require('../Wrappers/Messages/Connection/Capabilities');\n\nconst logger = require('../../logger');\n\nconst util = require('util');\n\nconst log = logger('protocol:inbound:Mysqlx.Connection');\n\nfunction CapabilitiesGetHandler(protocol) {\n  BaseHandler.call(this);\n  this._client = protocol;\n}\n\nmodule.exports = CapabilitiesGetHandler;\nutil.inherits(CapabilitiesGetHandler, BaseHandler);\n\nCapabilitiesGetHandler.prototype[capabilities.MESSAGE_ID] = function (payload, queueDone) {\n  queueDone();\n  const inboundCapabilities = capabilities.deserialize(payload);\n  log.info('Capabilities', inboundCapabilities);\n\n  this._resolve(inboundCapabilities.toObject());\n};","map":{"version":3,"sources":["/home/ad/Bureau/infof308/src/node_modules/@mysql/xdevapi/lib/Protocol/InboundHandlers/CapabilitiesGetHandler.js"],"names":["BaseHandler","require","capabilities","logger","util","log","CapabilitiesGetHandler","protocol","call","_client","module","exports","inherits","prototype","MESSAGE_ID","payload","queueDone","inboundCapabilities","deserialize","info","_resolve","toObject"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,WAAW,GAAGC,OAAO,CAAC,eAAD,CAA3B;;AACA,MAAMC,YAAY,GAAGD,OAAO,CAAC,8CAAD,CAA5B;;AACA,MAAME,MAAM,GAAGF,OAAO,CAAC,cAAD,CAAtB;;AACA,MAAMG,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB;;AAEA,MAAMI,GAAG,GAAGF,MAAM,CAAC,oCAAD,CAAlB;;AAEA,SAASG,sBAAT,CAAiCC,QAAjC,EAA2C;AACvCP,EAAAA,WAAW,CAACQ,IAAZ,CAAiB,IAAjB;AACA,OAAKC,OAAL,GAAeF,QAAf;AACH;;AAEDG,MAAM,CAACC,OAAP,GAAiBL,sBAAjB;AAEAF,IAAI,CAACQ,QAAL,CAAcN,sBAAd,EAAsCN,WAAtC;;AAEAM,sBAAsB,CAACO,SAAvB,CAAiCX,YAAY,CAACY,UAA9C,IAA4D,UAAUC,OAAV,EAAmBC,SAAnB,EAA8B;AACtFA,EAAAA,SAAS;AAET,QAAMC,mBAAmB,GAAGf,YAAY,CAACgB,WAAb,CAAyBH,OAAzB,CAA5B;AACAV,EAAAA,GAAG,CAACc,IAAJ,CAAS,cAAT,EAAyBF,mBAAzB;;AAEA,OAAKG,QAAL,CAAcH,mBAAmB,CAACI,QAApB,EAAd;AACH,CAPD","sourcesContent":["/*\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License, version 2.0, as\n * published by the Free Software Foundation.\n *\n * This program is also distributed with certain software (including\n * but not limited to OpenSSL) that is licensed under separate terms,\n * as designated in a particular file or component or in included license\n * documentation.  The authors of MySQL hereby grant you an\n * additional permission to link the program and your derivative works\n * with the separately licensed software that they have included with\n * MySQL.\n *\n * Without limiting anything contained in the foregoing, this file,\n * which is part of MySQL Connector/Node.js, is also subject to the\n * Universal FOSS Exception, version 1.0, a copy of which can be found at\n * http://oss.oracle.com/licenses/universal-foss-exception.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License, version 2.0, for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\n'use strict';\n\nconst BaseHandler = require('./BaseHandler');\nconst capabilities = require('../Wrappers/Messages/Connection/Capabilities');\nconst logger = require('../../logger');\nconst util = require('util');\n\nconst log = logger('protocol:inbound:Mysqlx.Connection');\n\nfunction CapabilitiesGetHandler (protocol) {\n    BaseHandler.call(this);\n    this._client = protocol;\n}\n\nmodule.exports = CapabilitiesGetHandler;\n\nutil.inherits(CapabilitiesGetHandler, BaseHandler);\n\nCapabilitiesGetHandler.prototype[capabilities.MESSAGE_ID] = function (payload, queueDone) {\n    queueDone();\n\n    const inboundCapabilities = capabilities.deserialize(payload);\n    log.info('Capabilities', inboundCapabilities);\n\n    this._resolve(inboundCapabilities.toObject());\n};\n"]},"metadata":{},"sourceType":"script"}