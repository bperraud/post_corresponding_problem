{"ast":null,"code":"/*\n * Copyright (c) 2017, 2021, Oracle and/or its affiliates.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License, version 2.0, as\n * published by the Free Software Foundation.\n *\n * This program is also distributed with certain software (including\n * but not limited to OpenSSL) that is licensed under separate terms,\n * as designated in a particular file or component or in included license\n * documentation.  The authors of MySQL hereby grant you an\n * additional permission to link the program and your derivative works\n * with the separately licensed software that they have included with\n * MySQL.\n *\n * Without limiting anything contained in the foregoing, this file,\n * which is part of MySQL Connector/Node.js, is also subject to the\n * Universal FOSS Exception, version 1.0, a copy of which can be found at\n * http://oss.oracle.com/licenses/universal-foss-exception.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License, version 2.0, for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA\n */\n'use strict';\n\nconst errors = require('../../../constants/errors');\n\nmodule.exports = parse;\n/**\n * Parse the database schema name (URI path).\n * @private\n * @param {string} input - path\n * @throws {Error} When the schema name is not valid.\n * @returns {string} Schema name.\n */\n\nfunction parse(input) {\n  // TODO(Rui): use default agument values on node >= 6.0.0\n  const match = (input || '').trim().match(/^\\/([^?]+)$/) || [];\n  const validationPattern = /^[a-zA-Z0-9-._~%!$&'()*+,;=:@]*$/;\n  const isValidPath = validationPattern.test(match[1]);\n\n  if (!isValidPath) {\n    throw new Error(errors.MESSAGES.ER_DEVAPI_BAD_CONNECTION_STRING_SCHEMA_NAME);\n  }\n\n  return match[1] && decodeURIComponent(match[1]);\n}","map":{"version":3,"sources":["/home/ad/Bureau/infof308/src/node_modules/@mysql/xdevapi/lib/DevAPI/Util/URIParser/parseSchema.js"],"names":["errors","require","module","exports","parse","input","match","trim","validationPattern","isValidPath","test","Error","MESSAGES","ER_DEVAPI_BAD_CONNECTION_STRING_SCHEMA_NAME","decodeURIComponent"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,2BAAD,CAAtB;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,KAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,KAAT,CAAgBC,KAAhB,EAAuB;AACnB;AACA,QAAMC,KAAK,GAAI,CAACD,KAAK,IAAI,EAAV,EAAcE,IAAd,GAAqBD,KAArB,CAA2B,aAA3B,KAA6C,EAA5D;AAEA,QAAME,iBAAiB,GAAG,kCAA1B;AACA,QAAMC,WAAW,GAAGD,iBAAiB,CAACE,IAAlB,CAAuBJ,KAAK,CAAC,CAAD,CAA5B,CAApB;;AAEA,MAAI,CAACG,WAAL,EAAkB;AACd,UAAM,IAAIE,KAAJ,CAAUX,MAAM,CAACY,QAAP,CAAgBC,2CAA1B,CAAN;AACH;;AAED,SAAOP,KAAK,CAAC,CAAD,CAAL,IAAYQ,kBAAkB,CAACR,KAAK,CAAC,CAAD,CAAN,CAArC;AACH","sourcesContent":["/*\n * Copyright (c) 2017, 2021, Oracle and/or its affiliates.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License, version 2.0, as\n * published by the Free Software Foundation.\n *\n * This program is also distributed with certain software (including\n * but not limited to OpenSSL) that is licensed under separate terms,\n * as designated in a particular file or component or in included license\n * documentation.  The authors of MySQL hereby grant you an\n * additional permission to link the program and your derivative works\n * with the separately licensed software that they have included with\n * MySQL.\n *\n * Without limiting anything contained in the foregoing, this file,\n * which is part of MySQL Connector/Node.js, is also subject to the\n * Universal FOSS Exception, version 1.0, a copy of which can be found at\n * http://oss.oracle.com/licenses/universal-foss-exception.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License, version 2.0, for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\n'use strict';\n\nconst errors = require('../../../constants/errors');\n\nmodule.exports = parse;\n\n/**\n * Parse the database schema name (URI path).\n * @private\n * @param {string} input - path\n * @throws {Error} When the schema name is not valid.\n * @returns {string} Schema name.\n */\nfunction parse (input) {\n    // TODO(Rui): use default agument values on node >= 6.0.0\n    const match = ((input || '').trim().match(/^\\/([^?]+)$/) || []);\n\n    const validationPattern = /^[a-zA-Z0-9-._~%!$&'()*+,;=:@]*$/;\n    const isValidPath = validationPattern.test(match[1]);\n\n    if (!isValidPath) {\n        throw new Error(errors.MESSAGES.ER_DEVAPI_BAD_CONNECTION_STRING_SCHEMA_NAME);\n    }\n\n    return match[1] && decodeURIComponent(match[1]);\n}\n"]},"metadata":{},"sourceType":"script"}