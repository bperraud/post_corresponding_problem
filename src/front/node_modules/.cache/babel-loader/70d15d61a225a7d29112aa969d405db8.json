{"ast":null,"code":"/*\n * Copyright (c) 2017, 2021, Oracle and/or its affiliates.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License, version 2.0, as\n * published by the Free Software Foundation.\n *\n * This program is also distributed with certain software (including\n * but not limited to OpenSSL) that is licensed under separate terms,\n * as designated in a particular file or component or in included license\n * documentation.  The authors of MySQL hereby grant you an\n * additional permission to link the program and your derivative works\n * with the separately licensed software that they have included with\n * MySQL.\n *\n * Without limiting anything contained in the foregoing, this file,\n * which is part of MySQL Connector/Node.js, is also subject to the\n * Universal FOSS Exception, version 1.0, a copy of which can be found at\n * http://oss.oracle.com/licenses/universal-foss-exception.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License, version 2.0, for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA\n */\n'use strict';\n\nconst parseQueryParameters = require('./parseQueryParameters');\n\nmodule.exports = parse;\n\nfunction parseItemList(input) {\n  if (input === '[]') {\n    return [];\n  }\n\n  const match = (input || '[]').match(/^\\[([^\\]]*)\\]$/);\n  const list = !match ? [] : match[1];\n\n  if (!list.length) {\n    return undefined;\n  }\n\n  return list.split(',');\n}\n/**\n * Parse SSL/TLS options.\n * @private\n * @param {string} input - URI querystring\n * @returns {Object} Security section dictionary for URI properties object.\n */\n\n\nfunction parse(input) {\n  // TODO(Rui): use default agument values on node >= 6.0.0\n  const match = (input || '').trim().match(/^\\?([^#]+)/) || [];\n  const params = parseQueryParameters(match[1], {\n    allowDuplicates: false,\n    ignoreCase: ['ssl-mode']\n  });\n  const isSecure = params['ssl-mode'] !== 'disabled';\n  const options = Object.assign({}, params, {\n    'ssl-enabled': isSecure\n  });\n  const versions = parseItemList(params['tls-versions']);\n  const ciphersuites = parseItemList(params['tls-ciphersuites']);\n\n  if (versions) {\n    options['tls-versions'] = versions;\n  }\n\n  if (ciphersuites) {\n    options['tls-ciphersuites'] = ciphersuites;\n  }\n\n  delete options['ssl-mode'];\n  return Object.keys(options).reduce((result, key) => {\n    const match = key.trim().match(/^ssl-(.+)$/) || key.trim().match(/^tls-(.+)$/) || [];\n    return !match[1] ? result : Object.assign(result, {\n      [match[1]]: options[key]\n    });\n  }, {});\n}","map":{"version":3,"sources":["/home/ad/Bureau/infof308/src/node_modules/@mysql/xdevapi/lib/DevAPI/Util/URIParser/parseSecurityOptions.js"],"names":["parseQueryParameters","require","module","exports","parse","parseItemList","input","match","list","length","undefined","split","trim","params","allowDuplicates","ignoreCase","isSecure","options","Object","assign","versions","ciphersuites","keys","reduce","result","key"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,oBAAoB,GAAGC,OAAO,CAAC,wBAAD,CAApC;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,KAAjB;;AAEA,SAASC,aAAT,CAAwBC,KAAxB,EAA+B;AAC3B,MAAIA,KAAK,KAAK,IAAd,EAAoB;AAChB,WAAO,EAAP;AACH;;AAED,QAAMC,KAAK,GAAG,CAACD,KAAK,IAAI,IAAV,EAAgBC,KAAhB,CAAsB,gBAAtB,CAAd;AACA,QAAMC,IAAI,GAAG,CAACD,KAAD,GAAS,EAAT,GAAcA,KAAK,CAAC,CAAD,CAAhC;;AAEA,MAAI,CAACC,IAAI,CAACC,MAAV,EAAkB;AACd,WAAOC,SAAP;AACH;;AAED,SAAOF,IAAI,CAACG,KAAL,CAAW,GAAX,CAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASP,KAAT,CAAgBE,KAAhB,EAAuB;AACnB;AACA,QAAMC,KAAK,GAAG,CAACD,KAAK,IAAI,EAAV,EAAcM,IAAd,GAAqBL,KAArB,CAA2B,YAA3B,KAA4C,EAA1D;AACA,QAAMM,MAAM,GAAGb,oBAAoB,CAACO,KAAK,CAAC,CAAD,CAAN,EAAW;AAAEO,IAAAA,eAAe,EAAE,KAAnB;AAA0BC,IAAAA,UAAU,EAAE,CAAC,UAAD;AAAtC,GAAX,CAAnC;AAEA,QAAMC,QAAQ,GAAGH,MAAM,CAAC,UAAD,CAAN,KAAuB,UAAxC;AACA,QAAMI,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,MAAlB,EAA0B;AAAE,mBAAeG;AAAjB,GAA1B,CAAhB;AAEA,QAAMI,QAAQ,GAAGf,aAAa,CAACQ,MAAM,CAAC,cAAD,CAAP,CAA9B;AACA,QAAMQ,YAAY,GAAGhB,aAAa,CAACQ,MAAM,CAAC,kBAAD,CAAP,CAAlC;;AAEA,MAAIO,QAAJ,EAAc;AACVH,IAAAA,OAAO,CAAC,cAAD,CAAP,GAA0BG,QAA1B;AACH;;AAED,MAAIC,YAAJ,EAAkB;AACdJ,IAAAA,OAAO,CAAC,kBAAD,CAAP,GAA8BI,YAA9B;AACH;;AAED,SAAOJ,OAAO,CAAC,UAAD,CAAd;AAEA,SAAOC,MAAM,CAACI,IAAP,CAAYL,OAAZ,EAAqBM,MAArB,CAA4B,CAACC,MAAD,EAASC,GAAT,KAAiB;AAChD,UAAMlB,KAAK,GAAGkB,GAAG,CAACb,IAAJ,GAAWL,KAAX,CAAiB,YAAjB,KAAkCkB,GAAG,CAACb,IAAJ,GAAWL,KAAX,CAAiB,YAAjB,CAAlC,IAAoE,EAAlF;AAEA,WAAO,CAACA,KAAK,CAAC,CAAD,CAAN,GAAYiB,MAAZ,GAAqBN,MAAM,CAACC,MAAP,CAAcK,MAAd,EAAsB;AAAE,OAACjB,KAAK,CAAC,CAAD,CAAN,GAAYU,OAAO,CAACQ,GAAD;AAArB,KAAtB,CAA5B;AACH,GAJM,EAIJ,EAJI,CAAP;AAKH","sourcesContent":["/*\n * Copyright (c) 2017, 2021, Oracle and/or its affiliates.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License, version 2.0, as\n * published by the Free Software Foundation.\n *\n * This program is also distributed with certain software (including\n * but not limited to OpenSSL) that is licensed under separate terms,\n * as designated in a particular file or component or in included license\n * documentation.  The authors of MySQL hereby grant you an\n * additional permission to link the program and your derivative works\n * with the separately licensed software that they have included with\n * MySQL.\n *\n * Without limiting anything contained in the foregoing, this file,\n * which is part of MySQL Connector/Node.js, is also subject to the\n * Universal FOSS Exception, version 1.0, a copy of which can be found at\n * http://oss.oracle.com/licenses/universal-foss-exception.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License, version 2.0, for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\n'use strict';\n\nconst parseQueryParameters = require('./parseQueryParameters');\n\nmodule.exports = parse;\n\nfunction parseItemList (input) {\n    if (input === '[]') {\n        return [];\n    }\n\n    const match = (input || '[]').match(/^\\[([^\\]]*)\\]$/);\n    const list = !match ? [] : match[1];\n\n    if (!list.length) {\n        return undefined;\n    }\n\n    return list.split(',');\n}\n\n/**\n * Parse SSL/TLS options.\n * @private\n * @param {string} input - URI querystring\n * @returns {Object} Security section dictionary for URI properties object.\n */\nfunction parse (input) {\n    // TODO(Rui): use default agument values on node >= 6.0.0\n    const match = (input || '').trim().match(/^\\?([^#]+)/) || [];\n    const params = parseQueryParameters(match[1], { allowDuplicates: false, ignoreCase: ['ssl-mode'] });\n\n    const isSecure = params['ssl-mode'] !== 'disabled';\n    const options = Object.assign({}, params, { 'ssl-enabled': isSecure });\n\n    const versions = parseItemList(params['tls-versions']);\n    const ciphersuites = parseItemList(params['tls-ciphersuites']);\n\n    if (versions) {\n        options['tls-versions'] = versions;\n    }\n\n    if (ciphersuites) {\n        options['tls-ciphersuites'] = ciphersuites;\n    }\n\n    delete options['ssl-mode'];\n\n    return Object.keys(options).reduce((result, key) => {\n        const match = key.trim().match(/^ssl-(.+)$/) || key.trim().match(/^tls-(.+)$/) || [];\n\n        return !match[1] ? result : Object.assign(result, { [match[1]]: options[key] });\n    }, {});\n}\n"]},"metadata":{},"sourceType":"script"}