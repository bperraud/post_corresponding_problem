{"ast":null,"code":"/*\n * Copyright (c) 2017, 2021, Oracle and/or its affiliates.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License, version 2.0, as\n * published by the Free Software Foundation.\n *\n * This program is also distributed with certain software (including\n * but not limited to OpenSSL) that is licensed under separate terms,\n * as designated in a particular file or component or in included license\n * documentation.  The authors of MySQL hereby grant you an\n * additional permission to link the program and your derivative works\n * with the separately licensed software that they have included with\n * MySQL.\n *\n * Without limiting anything contained in the foregoing, this file,\n * which is part of MySQL Connector/Node.js, is also subject to the\n * Universal FOSS Exception, version 1.0, a copy of which can be found at\n * http://oss.oracle.com/licenses/universal-foss-exception.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License, version 2.0, for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA\n */\n'use strict';\n/**\n * Inserting mixin.\n * @mixin\n * @private\n * @alias Inserting\n * @param {Object} state - Inserting properties\n * @returns {Inserting}\n */\n\nfunction Inserting(state) {\n  state = Object.assign({\n    columns: [],\n    items: [],\n    upsert: false\n  }, state);\n  return {\n    /**\n     * Retrieve the list of column names to map when inserting data.\n     * @function\n     * @private\n     * @name Inserting#getColumns\n     * @returns {string[]} The list of column names.\n     */\n    getColumns() {\n      return state.columns;\n    },\n\n    /**\n     * Retrieve the list of rows or documents to insert.\n     * @function\n     * @private\n     * @name Inserting#getItems\n     * @returns {Object[]|Array[]} The list of items.\n     */\n    getItems() {\n      return state.items;\n    },\n\n    /**\n     * Check if the query is an \"upsert\".\n     * @function\n     * @private\n     * @name Inserting#isUpsert\n     * @returns {boolean}\n     */\n    isUpsert() {\n      return state.upsert;\n    },\n\n    /**\n     * Set the list of rows or documents to insert.\n     * @function\n     * @private\n     * @name Inserting#setItems\n     * @param {Object[]|Array[]} items - item list\n     * @returns {Inserting} The query instance.\n     */\n    setItems(items) {\n      state.items = items;\n      return this;\n    }\n\n  };\n}\n\nmodule.exports = Inserting;","map":{"version":3,"sources":["/home/ad/Bureau/infof308/src/node_modules/@mysql/xdevapi/lib/DevAPI/Inserting.js"],"names":["Inserting","state","Object","assign","columns","items","upsert","getColumns","getItems","isUpsert","setItems","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,SAAT,CAAoBC,KAApB,EAA2B;AACvBA,EAAAA,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAc;AAAEC,IAAAA,OAAO,EAAE,EAAX;AAAeC,IAAAA,KAAK,EAAE,EAAtB;AAA0BC,IAAAA,MAAM,EAAE;AAAlC,GAAd,EAAyDL,KAAzD,CAAR;AAEA,SAAO;AACH;AACR;AACA;AACA;AACA;AACA;AACA;AACQM,IAAAA,UAAU,GAAI;AACV,aAAON,KAAK,CAACG,OAAb;AACH,KAVE;;AAYH;AACR;AACA;AACA;AACA;AACA;AACA;AACQI,IAAAA,QAAQ,GAAI;AACR,aAAOP,KAAK,CAACI,KAAb;AACH,KArBE;;AAuBH;AACR;AACA;AACA;AACA;AACA;AACA;AACQI,IAAAA,QAAQ,GAAI;AACR,aAAOR,KAAK,CAACK,MAAb;AACH,KAhCE;;AAkCH;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQI,IAAAA,QAAQ,CAAEL,KAAF,EAAS;AACbJ,MAAAA,KAAK,CAACI,KAAN,GAAcA,KAAd;AAEA,aAAO,IAAP;AACH;;AA9CE,GAAP;AAgDH;;AAEDM,MAAM,CAACC,OAAP,GAAiBZ,SAAjB","sourcesContent":["/*\n * Copyright (c) 2017, 2021, Oracle and/or its affiliates.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License, version 2.0, as\n * published by the Free Software Foundation.\n *\n * This program is also distributed with certain software (including\n * but not limited to OpenSSL) that is licensed under separate terms,\n * as designated in a particular file or component or in included license\n * documentation.  The authors of MySQL hereby grant you an\n * additional permission to link the program and your derivative works\n * with the separately licensed software that they have included with\n * MySQL.\n *\n * Without limiting anything contained in the foregoing, this file,\n * which is part of MySQL Connector/Node.js, is also subject to the\n * Universal FOSS Exception, version 1.0, a copy of which can be found at\n * http://oss.oracle.com/licenses/universal-foss-exception.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License, version 2.0, for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\n'use strict';\n\n/**\n * Inserting mixin.\n * @mixin\n * @private\n * @alias Inserting\n * @param {Object} state - Inserting properties\n * @returns {Inserting}\n */\nfunction Inserting (state) {\n    state = Object.assign({ columns: [], items: [], upsert: false }, state);\n\n    return {\n        /**\n         * Retrieve the list of column names to map when inserting data.\n         * @function\n         * @private\n         * @name Inserting#getColumns\n         * @returns {string[]} The list of column names.\n         */\n        getColumns () {\n            return state.columns;\n        },\n\n        /**\n         * Retrieve the list of rows or documents to insert.\n         * @function\n         * @private\n         * @name Inserting#getItems\n         * @returns {Object[]|Array[]} The list of items.\n         */\n        getItems () {\n            return state.items;\n        },\n\n        /**\n         * Check if the query is an \"upsert\".\n         * @function\n         * @private\n         * @name Inserting#isUpsert\n         * @returns {boolean}\n         */\n        isUpsert () {\n            return state.upsert;\n        },\n\n        /**\n         * Set the list of rows or documents to insert.\n         * @function\n         * @private\n         * @name Inserting#setItems\n         * @param {Object[]|Array[]} items - item list\n         * @returns {Inserting} The query instance.\n         */\n        setItems (items) {\n            state.items = items;\n\n            return this;\n        }\n    };\n}\n\nmodule.exports = Inserting;\n"]},"metadata":{},"sourceType":"script"}