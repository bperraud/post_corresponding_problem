{"ast":null,"code":"/*\n * Copyright (c) 2017, 2021, Oracle and/or its affiliates.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License, version 2.0, as\n * published by the Free Software Foundation.\n *\n * This program is also distributed with certain software (including\n * but not limited to OpenSSL) that is licensed under separate terms,\n * as designated in a particular file or component or in included license\n * documentation.  The authors of MySQL hereby grant you an\n * additional permission to link the program and your derivative works\n * with the separately licensed software that they have included with\n * MySQL.\n *\n * Without limiting anything contained in the foregoing, this file,\n * which is part of MySQL Connector/Node.js, is also subject to the\n * Universal FOSS Exception, version 1.0, a copy of which can be found at\n * http://oss.oracle.com/licenses/universal-foss-exception.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License, version 2.0, for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA\n */\n'use strict';\n\nconst Parser = require('./lib/index.js');\n\nfunction parse(expr, options) {\n  return Parser(Object.assign({}, options, {\n    input: expr\n  })).tryParse(expr);\n}\n\nmodule.exports = {\n  parse,\n  Mode: Parser.Mode,\n  Type: Parser.Type\n};","map":{"version":3,"sources":["/home/ad/Bureau/infof308/src/node_modules/@mysql/xdevapi/lib/ExprParser/index.js"],"names":["Parser","require","parse","expr","options","Object","assign","input","tryParse","module","exports","Mode","Type"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,gBAAD,CAAtB;;AAEA,SAASC,KAAT,CAAgBC,IAAhB,EAAsBC,OAAtB,EAA+B;AAC3B,SAAOJ,MAAM,CAACK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,OAAlB,EAA2B;AAAEG,IAAAA,KAAK,EAAEJ;AAAT,GAA3B,CAAD,CAAN,CAAoDK,QAApD,CAA6DL,IAA7D,CAAP;AACH;;AAEDM,MAAM,CAACC,OAAP,GAAiB;AAAER,EAAAA,KAAF;AAASS,EAAAA,IAAI,EAAEX,MAAM,CAACW,IAAtB;AAA4BC,EAAAA,IAAI,EAAEZ,MAAM,CAACY;AAAzC,CAAjB","sourcesContent":["/*\n * Copyright (c) 2017, 2021, Oracle and/or its affiliates.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License, version 2.0, as\n * published by the Free Software Foundation.\n *\n * This program is also distributed with certain software (including\n * but not limited to OpenSSL) that is licensed under separate terms,\n * as designated in a particular file or component or in included license\n * documentation.  The authors of MySQL hereby grant you an\n * additional permission to link the program and your derivative works\n * with the separately licensed software that they have included with\n * MySQL.\n *\n * Without limiting anything contained in the foregoing, this file,\n * which is part of MySQL Connector/Node.js, is also subject to the\n * Universal FOSS Exception, version 1.0, a copy of which can be found at\n * http://oss.oracle.com/licenses/universal-foss-exception.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License, version 2.0, for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\n'use strict';\n\nconst Parser = require('./lib/index.js');\n\nfunction parse (expr, options) {\n    return Parser(Object.assign({}, options, { input: expr })).tryParse(expr);\n}\n\nmodule.exports = { parse, Mode: Parser.Mode, Type: Parser.Type };\n"]},"metadata":{},"sourceType":"script"}