{"ast":null,"code":"/*\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License, version 2.0, as\n * published by the Free Software Foundation.\n *\n * This program is also distributed with certain software (including\n * but not limited to OpenSSL) that is licensed under separate terms,\n * as designated in a particular file or component or in included license\n * documentation.  The authors of MySQL hereby grant you an\n * additional permission to link the program and your derivative works\n * with the separately licensed software that they have included with\n * MySQL.\n *\n * Without limiting anything contained in the foregoing, this file,\n * which is part of MySQL Connector/Node.js, is also subject to the\n * Universal FOSS Exception, version 1.0, a copy of which can be found at\n * http://oss.oracle.com/licenses/universal-foss-exception.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License, version 2.0, for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA\n */\n'use strict';\n\nconst AuthenticateOkStub = require('../../../Stubs/mysqlx_session_pb').AuthenticateOk;\n\nconst ServerMessagesStub = require('../../../Stubs/mysqlx_pb').ServerMessages.Type;\n\nconst bytes = require('../../ScalarValues/bytes');\n\nconst tokenizable = require('../../Traits/Tokenizable');\n\nconst wraps = require('../../Traits/Wraps');\n/**\n * @private\n * @alias module:adapters.Mysqlx.Session.AuthenticateOk\n * @param {proto.Mysqlx.Session.AuthenticateOk} proto - protobuf stub\n * @returns {module:adapters.Mysqlx.Session.AuthenticateOk}\n */\n\n\nfunction AuthenticateOk(proto) {\n  return Object.assign({}, tokenizable(proto), wraps(proto));\n}\n/**\n * Creates a wrapper from a raw X Protocol message payload.\n * @returns {module:adapters.Mysqlx.Session.AuthenticateOk}\n */\n\n\nAuthenticateOk.deserialize = function (buffer) {\n  return AuthenticateOk(AuthenticateOkStub.deserializeBinary(bytes.deserialize(buffer)));\n};\n\nAuthenticateOk.MESSAGE_ID = ServerMessagesStub.SESS_AUTHENTICATE_OK;\nmodule.exports = AuthenticateOk;","map":{"version":3,"sources":["/home/ad/Bureau/infof308/src/node_modules/@mysql/xdevapi/lib/Protocol/Wrappers/Messages/Session/AuthenticateOk.js"],"names":["AuthenticateOkStub","require","AuthenticateOk","ServerMessagesStub","ServerMessages","Type","bytes","tokenizable","wraps","proto","Object","assign","deserialize","buffer","deserializeBinary","MESSAGE_ID","SESS_AUTHENTICATE_OK","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,kBAAkB,GAAGC,OAAO,CAAC,kCAAD,CAAP,CAA4CC,cAAvE;;AACA,MAAMC,kBAAkB,GAAGF,OAAO,CAAC,0BAAD,CAAP,CAAoCG,cAApC,CAAmDC,IAA9E;;AACA,MAAMC,KAAK,GAAGL,OAAO,CAAC,0BAAD,CAArB;;AACA,MAAMM,WAAW,GAAGN,OAAO,CAAC,0BAAD,CAA3B;;AACA,MAAMO,KAAK,GAAGP,OAAO,CAAC,oBAAD,CAArB;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,cAAT,CAAyBO,KAAzB,EAAgC;AAC5B,SAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,WAAW,CAACE,KAAD,CAA7B,EAAsCD,KAAK,CAACC,KAAD,CAA3C,CAAP;AACH;AAED;AACA;AACA;AACA;;;AACAP,cAAc,CAACU,WAAf,GAA6B,UAAUC,MAAV,EAAkB;AAC3C,SAAOX,cAAc,CAACF,kBAAkB,CAACc,iBAAnB,CAAqCR,KAAK,CAACM,WAAN,CAAkBC,MAAlB,CAArC,CAAD,CAArB;AACH,CAFD;;AAIAX,cAAc,CAACa,UAAf,GAA4BZ,kBAAkB,CAACa,oBAA/C;AAEAC,MAAM,CAACC,OAAP,GAAiBhB,cAAjB","sourcesContent":["/*\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License, version 2.0, as\n * published by the Free Software Foundation.\n *\n * This program is also distributed with certain software (including\n * but not limited to OpenSSL) that is licensed under separate terms,\n * as designated in a particular file or component or in included license\n * documentation.  The authors of MySQL hereby grant you an\n * additional permission to link the program and your derivative works\n * with the separately licensed software that they have included with\n * MySQL.\n *\n * Without limiting anything contained in the foregoing, this file,\n * which is part of MySQL Connector/Node.js, is also subject to the\n * Universal FOSS Exception, version 1.0, a copy of which can be found at\n * http://oss.oracle.com/licenses/universal-foss-exception.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License, version 2.0, for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\n'use strict';\n\nconst AuthenticateOkStub = require('../../../Stubs/mysqlx_session_pb').AuthenticateOk;\nconst ServerMessagesStub = require('../../../Stubs/mysqlx_pb').ServerMessages.Type;\nconst bytes = require('../../ScalarValues/bytes');\nconst tokenizable = require('../../Traits/Tokenizable');\nconst wraps = require('../../Traits/Wraps');\n\n/**\n * @private\n * @alias module:adapters.Mysqlx.Session.AuthenticateOk\n * @param {proto.Mysqlx.Session.AuthenticateOk} proto - protobuf stub\n * @returns {module:adapters.Mysqlx.Session.AuthenticateOk}\n */\nfunction AuthenticateOk (proto) {\n    return Object.assign({}, tokenizable(proto), wraps(proto));\n}\n\n/**\n * Creates a wrapper from a raw X Protocol message payload.\n * @returns {module:adapters.Mysqlx.Session.AuthenticateOk}\n */\nAuthenticateOk.deserialize = function (buffer) {\n    return AuthenticateOk(AuthenticateOkStub.deserializeBinary(bytes.deserialize(buffer)));\n};\n\nAuthenticateOk.MESSAGE_ID = ServerMessagesStub.SESS_AUTHENTICATE_OK;\n\nmodule.exports = AuthenticateOk;\n"]},"metadata":{},"sourceType":"script"}