{"ast":null,"code":"/*\n * Copyright (c) 2017, 2021, Oracle and/or its affiliates.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License, version 2.0, as\n * published by the Free Software Foundation.\n *\n * This program is also distributed with certain software (including\n * but not limited to OpenSSL) that is licensed under separate terms,\n * as designated in a particular file or component or in included license\n * documentation.  The authors of MySQL hereby grant you an\n * additional permission to link the program and your derivative works\n * with the separately licensed software that they have included with\n * MySQL.\n *\n * Without limiting anything contained in the foregoing, this file,\n * which is part of MySQL Connector/Node.js, is also subject to the\n * Universal FOSS Exception, version 1.0, a copy of which can be found at\n * http://oss.oracle.com/licenses/universal-foss-exception.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License, version 2.0, for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\nvar jspb = require('google-protobuf');\n\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar google_protobuf_descriptor_pb = require('google-protobuf/google/protobuf/descriptor_pb.js');\n\ngoog.exportSymbol('proto.Mysqlx.ClientMessages', null, global);\ngoog.exportSymbol('proto.Mysqlx.ClientMessages.Type', null, global);\ngoog.exportSymbol('proto.Mysqlx.Error', null, global);\ngoog.exportSymbol('proto.Mysqlx.Error.Severity', null, global);\ngoog.exportSymbol('proto.Mysqlx.Ok', null, global);\ngoog.exportSymbol('proto.Mysqlx.ServerMessages', null, global);\ngoog.exportSymbol('proto.Mysqlx.ServerMessages.Type', null, global);\ngoog.exportSymbol('proto.Mysqlx.clientMessageId', null, global);\ngoog.exportSymbol('proto.Mysqlx.serverMessageId', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.Mysqlx.ClientMessages = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Mysqlx.ClientMessages, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.Mysqlx.ClientMessages.displayName = 'proto.Mysqlx.ClientMessages';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Mysqlx.ClientMessages.prototype.toObject = function (opt_includeInstance) {\n    return proto.Mysqlx.ClientMessages.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Mysqlx.ClientMessages} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Mysqlx.ClientMessages.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.ClientMessages}\n */\n\n\nproto.Mysqlx.ClientMessages.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.ClientMessages();\n  return proto.Mysqlx.ClientMessages.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.ClientMessages} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.ClientMessages}\n */\n\n\nproto.Mysqlx.ClientMessages.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Mysqlx.ClientMessages.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.ClientMessages.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.ClientMessages} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Mysqlx.ClientMessages.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n/**\n * @enum {number}\n */\n\n\nproto.Mysqlx.ClientMessages.Type = {\n  CON_CAPABILITIES_GET: 1,\n  CON_CAPABILITIES_SET: 2,\n  CON_CLOSE: 3,\n  SESS_AUTHENTICATE_START: 4,\n  SESS_AUTHENTICATE_CONTINUE: 5,\n  SESS_RESET: 6,\n  SESS_CLOSE: 7,\n  SQL_STMT_EXECUTE: 12,\n  CRUD_FIND: 17,\n  CRUD_INSERT: 18,\n  CRUD_UPDATE: 19,\n  CRUD_DELETE: 20,\n  EXPECT_OPEN: 24,\n  EXPECT_CLOSE: 25,\n  CRUD_CREATE_VIEW: 30,\n  CRUD_MODIFY_VIEW: 31,\n  CRUD_DROP_VIEW: 32,\n  PREPARE_PREPARE: 40,\n  PREPARE_EXECUTE: 41,\n  PREPARE_DEALLOCATE: 42,\n  CURSOR_OPEN: 43,\n  CURSOR_CLOSE: 44,\n  CURSOR_FETCH: 45\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.Mysqlx.ServerMessages = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Mysqlx.ServerMessages, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.Mysqlx.ServerMessages.displayName = 'proto.Mysqlx.ServerMessages';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Mysqlx.ServerMessages.prototype.toObject = function (opt_includeInstance) {\n    return proto.Mysqlx.ServerMessages.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Mysqlx.ServerMessages} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Mysqlx.ServerMessages.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.ServerMessages}\n */\n\n\nproto.Mysqlx.ServerMessages.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.ServerMessages();\n  return proto.Mysqlx.ServerMessages.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.ServerMessages} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.ServerMessages}\n */\n\n\nproto.Mysqlx.ServerMessages.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Mysqlx.ServerMessages.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.ServerMessages.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.ServerMessages} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Mysqlx.ServerMessages.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n/**\n * @enum {number}\n */\n\n\nproto.Mysqlx.ServerMessages.Type = {\n  OK: 0,\n  ERROR: 1,\n  CONN_CAPABILITIES: 2,\n  SESS_AUTHENTICATE_CONTINUE: 3,\n  SESS_AUTHENTICATE_OK: 4,\n  NOTICE: 11,\n  RESULTSET_COLUMN_META_DATA: 12,\n  RESULTSET_ROW: 13,\n  RESULTSET_FETCH_DONE: 14,\n  RESULTSET_FETCH_SUSPENDED: 15,\n  RESULTSET_FETCH_DONE_MORE_RESULTSETS: 16,\n  SQL_STMT_EXECUTE_OK: 17,\n  RESULTSET_FETCH_DONE_MORE_OUT_PARAMS: 18\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.Mysqlx.Ok = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Mysqlx.Ok, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.Mysqlx.Ok.displayName = 'proto.Mysqlx.Ok';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Mysqlx.Ok.prototype.toObject = function (opt_includeInstance) {\n    return proto.Mysqlx.Ok.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Mysqlx.Ok} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Mysqlx.Ok.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      msg: jspb.Message.getField(msg, 1)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Ok}\n */\n\n\nproto.Mysqlx.Ok.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Ok();\n  return proto.Mysqlx.Ok.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Ok} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Ok}\n */\n\n\nproto.Mysqlx.Ok.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setMsg(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Mysqlx.Ok.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Ok.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Ok} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Mysqlx.Ok.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f =\n  /** @type {string} */\n  jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string msg = 1;\n * @return {string}\n */\n\n\nproto.Mysqlx.Ok.prototype.getMsg = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.Mysqlx.Ok.prototype.setMsg = function (value) {\n  jspb.Message.setField(this, 1, value);\n};\n\nproto.Mysqlx.Ok.prototype.clearMsg = function () {\n  jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Mysqlx.Ok.prototype.hasMsg = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Mysqlx.Error = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Mysqlx.Error, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.Mysqlx.Error.displayName = 'proto.Mysqlx.Error';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Mysqlx.Error.prototype.toObject = function (opt_includeInstance) {\n    return proto.Mysqlx.Error.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Mysqlx.Error} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Mysqlx.Error.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      severity: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      code: jspb.Message.getField(msg, 2),\n      sqlState: jspb.Message.getField(msg, 4),\n      msg: jspb.Message.getField(msg, 3)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Error}\n */\n\n\nproto.Mysqlx.Error.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Error();\n  return proto.Mysqlx.Error.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Error} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Error}\n */\n\n\nproto.Mysqlx.Error.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!proto.Mysqlx.Error.Severity} */\n        reader.readEnum();\n        msg.setSeverity(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setCode(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setSqlState(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setMsg(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Mysqlx.Error.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Error.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Error} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Mysqlx.Error.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f =\n  /** @type {!proto.Mysqlx.Error.Severity} */\n  jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeEnum(1, f);\n  }\n\n  f =\n  /** @type {number} */\n  jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeUint32(2, f);\n  }\n\n  f =\n  /** @type {string} */\n  jspb.Message.getField(message, 4);\n\n  if (f != null) {\n    writer.writeString(4, f);\n  }\n\n  f =\n  /** @type {string} */\n  jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeString(3, f);\n  }\n};\n/**\n * @enum {number}\n */\n\n\nproto.Mysqlx.Error.Severity = {\n  ERROR: 0,\n  FATAL: 1\n};\n/**\n * optional Severity severity = 1;\n * @return {!proto.Mysqlx.Error.Severity}\n */\n\nproto.Mysqlx.Error.prototype.getSeverity = function () {\n  return (\n    /** @type {!proto.Mysqlx.Error.Severity} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/** @param {!proto.Mysqlx.Error.Severity} value */\n\n\nproto.Mysqlx.Error.prototype.setSeverity = function (value) {\n  jspb.Message.setField(this, 1, value);\n};\n\nproto.Mysqlx.Error.prototype.clearSeverity = function () {\n  jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Mysqlx.Error.prototype.hasSeverity = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * required uint32 code = 2;\n * @return {number}\n */\n\n\nproto.Mysqlx.Error.prototype.getCode = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.Mysqlx.Error.prototype.setCode = function (value) {\n  jspb.Message.setField(this, 2, value);\n};\n\nproto.Mysqlx.Error.prototype.clearCode = function () {\n  jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Mysqlx.Error.prototype.hasCode = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * required string sql_state = 4;\n * @return {string}\n */\n\n\nproto.Mysqlx.Error.prototype.getSqlState = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 4, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.Mysqlx.Error.prototype.setSqlState = function (value) {\n  jspb.Message.setField(this, 4, value);\n};\n\nproto.Mysqlx.Error.prototype.clearSqlState = function () {\n  jspb.Message.setField(this, 4, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Mysqlx.Error.prototype.hasSqlState = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n/**\n * required string msg = 3;\n * @return {string}\n */\n\n\nproto.Mysqlx.Error.prototype.getMsg = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.Mysqlx.Error.prototype.setMsg = function (value) {\n  jspb.Message.setField(this, 3, value);\n};\n\nproto.Mysqlx.Error.prototype.clearMsg = function () {\n  jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Mysqlx.Error.prototype.hasMsg = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * A tuple of {field number, class constructor} for the extension\n * field named `clientMessageId`.\n * @type {!jspb.ExtensionFieldInfo.<!proto.Mysqlx.ClientMessages.Type>}\n */\n\n\nproto.Mysqlx.clientMessageId = new jspb.ExtensionFieldInfo(100001, {\n  clientMessageId: 0\n}, null,\n/** @type {?function((boolean|undefined),!jspb.Message=): !Object} */\nnull, 0);\ngoogle_protobuf_descriptor_pb.MessageOptions.extensionsBinary[100001] = new jspb.ExtensionFieldBinaryInfo(proto.Mysqlx.clientMessageId, jspb.BinaryReader.prototype.readEnum, jspb.BinaryWriter.prototype.writeEnum, undefined, undefined, false); // This registers the extension field with the extended class, so that\n// toObject() will function correctly.\n\ngoogle_protobuf_descriptor_pb.MessageOptions.extensions[100001] = proto.Mysqlx.clientMessageId;\n/**\n * A tuple of {field number, class constructor} for the extension\n * field named `serverMessageId`.\n * @type {!jspb.ExtensionFieldInfo.<!proto.Mysqlx.ServerMessages.Type>}\n */\n\nproto.Mysqlx.serverMessageId = new jspb.ExtensionFieldInfo(100002, {\n  serverMessageId: 0\n}, null,\n/** @type {?function((boolean|undefined),!jspb.Message=): !Object} */\nnull, 0);\ngoogle_protobuf_descriptor_pb.MessageOptions.extensionsBinary[100002] = new jspb.ExtensionFieldBinaryInfo(proto.Mysqlx.serverMessageId, jspb.BinaryReader.prototype.readEnum, jspb.BinaryWriter.prototype.writeEnum, undefined, undefined, false); // This registers the extension field with the extended class, so that\n// toObject() will function correctly.\n\ngoogle_protobuf_descriptor_pb.MessageOptions.extensions[100002] = proto.Mysqlx.serverMessageId;\ngoog.object.extend(exports, proto.Mysqlx);","map":{"version":3,"sources":["/home/ad/Bureau/infof308/src/node_modules/@mysql/xdevapi/lib/Protocol/Stubs/mysqlx_pb.js"],"names":["jspb","require","goog","global","Function","google_protobuf_descriptor_pb","exportSymbol","proto","Mysqlx","ClientMessages","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","Type","CON_CAPABILITIES_GET","CON_CAPABILITIES_SET","CON_CLOSE","SESS_AUTHENTICATE_START","SESS_AUTHENTICATE_CONTINUE","SESS_RESET","SESS_CLOSE","SQL_STMT_EXECUTE","CRUD_FIND","CRUD_INSERT","CRUD_UPDATE","CRUD_DELETE","EXPECT_OPEN","EXPECT_CLOSE","CRUD_CREATE_VIEW","CRUD_MODIFY_VIEW","CRUD_DROP_VIEW","PREPARE_PREPARE","PREPARE_EXECUTE","PREPARE_DEALLOCATE","CURSOR_OPEN","CURSOR_CLOSE","CURSOR_FETCH","ServerMessages","OK","ERROR","CONN_CAPABILITIES","SESS_AUTHENTICATE_OK","NOTICE","RESULTSET_COLUMN_META_DATA","RESULTSET_ROW","RESULTSET_FETCH_DONE","RESULTSET_FETCH_SUSPENDED","RESULTSET_FETCH_DONE_MORE_RESULTSETS","SQL_STMT_EXECUTE_OK","RESULTSET_FETCH_DONE_MORE_OUT_PARAMS","Ok","getField","value","readString","setMsg","writeString","getMsg","getFieldWithDefault","setField","clearMsg","hasMsg","Error","severity","code","sqlState","readEnum","setSeverity","readUint32","setCode","setSqlState","writeEnum","writeUint32","Severity","FATAL","getSeverity","clearSeverity","hasSeverity","getCode","clearCode","hasCode","getSqlState","clearSqlState","hasSqlState","clientMessageId","ExtensionFieldInfo","MessageOptions","extensionsBinary","ExtensionFieldBinaryInfo","extensions","serverMessageId","object","extend","exports"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2017, 2021, Oracle and/or its affiliates.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License, version 2.0, as\n * published by the Free Software Foundation.\n *\n * This program is also distributed with certain software (including\n * but not limited to OpenSSL) that is licensed under separate terms,\n * as designated in a particular file or component or in included license\n * documentation.  The authors of MySQL hereby grant you an\n * additional permission to link the program and your derivative works\n * with the separately licensed software that they have included with\n * MySQL.\n *\n * Without limiting anything contained in the foregoing, this file,\n * which is part of MySQL Connector/Node.js, is also subject to the\n * Universal FOSS Exception, version 1.0, a copy of which can be found at\n * http://oss.oracle.com/licenses/universal-foss-exception.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License, version 2.0, for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar google_protobuf_descriptor_pb = require('google-protobuf/google/protobuf/descriptor_pb.js');\ngoog.exportSymbol('proto.Mysqlx.ClientMessages', null, global);\ngoog.exportSymbol('proto.Mysqlx.ClientMessages.Type', null, global);\ngoog.exportSymbol('proto.Mysqlx.Error', null, global);\ngoog.exportSymbol('proto.Mysqlx.Error.Severity', null, global);\ngoog.exportSymbol('proto.Mysqlx.Ok', null, global);\ngoog.exportSymbol('proto.Mysqlx.ServerMessages', null, global);\ngoog.exportSymbol('proto.Mysqlx.ServerMessages.Type', null, global);\ngoog.exportSymbol('proto.Mysqlx.clientMessageId', null, global);\ngoog.exportSymbol('proto.Mysqlx.serverMessageId', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Mysqlx.ClientMessages = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Mysqlx.ClientMessages, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Mysqlx.ClientMessages.displayName = 'proto.Mysqlx.ClientMessages';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Mysqlx.ClientMessages.prototype.toObject = function(opt_includeInstance) {\n  return proto.Mysqlx.ClientMessages.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Mysqlx.ClientMessages} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.ClientMessages.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.ClientMessages}\n */\nproto.Mysqlx.ClientMessages.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.ClientMessages;\n  return proto.Mysqlx.ClientMessages.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.ClientMessages} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.ClientMessages}\n */\nproto.Mysqlx.ClientMessages.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Mysqlx.ClientMessages.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.ClientMessages.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.ClientMessages} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.ClientMessages.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n/**\n * @enum {number}\n */\nproto.Mysqlx.ClientMessages.Type = {\n  CON_CAPABILITIES_GET: 1,\n  CON_CAPABILITIES_SET: 2,\n  CON_CLOSE: 3,\n  SESS_AUTHENTICATE_START: 4,\n  SESS_AUTHENTICATE_CONTINUE: 5,\n  SESS_RESET: 6,\n  SESS_CLOSE: 7,\n  SQL_STMT_EXECUTE: 12,\n  CRUD_FIND: 17,\n  CRUD_INSERT: 18,\n  CRUD_UPDATE: 19,\n  CRUD_DELETE: 20,\n  EXPECT_OPEN: 24,\n  EXPECT_CLOSE: 25,\n  CRUD_CREATE_VIEW: 30,\n  CRUD_MODIFY_VIEW: 31,\n  CRUD_DROP_VIEW: 32,\n  PREPARE_PREPARE: 40,\n  PREPARE_EXECUTE: 41,\n  PREPARE_DEALLOCATE: 42,\n  CURSOR_OPEN: 43,\n  CURSOR_CLOSE: 44,\n  CURSOR_FETCH: 45\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Mysqlx.ServerMessages = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Mysqlx.ServerMessages, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Mysqlx.ServerMessages.displayName = 'proto.Mysqlx.ServerMessages';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Mysqlx.ServerMessages.prototype.toObject = function(opt_includeInstance) {\n  return proto.Mysqlx.ServerMessages.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Mysqlx.ServerMessages} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.ServerMessages.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.ServerMessages}\n */\nproto.Mysqlx.ServerMessages.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.ServerMessages;\n  return proto.Mysqlx.ServerMessages.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.ServerMessages} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.ServerMessages}\n */\nproto.Mysqlx.ServerMessages.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Mysqlx.ServerMessages.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.ServerMessages.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.ServerMessages} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.ServerMessages.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n/**\n * @enum {number}\n */\nproto.Mysqlx.ServerMessages.Type = {\n  OK: 0,\n  ERROR: 1,\n  CONN_CAPABILITIES: 2,\n  SESS_AUTHENTICATE_CONTINUE: 3,\n  SESS_AUTHENTICATE_OK: 4,\n  NOTICE: 11,\n  RESULTSET_COLUMN_META_DATA: 12,\n  RESULTSET_ROW: 13,\n  RESULTSET_FETCH_DONE: 14,\n  RESULTSET_FETCH_SUSPENDED: 15,\n  RESULTSET_FETCH_DONE_MORE_RESULTSETS: 16,\n  SQL_STMT_EXECUTE_OK: 17,\n  RESULTSET_FETCH_DONE_MORE_OUT_PARAMS: 18\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Mysqlx.Ok = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Mysqlx.Ok, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Mysqlx.Ok.displayName = 'proto.Mysqlx.Ok';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Mysqlx.Ok.prototype.toObject = function(opt_includeInstance) {\n  return proto.Mysqlx.Ok.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Mysqlx.Ok} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Ok.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    msg: jspb.Message.getField(msg, 1)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Ok}\n */\nproto.Mysqlx.Ok.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Ok;\n  return proto.Mysqlx.Ok.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Ok} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Ok}\n */\nproto.Mysqlx.Ok.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMsg(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Mysqlx.Ok.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Ok.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Ok} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Ok.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string msg = 1;\n * @return {string}\n */\nproto.Mysqlx.Ok.prototype.getMsg = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Mysqlx.Ok.prototype.setMsg = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.Mysqlx.Ok.prototype.clearMsg = function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Mysqlx.Ok.prototype.hasMsg = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Mysqlx.Error = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Mysqlx.Error, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Mysqlx.Error.displayName = 'proto.Mysqlx.Error';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Mysqlx.Error.prototype.toObject = function(opt_includeInstance) {\n  return proto.Mysqlx.Error.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Mysqlx.Error} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Error.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    severity: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    code: jspb.Message.getField(msg, 2),\n    sqlState: jspb.Message.getField(msg, 4),\n    msg: jspb.Message.getField(msg, 3)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Error}\n */\nproto.Mysqlx.Error.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Error;\n  return proto.Mysqlx.Error.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Error} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Error}\n */\nproto.Mysqlx.Error.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.Mysqlx.Error.Severity} */ (reader.readEnum());\n      msg.setSeverity(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setCode(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqlState(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMsg(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Mysqlx.Error.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Error.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Error} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Error.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {!proto.Mysqlx.Error.Severity} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeUint32(\n      2,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 4));\n  if (f != null) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.Mysqlx.Error.Severity = {\n  ERROR: 0,\n  FATAL: 1\n};\n\n/**\n * optional Severity severity = 1;\n * @return {!proto.Mysqlx.Error.Severity}\n */\nproto.Mysqlx.Error.prototype.getSeverity = function() {\n  return /** @type {!proto.Mysqlx.Error.Severity} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {!proto.Mysqlx.Error.Severity} value */\nproto.Mysqlx.Error.prototype.setSeverity = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.Mysqlx.Error.prototype.clearSeverity = function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Mysqlx.Error.prototype.hasSeverity = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * required uint32 code = 2;\n * @return {number}\n */\nproto.Mysqlx.Error.prototype.getCode = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.Mysqlx.Error.prototype.setCode = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\nproto.Mysqlx.Error.prototype.clearCode = function() {\n  jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Mysqlx.Error.prototype.hasCode = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * required string sql_state = 4;\n * @return {string}\n */\nproto.Mysqlx.Error.prototype.getSqlState = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Mysqlx.Error.prototype.setSqlState = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\nproto.Mysqlx.Error.prototype.clearSqlState = function() {\n  jspb.Message.setField(this, 4, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Mysqlx.Error.prototype.hasSqlState = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * required string msg = 3;\n * @return {string}\n */\nproto.Mysqlx.Error.prototype.getMsg = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Mysqlx.Error.prototype.setMsg = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\nproto.Mysqlx.Error.prototype.clearMsg = function() {\n  jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Mysqlx.Error.prototype.hasMsg = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n/**\n * A tuple of {field number, class constructor} for the extension\n * field named `clientMessageId`.\n * @type {!jspb.ExtensionFieldInfo.<!proto.Mysqlx.ClientMessages.Type>}\n */\nproto.Mysqlx.clientMessageId = new jspb.ExtensionFieldInfo(\n    100001,\n    {clientMessageId: 0},\n    null,\n     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (\n         null),\n    0);\n\ngoogle_protobuf_descriptor_pb.MessageOptions.extensionsBinary[100001] = new jspb.ExtensionFieldBinaryInfo(\n    proto.Mysqlx.clientMessageId,\n    jspb.BinaryReader.prototype.readEnum,\n    jspb.BinaryWriter.prototype.writeEnum,\n    undefined,\n    undefined,\n    false);\n// This registers the extension field with the extended class, so that\n// toObject() will function correctly.\ngoogle_protobuf_descriptor_pb.MessageOptions.extensions[100001] = proto.Mysqlx.clientMessageId;\n\n\n/**\n * A tuple of {field number, class constructor} for the extension\n * field named `serverMessageId`.\n * @type {!jspb.ExtensionFieldInfo.<!proto.Mysqlx.ServerMessages.Type>}\n */\nproto.Mysqlx.serverMessageId = new jspb.ExtensionFieldInfo(\n    100002,\n    {serverMessageId: 0},\n    null,\n     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (\n         null),\n    0);\n\ngoogle_protobuf_descriptor_pb.MessageOptions.extensionsBinary[100002] = new jspb.ExtensionFieldBinaryInfo(\n    proto.Mysqlx.serverMessageId,\n    jspb.BinaryReader.prototype.readEnum,\n    jspb.BinaryWriter.prototype.writeEnum,\n    undefined,\n    undefined,\n    false);\n// This registers the extension field with the extended class, so that\n// toObject() will function correctly.\ngoogle_protobuf_descriptor_pb.MessageOptions.extensions[100002] = proto.Mysqlx.serverMessageId;\n\ngoog.object.extend(exports, proto.Mysqlx);\n"]},"metadata":{},"sourceType":"script"}