{"ast":null,"code":"/*\n * Copyright (c) 2017, 2021, Oracle and/or its affiliates.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License, version 2.0, as\n * published by the Free Software Foundation.\n *\n * This program is also distributed with certain software (including\n * but not limited to OpenSSL) that is licensed under separate terms,\n * as designated in a particular file or component or in included license\n * documentation.  The authors of MySQL hereby grant you an\n * additional permission to link the program and your derivative works\n * with the separately licensed software that they have included with\n * MySQL.\n *\n * Without limiting anything contained in the foregoing, this file,\n * which is part of MySQL Connector/Node.js, is also subject to the\n * Universal FOSS Exception, version 1.0, a copy of which can be found at\n * http://oss.oracle.com/licenses/universal-foss-exception.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License, version 2.0, for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA\n */\n// source: mysqlx_notice.proto\n\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\nvar jspb = require('google-protobuf');\n\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar mysqlx_pb = require('./mysqlx_pb.js');\n\ngoog.object.extend(proto, mysqlx_pb);\n\nvar mysqlx_datatypes_pb = require('./mysqlx_datatypes_pb.js');\n\ngoog.object.extend(proto, mysqlx_datatypes_pb);\ngoog.exportSymbol('proto.Mysqlx.Notice.Frame', null, global);\ngoog.exportSymbol('proto.Mysqlx.Notice.Frame.Scope', null, global);\ngoog.exportSymbol('proto.Mysqlx.Notice.Frame.Type', null, global);\ngoog.exportSymbol('proto.Mysqlx.Notice.GroupReplicationStateChanged', null, global);\ngoog.exportSymbol('proto.Mysqlx.Notice.GroupReplicationStateChanged.Type', null, global);\ngoog.exportSymbol('proto.Mysqlx.Notice.ServerHello', null, global);\ngoog.exportSymbol('proto.Mysqlx.Notice.SessionStateChanged', null, global);\ngoog.exportSymbol('proto.Mysqlx.Notice.SessionStateChanged.Parameter', null, global);\ngoog.exportSymbol('proto.Mysqlx.Notice.SessionVariableChanged', null, global);\ngoog.exportSymbol('proto.Mysqlx.Notice.Warning', null, global);\ngoog.exportSymbol('proto.Mysqlx.Notice.Warning.Level', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.Mysqlx.Notice.Frame = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Mysqlx.Notice.Frame, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Mysqlx.Notice.Frame.displayName = 'proto.Mysqlx.Notice.Frame';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Mysqlx.Notice.Warning = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Mysqlx.Notice.Warning, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Mysqlx.Notice.Warning.displayName = 'proto.Mysqlx.Notice.Warning';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Mysqlx.Notice.SessionVariableChanged = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Mysqlx.Notice.SessionVariableChanged, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Mysqlx.Notice.SessionVariableChanged.displayName = 'proto.Mysqlx.Notice.SessionVariableChanged';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Mysqlx.Notice.SessionStateChanged = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.Mysqlx.Notice.SessionStateChanged.repeatedFields_, null);\n};\n\ngoog.inherits(proto.Mysqlx.Notice.SessionStateChanged, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Mysqlx.Notice.SessionStateChanged.displayName = 'proto.Mysqlx.Notice.SessionStateChanged';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Mysqlx.Notice.GroupReplicationStateChanged = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Mysqlx.Notice.GroupReplicationStateChanged, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Mysqlx.Notice.GroupReplicationStateChanged.displayName = 'proto.Mysqlx.Notice.GroupReplicationStateChanged';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Mysqlx.Notice.ServerHello = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Mysqlx.Notice.ServerHello, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Mysqlx.Notice.ServerHello.displayName = 'proto.Mysqlx.Notice.ServerHello';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Mysqlx.Notice.Frame.prototype.toObject = function (opt_includeInstance) {\n    return proto.Mysqlx.Notice.Frame.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Mysqlx.Notice.Frame} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Mysqlx.Notice.Frame.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      type: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n      scope: jspb.Message.getFieldWithDefault(msg, 2, 1),\n      payload: msg.getPayload_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Notice.Frame}\n */\n\n\nproto.Mysqlx.Notice.Frame.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Notice.Frame();\n  return proto.Mysqlx.Notice.Frame.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Notice.Frame} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Notice.Frame}\n */\n\n\nproto.Mysqlx.Notice.Frame.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setType(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {!proto.Mysqlx.Notice.Frame.Scope} */\n        reader.readEnum();\n        msg.setScope(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setPayload(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Mysqlx.Notice.Frame.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Notice.Frame.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Notice.Frame} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Mysqlx.Notice.Frame.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f =\n  /** @type {number} */\n  jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeUint32(1, f);\n  }\n\n  f =\n  /** @type {!proto.Mysqlx.Notice.Frame.Scope} */\n  jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeEnum(2, f);\n  }\n\n  f =\n  /** @type {!(string|Uint8Array)} */\n  jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeBytes(3, f);\n  }\n};\n/**\n * @enum {number}\n */\n\n\nproto.Mysqlx.Notice.Frame.Scope = {\n  GLOBAL: 1,\n  LOCAL: 2\n};\n/**\n * @enum {number}\n */\n\nproto.Mysqlx.Notice.Frame.Type = {\n  WARNING: 1,\n  SESSION_VARIABLE_CHANGED: 2,\n  SESSION_STATE_CHANGED: 3,\n  GROUP_REPLICATION_STATE_CHANGED: 4,\n  SERVER_HELLO: 5\n};\n/**\n * required uint32 type = 1;\n * @return {number}\n */\n\nproto.Mysqlx.Notice.Frame.prototype.getType = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.Mysqlx.Notice.Frame} returns this\n */\n\n\nproto.Mysqlx.Notice.Frame.prototype.setType = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.Mysqlx.Notice.Frame} returns this\n */\n\n\nproto.Mysqlx.Notice.Frame.prototype.clearType = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.Mysqlx.Notice.Frame.prototype.hasType = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional Scope scope = 2;\n * @return {!proto.Mysqlx.Notice.Frame.Scope}\n */\n\n\nproto.Mysqlx.Notice.Frame.prototype.getScope = function () {\n  return (\n    /** @type {!proto.Mysqlx.Notice.Frame.Scope} */\n    jspb.Message.getFieldWithDefault(this, 2, 1)\n  );\n};\n/**\n * @param {!proto.Mysqlx.Notice.Frame.Scope} value\n * @return {!proto.Mysqlx.Notice.Frame} returns this\n */\n\n\nproto.Mysqlx.Notice.Frame.prototype.setScope = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.Mysqlx.Notice.Frame} returns this\n */\n\n\nproto.Mysqlx.Notice.Frame.prototype.clearScope = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.Mysqlx.Notice.Frame.prototype.hasScope = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional bytes payload = 3;\n * @return {string}\n */\n\n\nproto.Mysqlx.Notice.Frame.prototype.getPayload = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * optional bytes payload = 3;\n * This is a type-conversion wrapper around `getPayload()`\n * @return {string}\n */\n\n\nproto.Mysqlx.Notice.Frame.prototype.getPayload_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getPayload())\n  );\n};\n/**\n * optional bytes payload = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPayload()`\n * @return {!Uint8Array}\n */\n\n\nproto.Mysqlx.Notice.Frame.prototype.getPayload_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getPayload())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.Mysqlx.Notice.Frame} returns this\n */\n\n\nproto.Mysqlx.Notice.Frame.prototype.setPayload = function (value) {\n  return jspb.Message.setField(this, 3, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.Mysqlx.Notice.Frame} returns this\n */\n\n\nproto.Mysqlx.Notice.Frame.prototype.clearPayload = function () {\n  return jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.Mysqlx.Notice.Frame.prototype.hasPayload = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Mysqlx.Notice.Warning.prototype.toObject = function (opt_includeInstance) {\n    return proto.Mysqlx.Notice.Warning.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Mysqlx.Notice.Warning} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Mysqlx.Notice.Warning.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      level: jspb.Message.getFieldWithDefault(msg, 1, 2),\n      code: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,\n      msg: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Notice.Warning}\n */\n\n\nproto.Mysqlx.Notice.Warning.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Notice.Warning();\n  return proto.Mysqlx.Notice.Warning.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Notice.Warning} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Notice.Warning}\n */\n\n\nproto.Mysqlx.Notice.Warning.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!proto.Mysqlx.Notice.Warning.Level} */\n        reader.readEnum();\n        msg.setLevel(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setCode(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setMsg(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Mysqlx.Notice.Warning.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Notice.Warning.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Notice.Warning} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Mysqlx.Notice.Warning.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f =\n  /** @type {!proto.Mysqlx.Notice.Warning.Level} */\n  jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeEnum(1, f);\n  }\n\n  f =\n  /** @type {number} */\n  jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeUint32(2, f);\n  }\n\n  f =\n  /** @type {string} */\n  jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeString(3, f);\n  }\n};\n/**\n * @enum {number}\n */\n\n\nproto.Mysqlx.Notice.Warning.Level = {\n  NOTE: 1,\n  WARNING: 2,\n  ERROR: 3\n};\n/**\n * optional Level level = 1;\n * @return {!proto.Mysqlx.Notice.Warning.Level}\n */\n\nproto.Mysqlx.Notice.Warning.prototype.getLevel = function () {\n  return (\n    /** @type {!proto.Mysqlx.Notice.Warning.Level} */\n    jspb.Message.getFieldWithDefault(this, 1, 2)\n  );\n};\n/**\n * @param {!proto.Mysqlx.Notice.Warning.Level} value\n * @return {!proto.Mysqlx.Notice.Warning} returns this\n */\n\n\nproto.Mysqlx.Notice.Warning.prototype.setLevel = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.Mysqlx.Notice.Warning} returns this\n */\n\n\nproto.Mysqlx.Notice.Warning.prototype.clearLevel = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.Mysqlx.Notice.Warning.prototype.hasLevel = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * required uint32 code = 2;\n * @return {number}\n */\n\n\nproto.Mysqlx.Notice.Warning.prototype.getCode = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.Mysqlx.Notice.Warning} returns this\n */\n\n\nproto.Mysqlx.Notice.Warning.prototype.setCode = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.Mysqlx.Notice.Warning} returns this\n */\n\n\nproto.Mysqlx.Notice.Warning.prototype.clearCode = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.Mysqlx.Notice.Warning.prototype.hasCode = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * required string msg = 3;\n * @return {string}\n */\n\n\nproto.Mysqlx.Notice.Warning.prototype.getMsg = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.Mysqlx.Notice.Warning} returns this\n */\n\n\nproto.Mysqlx.Notice.Warning.prototype.setMsg = function (value) {\n  return jspb.Message.setField(this, 3, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.Mysqlx.Notice.Warning} returns this\n */\n\n\nproto.Mysqlx.Notice.Warning.prototype.clearMsg = function () {\n  return jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.Mysqlx.Notice.Warning.prototype.hasMsg = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Mysqlx.Notice.SessionVariableChanged.prototype.toObject = function (opt_includeInstance) {\n    return proto.Mysqlx.Notice.SessionVariableChanged.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Mysqlx.Notice.SessionVariableChanged} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Mysqlx.Notice.SessionVariableChanged.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      param: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n      value: (f = msg.getValue()) && mysqlx_datatypes_pb.Scalar.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Notice.SessionVariableChanged}\n */\n\n\nproto.Mysqlx.Notice.SessionVariableChanged.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Notice.SessionVariableChanged();\n  return proto.Mysqlx.Notice.SessionVariableChanged.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Notice.SessionVariableChanged} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Notice.SessionVariableChanged}\n */\n\n\nproto.Mysqlx.Notice.SessionVariableChanged.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setParam(value);\n        break;\n\n      case 2:\n        var value = new mysqlx_datatypes_pb.Scalar();\n        reader.readMessage(value, mysqlx_datatypes_pb.Scalar.deserializeBinaryFromReader);\n        msg.setValue(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Mysqlx.Notice.SessionVariableChanged.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Notice.SessionVariableChanged.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Notice.SessionVariableChanged} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Mysqlx.Notice.SessionVariableChanged.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f =\n  /** @type {string} */\n  jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getValue();\n\n  if (f != null) {\n    writer.writeMessage(2, f, mysqlx_datatypes_pb.Scalar.serializeBinaryToWriter);\n  }\n};\n/**\n * required string param = 1;\n * @return {string}\n */\n\n\nproto.Mysqlx.Notice.SessionVariableChanged.prototype.getParam = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.Mysqlx.Notice.SessionVariableChanged} returns this\n */\n\n\nproto.Mysqlx.Notice.SessionVariableChanged.prototype.setParam = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.Mysqlx.Notice.SessionVariableChanged} returns this\n */\n\n\nproto.Mysqlx.Notice.SessionVariableChanged.prototype.clearParam = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.Mysqlx.Notice.SessionVariableChanged.prototype.hasParam = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional Mysqlx.Datatypes.Scalar value = 2;\n * @return {?proto.Mysqlx.Datatypes.Scalar}\n */\n\n\nproto.Mysqlx.Notice.SessionVariableChanged.prototype.getValue = function () {\n  return (\n    /** @type{?proto.Mysqlx.Datatypes.Scalar} */\n    jspb.Message.getWrapperField(this, mysqlx_datatypes_pb.Scalar, 2)\n  );\n};\n/**\n * @param {?proto.Mysqlx.Datatypes.Scalar|undefined} value\n * @return {!proto.Mysqlx.Notice.SessionVariableChanged} returns this\n*/\n\n\nproto.Mysqlx.Notice.SessionVariableChanged.prototype.setValue = function (value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.Mysqlx.Notice.SessionVariableChanged} returns this\n */\n\n\nproto.Mysqlx.Notice.SessionVariableChanged.prototype.clearValue = function () {\n  return this.setValue(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.Mysqlx.Notice.SessionVariableChanged.prototype.hasValue = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.Mysqlx.Notice.SessionStateChanged.repeatedFields_ = [2];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Mysqlx.Notice.SessionStateChanged.prototype.toObject = function (opt_includeInstance) {\n    return proto.Mysqlx.Notice.SessionStateChanged.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Mysqlx.Notice.SessionStateChanged} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Mysqlx.Notice.SessionStateChanged.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      param: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n      valueList: jspb.Message.toObjectList(msg.getValueList(), mysqlx_datatypes_pb.Scalar.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Notice.SessionStateChanged}\n */\n\n\nproto.Mysqlx.Notice.SessionStateChanged.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Notice.SessionStateChanged();\n  return proto.Mysqlx.Notice.SessionStateChanged.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Notice.SessionStateChanged} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Notice.SessionStateChanged}\n */\n\n\nproto.Mysqlx.Notice.SessionStateChanged.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!proto.Mysqlx.Notice.SessionStateChanged.Parameter} */\n        reader.readEnum();\n        msg.setParam(value);\n        break;\n\n      case 2:\n        var value = new mysqlx_datatypes_pb.Scalar();\n        reader.readMessage(value, mysqlx_datatypes_pb.Scalar.deserializeBinaryFromReader);\n        msg.addValue(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Mysqlx.Notice.SessionStateChanged.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Notice.SessionStateChanged.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Notice.SessionStateChanged} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Mysqlx.Notice.SessionStateChanged.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f =\n  /** @type {!proto.Mysqlx.Notice.SessionStateChanged.Parameter} */\n  jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeEnum(1, f);\n  }\n\n  f = message.getValueList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(2, f, mysqlx_datatypes_pb.Scalar.serializeBinaryToWriter);\n  }\n};\n/**\n * @enum {number}\n */\n\n\nproto.Mysqlx.Notice.SessionStateChanged.Parameter = {\n  CURRENT_SCHEMA: 1,\n  ACCOUNT_EXPIRED: 2,\n  GENERATED_INSERT_ID: 3,\n  ROWS_AFFECTED: 4,\n  ROWS_FOUND: 5,\n  ROWS_MATCHED: 6,\n  TRX_COMMITTED: 7,\n  TRX_ROLLEDBACK: 9,\n  PRODUCED_MESSAGE: 10,\n  CLIENT_ID_ASSIGNED: 11,\n  GENERATED_DOCUMENT_IDS: 12\n};\n/**\n * required Parameter param = 1;\n * @return {!proto.Mysqlx.Notice.SessionStateChanged.Parameter}\n */\n\nproto.Mysqlx.Notice.SessionStateChanged.prototype.getParam = function () {\n  return (\n    /** @type {!proto.Mysqlx.Notice.SessionStateChanged.Parameter} */\n    jspb.Message.getFieldWithDefault(this, 1, 1)\n  );\n};\n/**\n * @param {!proto.Mysqlx.Notice.SessionStateChanged.Parameter} value\n * @return {!proto.Mysqlx.Notice.SessionStateChanged} returns this\n */\n\n\nproto.Mysqlx.Notice.SessionStateChanged.prototype.setParam = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.Mysqlx.Notice.SessionStateChanged} returns this\n */\n\n\nproto.Mysqlx.Notice.SessionStateChanged.prototype.clearParam = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.Mysqlx.Notice.SessionStateChanged.prototype.hasParam = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * repeated Mysqlx.Datatypes.Scalar value = 2;\n * @return {!Array<!proto.Mysqlx.Datatypes.Scalar>}\n */\n\n\nproto.Mysqlx.Notice.SessionStateChanged.prototype.getValueList = function () {\n  return (\n    /** @type{!Array<!proto.Mysqlx.Datatypes.Scalar>} */\n    jspb.Message.getRepeatedWrapperField(this, mysqlx_datatypes_pb.Scalar, 2)\n  );\n};\n/**\n * @param {!Array<!proto.Mysqlx.Datatypes.Scalar>} value\n * @return {!proto.Mysqlx.Notice.SessionStateChanged} returns this\n*/\n\n\nproto.Mysqlx.Notice.SessionStateChanged.prototype.setValueList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n/**\n * @param {!proto.Mysqlx.Datatypes.Scalar=} opt_value\n * @param {number=} opt_index\n * @return {!proto.Mysqlx.Datatypes.Scalar}\n */\n\n\nproto.Mysqlx.Notice.SessionStateChanged.prototype.addValue = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Mysqlx.Datatypes.Scalar, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.Mysqlx.Notice.SessionStateChanged} returns this\n */\n\n\nproto.Mysqlx.Notice.SessionStateChanged.prototype.clearValueList = function () {\n  return this.setValueList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Mysqlx.Notice.GroupReplicationStateChanged.prototype.toObject = function (opt_includeInstance) {\n    return proto.Mysqlx.Notice.GroupReplicationStateChanged.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Mysqlx.Notice.GroupReplicationStateChanged} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Mysqlx.Notice.GroupReplicationStateChanged.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      type: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n      viewId: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Notice.GroupReplicationStateChanged}\n */\n\n\nproto.Mysqlx.Notice.GroupReplicationStateChanged.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Notice.GroupReplicationStateChanged();\n  return proto.Mysqlx.Notice.GroupReplicationStateChanged.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Notice.GroupReplicationStateChanged} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Notice.GroupReplicationStateChanged}\n */\n\n\nproto.Mysqlx.Notice.GroupReplicationStateChanged.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setType(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setViewId(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Mysqlx.Notice.GroupReplicationStateChanged.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Notice.GroupReplicationStateChanged.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Notice.GroupReplicationStateChanged} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Mysqlx.Notice.GroupReplicationStateChanged.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f =\n  /** @type {number} */\n  jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeUint32(1, f);\n  }\n\n  f =\n  /** @type {string} */\n  jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeString(2, f);\n  }\n};\n/**\n * @enum {number}\n */\n\n\nproto.Mysqlx.Notice.GroupReplicationStateChanged.Type = {\n  MEMBERSHIP_QUORUM_LOSS: 1,\n  MEMBERSHIP_VIEW_CHANGE: 2,\n  MEMBER_ROLE_CHANGE: 3,\n  MEMBER_STATE_CHANGE: 4\n};\n/**\n * required uint32 type = 1;\n * @return {number}\n */\n\nproto.Mysqlx.Notice.GroupReplicationStateChanged.prototype.getType = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.Mysqlx.Notice.GroupReplicationStateChanged} returns this\n */\n\n\nproto.Mysqlx.Notice.GroupReplicationStateChanged.prototype.setType = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.Mysqlx.Notice.GroupReplicationStateChanged} returns this\n */\n\n\nproto.Mysqlx.Notice.GroupReplicationStateChanged.prototype.clearType = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.Mysqlx.Notice.GroupReplicationStateChanged.prototype.hasType = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional string view_id = 2;\n * @return {string}\n */\n\n\nproto.Mysqlx.Notice.GroupReplicationStateChanged.prototype.getViewId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.Mysqlx.Notice.GroupReplicationStateChanged} returns this\n */\n\n\nproto.Mysqlx.Notice.GroupReplicationStateChanged.prototype.setViewId = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.Mysqlx.Notice.GroupReplicationStateChanged} returns this\n */\n\n\nproto.Mysqlx.Notice.GroupReplicationStateChanged.prototype.clearViewId = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.Mysqlx.Notice.GroupReplicationStateChanged.prototype.hasViewId = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Mysqlx.Notice.ServerHello.prototype.toObject = function (opt_includeInstance) {\n    return proto.Mysqlx.Notice.ServerHello.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Mysqlx.Notice.ServerHello} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Mysqlx.Notice.ServerHello.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Notice.ServerHello}\n */\n\n\nproto.Mysqlx.Notice.ServerHello.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Notice.ServerHello();\n  return proto.Mysqlx.Notice.ServerHello.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Notice.ServerHello} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Notice.ServerHello}\n */\n\n\nproto.Mysqlx.Notice.ServerHello.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Mysqlx.Notice.ServerHello.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Notice.ServerHello.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Notice.ServerHello} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Mysqlx.Notice.ServerHello.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\ngoog.object.extend(exports, proto.Mysqlx.Notice);","map":{"version":3,"sources":["/home/ad/Bureau/infof308/src/node_modules/@mysql/xdevapi/lib/Protocol/Stubs/mysqlx_notice_pb.js"],"names":["jspb","require","goog","global","Function","mysqlx_pb","object","extend","proto","mysqlx_datatypes_pb","exportSymbol","Mysqlx","Notice","Frame","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","Warning","SessionVariableChanged","SessionStateChanged","repeatedFields_","GroupReplicationStateChanged","ServerHello","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","type","getField","undefined","scope","getFieldWithDefault","payload","getPayload_asB64","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readUint32","setType","readEnum","setScope","readBytes","setPayload","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","writeUint32","writeEnum","writeBytes","Scope","GLOBAL","LOCAL","Type","WARNING","SESSION_VARIABLE_CHANGED","SESSION_STATE_CHANGED","GROUP_REPLICATION_STATE_CHANGED","SERVER_HELLO","getType","setField","clearType","hasType","getScope","clearScope","hasScope","getPayload","bytesAsB64","getPayload_asU8","bytesAsU8","clearPayload","hasPayload","level","code","setLevel","setCode","readString","setMsg","writeString","Level","NOTE","ERROR","getLevel","clearLevel","hasLevel","getCode","clearCode","hasCode","getMsg","clearMsg","hasMsg","param","getValue","Scalar","setParam","readMessage","setValue","writeMessage","getParam","clearParam","hasParam","getWrapperField","setWrapperField","clearValue","hasValue","valueList","toObjectList","getValueList","addValue","length","writeRepeatedMessage","Parameter","CURRENT_SCHEMA","ACCOUNT_EXPIRED","GENERATED_INSERT_ID","ROWS_AFFECTED","ROWS_FOUND","ROWS_MATCHED","TRX_COMMITTED","TRX_ROLLEDBACK","PRODUCED_MESSAGE","CLIENT_ID_ASSIGNED","GENERATED_DOCUMENT_IDS","getRepeatedWrapperField","setValueList","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","Datatypes","clearValueList","viewId","setViewId","MEMBERSHIP_QUORUM_LOSS","MEMBERSHIP_VIEW_CHANGE","MEMBER_ROLE_CHANGE","MEMBER_STATE_CHANGE","getViewId","clearViewId","hasViewId","exports"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2017, 2021, Oracle and/or its affiliates.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License, version 2.0, as\n * published by the Free Software Foundation.\n *\n * This program is also distributed with certain software (including\n * but not limited to OpenSSL) that is licensed under separate terms,\n * as designated in a particular file or component or in included license\n * documentation.  The authors of MySQL hereby grant you an\n * additional permission to link the program and your derivative works\n * with the separately licensed software that they have included with\n * MySQL.\n *\n * Without limiting anything contained in the foregoing, this file,\n * which is part of MySQL Connector/Node.js, is also subject to the\n * Universal FOSS Exception, version 1.0, a copy of which can be found at\n * http://oss.oracle.com/licenses/universal-foss-exception.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License, version 2.0, for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\n// source: mysqlx_notice.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar mysqlx_pb = require('./mysqlx_pb.js');\ngoog.object.extend(proto, mysqlx_pb);\nvar mysqlx_datatypes_pb = require('./mysqlx_datatypes_pb.js');\ngoog.object.extend(proto, mysqlx_datatypes_pb);\ngoog.exportSymbol('proto.Mysqlx.Notice.Frame', null, global);\ngoog.exportSymbol('proto.Mysqlx.Notice.Frame.Scope', null, global);\ngoog.exportSymbol('proto.Mysqlx.Notice.Frame.Type', null, global);\ngoog.exportSymbol('proto.Mysqlx.Notice.GroupReplicationStateChanged', null, global);\ngoog.exportSymbol('proto.Mysqlx.Notice.GroupReplicationStateChanged.Type', null, global);\ngoog.exportSymbol('proto.Mysqlx.Notice.ServerHello', null, global);\ngoog.exportSymbol('proto.Mysqlx.Notice.SessionStateChanged', null, global);\ngoog.exportSymbol('proto.Mysqlx.Notice.SessionStateChanged.Parameter', null, global);\ngoog.exportSymbol('proto.Mysqlx.Notice.SessionVariableChanged', null, global);\ngoog.exportSymbol('proto.Mysqlx.Notice.Warning', null, global);\ngoog.exportSymbol('proto.Mysqlx.Notice.Warning.Level', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Mysqlx.Notice.Frame = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Mysqlx.Notice.Frame, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Mysqlx.Notice.Frame.displayName = 'proto.Mysqlx.Notice.Frame';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Mysqlx.Notice.Warning = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Mysqlx.Notice.Warning, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Mysqlx.Notice.Warning.displayName = 'proto.Mysqlx.Notice.Warning';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Mysqlx.Notice.SessionVariableChanged = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Mysqlx.Notice.SessionVariableChanged, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Mysqlx.Notice.SessionVariableChanged.displayName = 'proto.Mysqlx.Notice.SessionVariableChanged';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Mysqlx.Notice.SessionStateChanged = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.Mysqlx.Notice.SessionStateChanged.repeatedFields_, null);\n};\ngoog.inherits(proto.Mysqlx.Notice.SessionStateChanged, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Mysqlx.Notice.SessionStateChanged.displayName = 'proto.Mysqlx.Notice.SessionStateChanged';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Mysqlx.Notice.GroupReplicationStateChanged = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Mysqlx.Notice.GroupReplicationStateChanged, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Mysqlx.Notice.GroupReplicationStateChanged.displayName = 'proto.Mysqlx.Notice.GroupReplicationStateChanged';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Mysqlx.Notice.ServerHello = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Mysqlx.Notice.ServerHello, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Mysqlx.Notice.ServerHello.displayName = 'proto.Mysqlx.Notice.ServerHello';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Mysqlx.Notice.Frame.prototype.toObject = function(opt_includeInstance) {\n  return proto.Mysqlx.Notice.Frame.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Mysqlx.Notice.Frame} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Notice.Frame.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    type: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n    scope: jspb.Message.getFieldWithDefault(msg, 2, 1),\n    payload: msg.getPayload_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Notice.Frame}\n */\nproto.Mysqlx.Notice.Frame.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Notice.Frame;\n  return proto.Mysqlx.Notice.Frame.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Notice.Frame} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Notice.Frame}\n */\nproto.Mysqlx.Notice.Frame.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setType(value);\n      break;\n    case 2:\n      var value = /** @type {!proto.Mysqlx.Notice.Frame.Scope} */ (reader.readEnum());\n      msg.setScope(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPayload(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Mysqlx.Notice.Frame.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Notice.Frame.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Notice.Frame} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Notice.Frame.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {number} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeUint32(\n      1,\n      f\n    );\n  }\n  f = /** @type {!proto.Mysqlx.Notice.Frame.Scope} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeEnum(\n      2,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.Mysqlx.Notice.Frame.Scope = {\n  GLOBAL: 1,\n  LOCAL: 2\n};\n\n/**\n * @enum {number}\n */\nproto.Mysqlx.Notice.Frame.Type = {\n  WARNING: 1,\n  SESSION_VARIABLE_CHANGED: 2,\n  SESSION_STATE_CHANGED: 3,\n  GROUP_REPLICATION_STATE_CHANGED: 4,\n  SERVER_HELLO: 5\n};\n\n/**\n * required uint32 type = 1;\n * @return {number}\n */\nproto.Mysqlx.Notice.Frame.prototype.getType = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.Mysqlx.Notice.Frame} returns this\n */\nproto.Mysqlx.Notice.Frame.prototype.setType = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.Mysqlx.Notice.Frame} returns this\n */\nproto.Mysqlx.Notice.Frame.prototype.clearType = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.Mysqlx.Notice.Frame.prototype.hasType = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional Scope scope = 2;\n * @return {!proto.Mysqlx.Notice.Frame.Scope}\n */\nproto.Mysqlx.Notice.Frame.prototype.getScope = function() {\n  return /** @type {!proto.Mysqlx.Notice.Frame.Scope} */ (jspb.Message.getFieldWithDefault(this, 2, 1));\n};\n\n\n/**\n * @param {!proto.Mysqlx.Notice.Frame.Scope} value\n * @return {!proto.Mysqlx.Notice.Frame} returns this\n */\nproto.Mysqlx.Notice.Frame.prototype.setScope = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.Mysqlx.Notice.Frame} returns this\n */\nproto.Mysqlx.Notice.Frame.prototype.clearScope = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.Mysqlx.Notice.Frame.prototype.hasScope = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional bytes payload = 3;\n * @return {string}\n */\nproto.Mysqlx.Notice.Frame.prototype.getPayload = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes payload = 3;\n * This is a type-conversion wrapper around `getPayload()`\n * @return {string}\n */\nproto.Mysqlx.Notice.Frame.prototype.getPayload_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPayload()));\n};\n\n\n/**\n * optional bytes payload = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPayload()`\n * @return {!Uint8Array}\n */\nproto.Mysqlx.Notice.Frame.prototype.getPayload_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPayload()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.Mysqlx.Notice.Frame} returns this\n */\nproto.Mysqlx.Notice.Frame.prototype.setPayload = function(value) {\n  return jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.Mysqlx.Notice.Frame} returns this\n */\nproto.Mysqlx.Notice.Frame.prototype.clearPayload = function() {\n  return jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.Mysqlx.Notice.Frame.prototype.hasPayload = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Mysqlx.Notice.Warning.prototype.toObject = function(opt_includeInstance) {\n  return proto.Mysqlx.Notice.Warning.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Mysqlx.Notice.Warning} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Notice.Warning.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    level: jspb.Message.getFieldWithDefault(msg, 1, 2),\n    code: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,\n    msg: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Notice.Warning}\n */\nproto.Mysqlx.Notice.Warning.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Notice.Warning;\n  return proto.Mysqlx.Notice.Warning.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Notice.Warning} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Notice.Warning}\n */\nproto.Mysqlx.Notice.Warning.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.Mysqlx.Notice.Warning.Level} */ (reader.readEnum());\n      msg.setLevel(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setCode(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMsg(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Mysqlx.Notice.Warning.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Notice.Warning.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Notice.Warning} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Notice.Warning.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {!proto.Mysqlx.Notice.Warning.Level} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeUint32(\n      2,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.Mysqlx.Notice.Warning.Level = {\n  NOTE: 1,\n  WARNING: 2,\n  ERROR: 3\n};\n\n/**\n * optional Level level = 1;\n * @return {!proto.Mysqlx.Notice.Warning.Level}\n */\nproto.Mysqlx.Notice.Warning.prototype.getLevel = function() {\n  return /** @type {!proto.Mysqlx.Notice.Warning.Level} */ (jspb.Message.getFieldWithDefault(this, 1, 2));\n};\n\n\n/**\n * @param {!proto.Mysqlx.Notice.Warning.Level} value\n * @return {!proto.Mysqlx.Notice.Warning} returns this\n */\nproto.Mysqlx.Notice.Warning.prototype.setLevel = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.Mysqlx.Notice.Warning} returns this\n */\nproto.Mysqlx.Notice.Warning.prototype.clearLevel = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.Mysqlx.Notice.Warning.prototype.hasLevel = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * required uint32 code = 2;\n * @return {number}\n */\nproto.Mysqlx.Notice.Warning.prototype.getCode = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.Mysqlx.Notice.Warning} returns this\n */\nproto.Mysqlx.Notice.Warning.prototype.setCode = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.Mysqlx.Notice.Warning} returns this\n */\nproto.Mysqlx.Notice.Warning.prototype.clearCode = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.Mysqlx.Notice.Warning.prototype.hasCode = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * required string msg = 3;\n * @return {string}\n */\nproto.Mysqlx.Notice.Warning.prototype.getMsg = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.Mysqlx.Notice.Warning} returns this\n */\nproto.Mysqlx.Notice.Warning.prototype.setMsg = function(value) {\n  return jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.Mysqlx.Notice.Warning} returns this\n */\nproto.Mysqlx.Notice.Warning.prototype.clearMsg = function() {\n  return jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.Mysqlx.Notice.Warning.prototype.hasMsg = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Mysqlx.Notice.SessionVariableChanged.prototype.toObject = function(opt_includeInstance) {\n  return proto.Mysqlx.Notice.SessionVariableChanged.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Mysqlx.Notice.SessionVariableChanged} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Notice.SessionVariableChanged.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    param: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n    value: (f = msg.getValue()) && mysqlx_datatypes_pb.Scalar.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Notice.SessionVariableChanged}\n */\nproto.Mysqlx.Notice.SessionVariableChanged.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Notice.SessionVariableChanged;\n  return proto.Mysqlx.Notice.SessionVariableChanged.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Notice.SessionVariableChanged} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Notice.SessionVariableChanged}\n */\nproto.Mysqlx.Notice.SessionVariableChanged.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setParam(value);\n      break;\n    case 2:\n      var value = new mysqlx_datatypes_pb.Scalar;\n      reader.readMessage(value,mysqlx_datatypes_pb.Scalar.deserializeBinaryFromReader);\n      msg.setValue(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Mysqlx.Notice.SessionVariableChanged.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Notice.SessionVariableChanged.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Notice.SessionVariableChanged} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Notice.SessionVariableChanged.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getValue();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      mysqlx_datatypes_pb.Scalar.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * required string param = 1;\n * @return {string}\n */\nproto.Mysqlx.Notice.SessionVariableChanged.prototype.getParam = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.Mysqlx.Notice.SessionVariableChanged} returns this\n */\nproto.Mysqlx.Notice.SessionVariableChanged.prototype.setParam = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.Mysqlx.Notice.SessionVariableChanged} returns this\n */\nproto.Mysqlx.Notice.SessionVariableChanged.prototype.clearParam = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.Mysqlx.Notice.SessionVariableChanged.prototype.hasParam = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional Mysqlx.Datatypes.Scalar value = 2;\n * @return {?proto.Mysqlx.Datatypes.Scalar}\n */\nproto.Mysqlx.Notice.SessionVariableChanged.prototype.getValue = function() {\n  return /** @type{?proto.Mysqlx.Datatypes.Scalar} */ (\n    jspb.Message.getWrapperField(this, mysqlx_datatypes_pb.Scalar, 2));\n};\n\n\n/**\n * @param {?proto.Mysqlx.Datatypes.Scalar|undefined} value\n * @return {!proto.Mysqlx.Notice.SessionVariableChanged} returns this\n*/\nproto.Mysqlx.Notice.SessionVariableChanged.prototype.setValue = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.Mysqlx.Notice.SessionVariableChanged} returns this\n */\nproto.Mysqlx.Notice.SessionVariableChanged.prototype.clearValue = function() {\n  return this.setValue(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.Mysqlx.Notice.SessionVariableChanged.prototype.hasValue = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.Mysqlx.Notice.SessionStateChanged.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Mysqlx.Notice.SessionStateChanged.prototype.toObject = function(opt_includeInstance) {\n  return proto.Mysqlx.Notice.SessionStateChanged.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Mysqlx.Notice.SessionStateChanged} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Notice.SessionStateChanged.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    param: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n    valueList: jspb.Message.toObjectList(msg.getValueList(),\n    mysqlx_datatypes_pb.Scalar.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Notice.SessionStateChanged}\n */\nproto.Mysqlx.Notice.SessionStateChanged.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Notice.SessionStateChanged;\n  return proto.Mysqlx.Notice.SessionStateChanged.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Notice.SessionStateChanged} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Notice.SessionStateChanged}\n */\nproto.Mysqlx.Notice.SessionStateChanged.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.Mysqlx.Notice.SessionStateChanged.Parameter} */ (reader.readEnum());\n      msg.setParam(value);\n      break;\n    case 2:\n      var value = new mysqlx_datatypes_pb.Scalar;\n      reader.readMessage(value,mysqlx_datatypes_pb.Scalar.deserializeBinaryFromReader);\n      msg.addValue(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Mysqlx.Notice.SessionStateChanged.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Notice.SessionStateChanged.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Notice.SessionStateChanged} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Notice.SessionStateChanged.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {!proto.Mysqlx.Notice.SessionStateChanged.Parameter} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getValueList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      mysqlx_datatypes_pb.Scalar.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.Mysqlx.Notice.SessionStateChanged.Parameter = {\n  CURRENT_SCHEMA: 1,\n  ACCOUNT_EXPIRED: 2,\n  GENERATED_INSERT_ID: 3,\n  ROWS_AFFECTED: 4,\n  ROWS_FOUND: 5,\n  ROWS_MATCHED: 6,\n  TRX_COMMITTED: 7,\n  TRX_ROLLEDBACK: 9,\n  PRODUCED_MESSAGE: 10,\n  CLIENT_ID_ASSIGNED: 11,\n  GENERATED_DOCUMENT_IDS: 12\n};\n\n/**\n * required Parameter param = 1;\n * @return {!proto.Mysqlx.Notice.SessionStateChanged.Parameter}\n */\nproto.Mysqlx.Notice.SessionStateChanged.prototype.getParam = function() {\n  return /** @type {!proto.Mysqlx.Notice.SessionStateChanged.Parameter} */ (jspb.Message.getFieldWithDefault(this, 1, 1));\n};\n\n\n/**\n * @param {!proto.Mysqlx.Notice.SessionStateChanged.Parameter} value\n * @return {!proto.Mysqlx.Notice.SessionStateChanged} returns this\n */\nproto.Mysqlx.Notice.SessionStateChanged.prototype.setParam = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.Mysqlx.Notice.SessionStateChanged} returns this\n */\nproto.Mysqlx.Notice.SessionStateChanged.prototype.clearParam = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.Mysqlx.Notice.SessionStateChanged.prototype.hasParam = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * repeated Mysqlx.Datatypes.Scalar value = 2;\n * @return {!Array<!proto.Mysqlx.Datatypes.Scalar>}\n */\nproto.Mysqlx.Notice.SessionStateChanged.prototype.getValueList = function() {\n  return /** @type{!Array<!proto.Mysqlx.Datatypes.Scalar>} */ (\n    jspb.Message.getRepeatedWrapperField(this, mysqlx_datatypes_pb.Scalar, 2));\n};\n\n\n/**\n * @param {!Array<!proto.Mysqlx.Datatypes.Scalar>} value\n * @return {!proto.Mysqlx.Notice.SessionStateChanged} returns this\n*/\nproto.Mysqlx.Notice.SessionStateChanged.prototype.setValueList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.Mysqlx.Datatypes.Scalar=} opt_value\n * @param {number=} opt_index\n * @return {!proto.Mysqlx.Datatypes.Scalar}\n */\nproto.Mysqlx.Notice.SessionStateChanged.prototype.addValue = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Mysqlx.Datatypes.Scalar, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.Mysqlx.Notice.SessionStateChanged} returns this\n */\nproto.Mysqlx.Notice.SessionStateChanged.prototype.clearValueList = function() {\n  return this.setValueList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Mysqlx.Notice.GroupReplicationStateChanged.prototype.toObject = function(opt_includeInstance) {\n  return proto.Mysqlx.Notice.GroupReplicationStateChanged.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Mysqlx.Notice.GroupReplicationStateChanged} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Notice.GroupReplicationStateChanged.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    type: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n    viewId: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Notice.GroupReplicationStateChanged}\n */\nproto.Mysqlx.Notice.GroupReplicationStateChanged.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Notice.GroupReplicationStateChanged;\n  return proto.Mysqlx.Notice.GroupReplicationStateChanged.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Notice.GroupReplicationStateChanged} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Notice.GroupReplicationStateChanged}\n */\nproto.Mysqlx.Notice.GroupReplicationStateChanged.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setType(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setViewId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Mysqlx.Notice.GroupReplicationStateChanged.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Notice.GroupReplicationStateChanged.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Notice.GroupReplicationStateChanged} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Notice.GroupReplicationStateChanged.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {number} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeUint32(\n      1,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.Mysqlx.Notice.GroupReplicationStateChanged.Type = {\n  MEMBERSHIP_QUORUM_LOSS: 1,\n  MEMBERSHIP_VIEW_CHANGE: 2,\n  MEMBER_ROLE_CHANGE: 3,\n  MEMBER_STATE_CHANGE: 4\n};\n\n/**\n * required uint32 type = 1;\n * @return {number}\n */\nproto.Mysqlx.Notice.GroupReplicationStateChanged.prototype.getType = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.Mysqlx.Notice.GroupReplicationStateChanged} returns this\n */\nproto.Mysqlx.Notice.GroupReplicationStateChanged.prototype.setType = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.Mysqlx.Notice.GroupReplicationStateChanged} returns this\n */\nproto.Mysqlx.Notice.GroupReplicationStateChanged.prototype.clearType = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.Mysqlx.Notice.GroupReplicationStateChanged.prototype.hasType = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional string view_id = 2;\n * @return {string}\n */\nproto.Mysqlx.Notice.GroupReplicationStateChanged.prototype.getViewId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.Mysqlx.Notice.GroupReplicationStateChanged} returns this\n */\nproto.Mysqlx.Notice.GroupReplicationStateChanged.prototype.setViewId = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.Mysqlx.Notice.GroupReplicationStateChanged} returns this\n */\nproto.Mysqlx.Notice.GroupReplicationStateChanged.prototype.clearViewId = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.Mysqlx.Notice.GroupReplicationStateChanged.prototype.hasViewId = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Mysqlx.Notice.ServerHello.prototype.toObject = function(opt_includeInstance) {\n  return proto.Mysqlx.Notice.ServerHello.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Mysqlx.Notice.ServerHello} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Notice.ServerHello.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Notice.ServerHello}\n */\nproto.Mysqlx.Notice.ServerHello.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Notice.ServerHello;\n  return proto.Mysqlx.Notice.ServerHello.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Notice.ServerHello} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Notice.ServerHello}\n */\nproto.Mysqlx.Notice.ServerHello.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Mysqlx.Notice.ServerHello.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Notice.ServerHello.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Notice.ServerHello} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Notice.ServerHello.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\ngoog.object.extend(exports, proto.Mysqlx.Notice);\n"]},"metadata":{},"sourceType":"script"}