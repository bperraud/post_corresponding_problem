{"ast":null,"code":"/*\n * Copyright (c) 2017, 2021, Oracle and/or its affiliates.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License, version 2.0, as\n * published by the Free Software Foundation.\n *\n * This program is also distributed with certain software (including\n * but not limited to OpenSSL) that is licensed under separate terms,\n * as designated in a particular file or component or in included license\n * documentation.  The authors of MySQL hereby grant you an\n * additional permission to link the program and your derivative works\n * with the separately licensed software that they have included with\n * MySQL.\n *\n * Without limiting anything contained in the foregoing, this file,\n * which is part of MySQL Connector/Node.js, is also subject to the\n * Universal FOSS Exception, version 1.0, a copy of which can be found at\n * http://oss.oracle.com/licenses/universal-foss-exception.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License, version 2.0, for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA\n */\n'use strict';\n\nconst Expr = require('../../../Protocol/Stubs/mysqlx_expr_pb.js').Expr;\n\nconst Operator = require('../../../Protocol/Stubs/mysqlx_expr_pb.js').Operator;\n\nfunction binaryOperator(items) {\n  if (items.length === 1) {\n    return items[0].operand;\n  }\n\n  const operatorInstance = new Operator();\n  operatorInstance.setName(items[1].operator);\n  operatorInstance.addParam(items[0].operand);\n  const next = items.slice(1, items.length);\n  operatorInstance.addParam(binaryOperator(next));\n  const expr = new Expr();\n  expr.setType(Expr.Type.OPERATOR);\n  expr.setOperator(operatorInstance);\n  return expr;\n}\n\nmodule.exports = function (data) {\n  if (!data[1].length) {\n    return data[0];\n  }\n\n  return binaryOperator([{\n    operand: data[0]\n  }].concat(data[1]));\n};","map":{"version":3,"sources":["/home/ad/Bureau/infof308/src/node_modules/@mysql/xdevapi/lib/ExprParser/lib/mappers/binaryOperator.js"],"names":["Expr","require","Operator","binaryOperator","items","length","operand","operatorInstance","setName","operator","addParam","next","slice","expr","setType","Type","OPERATOR","setOperator","module","exports","data","concat"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,2CAAD,CAAP,CAAqDD,IAAlE;;AACA,MAAME,QAAQ,GAAGD,OAAO,CAAC,2CAAD,CAAP,CAAqDC,QAAtE;;AAEA,SAASC,cAAT,CAAyBC,KAAzB,EAAgC;AAC5B,MAAIA,KAAK,CAACC,MAAN,KAAiB,CAArB,EAAwB;AACpB,WAAOD,KAAK,CAAC,CAAD,CAAL,CAASE,OAAhB;AACH;;AAED,QAAMC,gBAAgB,GAAG,IAAIL,QAAJ,EAAzB;AACAK,EAAAA,gBAAgB,CAACC,OAAjB,CAAyBJ,KAAK,CAAC,CAAD,CAAL,CAASK,QAAlC;AACAF,EAAAA,gBAAgB,CAACG,QAAjB,CAA0BN,KAAK,CAAC,CAAD,CAAL,CAASE,OAAnC;AAEA,QAAMK,IAAI,GAAGP,KAAK,CAACQ,KAAN,CAAY,CAAZ,EAAeR,KAAK,CAACC,MAArB,CAAb;AACAE,EAAAA,gBAAgB,CAACG,QAAjB,CAA0BP,cAAc,CAACQ,IAAD,CAAxC;AAEA,QAAME,IAAI,GAAG,IAAIb,IAAJ,EAAb;AACAa,EAAAA,IAAI,CAACC,OAAL,CAAad,IAAI,CAACe,IAAL,CAAUC,QAAvB;AACAH,EAAAA,IAAI,CAACI,WAAL,CAAiBV,gBAAjB;AAEA,SAAOM,IAAP;AACH;;AAEDK,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;AAC7B,MAAI,CAACA,IAAI,CAAC,CAAD,CAAJ,CAAQf,MAAb,EAAqB;AACjB,WAAOe,IAAI,CAAC,CAAD,CAAX;AACH;;AAED,SAAOjB,cAAc,CAAC,CAAC;AAAEG,IAAAA,OAAO,EAAEc,IAAI,CAAC,CAAD;AAAf,GAAD,EAAuBC,MAAvB,CAA8BD,IAAI,CAAC,CAAD,CAAlC,CAAD,CAArB;AACH,CAND","sourcesContent":["/*\n * Copyright (c) 2017, 2021, Oracle and/or its affiliates.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License, version 2.0, as\n * published by the Free Software Foundation.\n *\n * This program is also distributed with certain software (including\n * but not limited to OpenSSL) that is licensed under separate terms,\n * as designated in a particular file or component or in included license\n * documentation.  The authors of MySQL hereby grant you an\n * additional permission to link the program and your derivative works\n * with the separately licensed software that they have included with\n * MySQL.\n *\n * Without limiting anything contained in the foregoing, this file,\n * which is part of MySQL Connector/Node.js, is also subject to the\n * Universal FOSS Exception, version 1.0, a copy of which can be found at\n * http://oss.oracle.com/licenses/universal-foss-exception.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License, version 2.0, for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\n'use strict';\n\nconst Expr = require('../../../Protocol/Stubs/mysqlx_expr_pb.js').Expr;\nconst Operator = require('../../../Protocol/Stubs/mysqlx_expr_pb.js').Operator;\n\nfunction binaryOperator (items) {\n    if (items.length === 1) {\n        return items[0].operand;\n    }\n\n    const operatorInstance = new Operator();\n    operatorInstance.setName(items[1].operator);\n    operatorInstance.addParam(items[0].operand);\n\n    const next = items.slice(1, items.length);\n    operatorInstance.addParam(binaryOperator(next));\n\n    const expr = new Expr();\n    expr.setType(Expr.Type.OPERATOR);\n    expr.setOperator(operatorInstance);\n\n    return expr;\n}\n\nmodule.exports = function (data) {\n    if (!data[1].length) {\n        return data[0];\n    }\n\n    return binaryOperator([{ operand: data[0] }].concat(data[1]));\n};\n"]},"metadata":{},"sourceType":"script"}