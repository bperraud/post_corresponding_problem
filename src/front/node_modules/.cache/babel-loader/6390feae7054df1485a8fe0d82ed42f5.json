{"ast":null,"code":"/*\n * Copyright (c) 2017, 2021, Oracle and/or its affiliates.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License, version 2.0, as\n * published by the Free Software Foundation.\n *\n * This program is also distributed with certain software (including\n * but not limited to OpenSSL) that is licensed under separate terms,\n * as designated in a particular file or component or in included license\n * documentation.  The authors of MySQL hereby grant you an\n * additional permission to link the program and your derivative works\n * with the separately licensed software that they have included with\n * MySQL.\n *\n * Without limiting anything contained in the foregoing, this file,\n * which is part of MySQL Connector/Node.js, is also subject to the\n * Universal FOSS Exception, version 1.0, a copy of which can be found at\n * http://oss.oracle.com/licenses/universal-foss-exception.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License, version 2.0, for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\nvar jspb = require('google-protobuf');\n\nvar goog = jspb;\nvar global = Function('return this')();\ngoog.exportSymbol('proto.Mysqlx.Datatypes.Any', null, global);\ngoog.exportSymbol('proto.Mysqlx.Datatypes.Any.Type', null, global);\ngoog.exportSymbol('proto.Mysqlx.Datatypes.Array', null, global);\ngoog.exportSymbol('proto.Mysqlx.Datatypes.Object', null, global);\ngoog.exportSymbol('proto.Mysqlx.Datatypes.Object.ObjectField', null, global);\ngoog.exportSymbol('proto.Mysqlx.Datatypes.Scalar', null, global);\ngoog.exportSymbol('proto.Mysqlx.Datatypes.Scalar.Octets', null, global);\ngoog.exportSymbol('proto.Mysqlx.Datatypes.Scalar.String', null, global);\ngoog.exportSymbol('proto.Mysqlx.Datatypes.Scalar.Type', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.Mysqlx.Datatypes.Scalar = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Mysqlx.Datatypes.Scalar, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.Mysqlx.Datatypes.Scalar.displayName = 'proto.Mysqlx.Datatypes.Scalar';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Mysqlx.Datatypes.Scalar.prototype.toObject = function (opt_includeInstance) {\n    return proto.Mysqlx.Datatypes.Scalar.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Mysqlx.Datatypes.Scalar} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Mysqlx.Datatypes.Scalar.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      type: jspb.Message.getField(msg, 1),\n      vSignedInt: jspb.Message.getField(msg, 2),\n      vUnsignedInt: jspb.Message.getField(msg, 3),\n      vOctets: (f = msg.getVOctets()) && proto.Mysqlx.Datatypes.Scalar.Octets.toObject(includeInstance, f),\n      vDouble: jspb.Message.getOptionalFloatingPointField(msg, 6),\n      vFloat: jspb.Message.getOptionalFloatingPointField(msg, 7),\n      vBool: jspb.Message.getField(msg, 8),\n      vString: (f = msg.getVString()) && proto.Mysqlx.Datatypes.Scalar.String.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Datatypes.Scalar}\n */\n\n\nproto.Mysqlx.Datatypes.Scalar.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Datatypes.Scalar();\n  return proto.Mysqlx.Datatypes.Scalar.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Datatypes.Scalar} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Datatypes.Scalar}\n */\n\n\nproto.Mysqlx.Datatypes.Scalar.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!proto.Mysqlx.Datatypes.Scalar.Type} */\n        reader.readEnum();\n        msg.setType(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readSint64();\n        msg.setVSignedInt(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setVUnsignedInt(value);\n        break;\n\n      case 5:\n        var value = new proto.Mysqlx.Datatypes.Scalar.Octets();\n        reader.readMessage(value, proto.Mysqlx.Datatypes.Scalar.Octets.deserializeBinaryFromReader);\n        msg.setVOctets(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {number} */\n        reader.readDouble();\n        msg.setVDouble(value);\n        break;\n\n      case 7:\n        var value =\n        /** @type {number} */\n        reader.readFloat();\n        msg.setVFloat(value);\n        break;\n\n      case 8:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setVBool(value);\n        break;\n\n      case 9:\n        var value = new proto.Mysqlx.Datatypes.Scalar.String();\n        reader.readMessage(value, proto.Mysqlx.Datatypes.Scalar.String.deserializeBinaryFromReader);\n        msg.setVString(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Mysqlx.Datatypes.Scalar.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Datatypes.Scalar.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Datatypes.Scalar} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Mysqlx.Datatypes.Scalar.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f =\n  /** @type {!proto.Mysqlx.Datatypes.Scalar.Type} */\n  jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeEnum(1, f);\n  }\n\n  f =\n  /** @type {number} */\n  jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeSint64(2, f);\n  }\n\n  f =\n  /** @type {number} */\n  jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeUint64(3, f);\n  }\n\n  f = message.getVOctets();\n\n  if (f != null) {\n    writer.writeMessage(5, f, proto.Mysqlx.Datatypes.Scalar.Octets.serializeBinaryToWriter);\n  }\n\n  f =\n  /** @type {number} */\n  jspb.Message.getField(message, 6);\n\n  if (f != null) {\n    writer.writeDouble(6, f);\n  }\n\n  f =\n  /** @type {number} */\n  jspb.Message.getField(message, 7);\n\n  if (f != null) {\n    writer.writeFloat(7, f);\n  }\n\n  f =\n  /** @type {boolean} */\n  jspb.Message.getField(message, 8);\n\n  if (f != null) {\n    writer.writeBool(8, f);\n  }\n\n  f = message.getVString();\n\n  if (f != null) {\n    writer.writeMessage(9, f, proto.Mysqlx.Datatypes.Scalar.String.serializeBinaryToWriter);\n  }\n};\n/**\n * @enum {number}\n */\n\n\nproto.Mysqlx.Datatypes.Scalar.Type = {\n  V_SINT: 1,\n  V_UINT: 2,\n  V_NULL: 3,\n  V_OCTETS: 4,\n  V_DOUBLE: 5,\n  V_FLOAT: 6,\n  V_BOOL: 7,\n  V_STRING: 8\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.Mysqlx.Datatypes.Scalar.String = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Mysqlx.Datatypes.Scalar.String, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.Mysqlx.Datatypes.Scalar.String.displayName = 'proto.Mysqlx.Datatypes.Scalar.String';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Mysqlx.Datatypes.Scalar.String.prototype.toObject = function (opt_includeInstance) {\n    return proto.Mysqlx.Datatypes.Scalar.String.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Mysqlx.Datatypes.Scalar.String} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Mysqlx.Datatypes.Scalar.String.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      value: msg.getValue_asB64(),\n      collation: jspb.Message.getField(msg, 2)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Datatypes.Scalar.String}\n */\n\n\nproto.Mysqlx.Datatypes.Scalar.String.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Datatypes.Scalar.String();\n  return proto.Mysqlx.Datatypes.Scalar.String.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Datatypes.Scalar.String} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Datatypes.Scalar.String}\n */\n\n\nproto.Mysqlx.Datatypes.Scalar.String.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setValue(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setCollation(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Mysqlx.Datatypes.Scalar.String.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Datatypes.Scalar.String.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Datatypes.Scalar.String} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Mysqlx.Datatypes.Scalar.String.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f =\n  /** @type {!(string|Uint8Array)} */\n  jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeBytes(1, f);\n  }\n\n  f =\n  /** @type {number} */\n  jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeUint64(2, f);\n  }\n};\n/**\n * required bytes value = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.Mysqlx.Datatypes.Scalar.String.prototype.getValue = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * required bytes value = 1;\n * This is a type-conversion wrapper around `getValue()`\n * @return {string}\n */\n\n\nproto.Mysqlx.Datatypes.Scalar.String.prototype.getValue_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getValue())\n  );\n};\n/**\n * required bytes value = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getValue()`\n * @return {!Uint8Array}\n */\n\n\nproto.Mysqlx.Datatypes.Scalar.String.prototype.getValue_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getValue())\n  );\n};\n/** @param {!(string|Uint8Array)} value */\n\n\nproto.Mysqlx.Datatypes.Scalar.String.prototype.setValue = function (value) {\n  jspb.Message.setField(this, 1, value);\n};\n\nproto.Mysqlx.Datatypes.Scalar.String.prototype.clearValue = function () {\n  jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Mysqlx.Datatypes.Scalar.String.prototype.hasValue = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional uint64 collation = 2;\n * @return {number}\n */\n\n\nproto.Mysqlx.Datatypes.Scalar.String.prototype.getCollation = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.Mysqlx.Datatypes.Scalar.String.prototype.setCollation = function (value) {\n  jspb.Message.setField(this, 2, value);\n};\n\nproto.Mysqlx.Datatypes.Scalar.String.prototype.clearCollation = function () {\n  jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Mysqlx.Datatypes.Scalar.String.prototype.hasCollation = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Mysqlx.Datatypes.Scalar.Octets = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Mysqlx.Datatypes.Scalar.Octets, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.Mysqlx.Datatypes.Scalar.Octets.displayName = 'proto.Mysqlx.Datatypes.Scalar.Octets';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Mysqlx.Datatypes.Scalar.Octets.prototype.toObject = function (opt_includeInstance) {\n    return proto.Mysqlx.Datatypes.Scalar.Octets.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Mysqlx.Datatypes.Scalar.Octets} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Mysqlx.Datatypes.Scalar.Octets.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      value: msg.getValue_asB64(),\n      contentType: jspb.Message.getField(msg, 2)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Datatypes.Scalar.Octets}\n */\n\n\nproto.Mysqlx.Datatypes.Scalar.Octets.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Datatypes.Scalar.Octets();\n  return proto.Mysqlx.Datatypes.Scalar.Octets.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Datatypes.Scalar.Octets} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Datatypes.Scalar.Octets}\n */\n\n\nproto.Mysqlx.Datatypes.Scalar.Octets.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setValue(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setContentType(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Mysqlx.Datatypes.Scalar.Octets.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Datatypes.Scalar.Octets.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Datatypes.Scalar.Octets} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Mysqlx.Datatypes.Scalar.Octets.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f =\n  /** @type {!(string|Uint8Array)} */\n  jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeBytes(1, f);\n  }\n\n  f =\n  /** @type {number} */\n  jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeUint32(2, f);\n  }\n};\n/**\n * required bytes value = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.Mysqlx.Datatypes.Scalar.Octets.prototype.getValue = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * required bytes value = 1;\n * This is a type-conversion wrapper around `getValue()`\n * @return {string}\n */\n\n\nproto.Mysqlx.Datatypes.Scalar.Octets.prototype.getValue_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getValue())\n  );\n};\n/**\n * required bytes value = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getValue()`\n * @return {!Uint8Array}\n */\n\n\nproto.Mysqlx.Datatypes.Scalar.Octets.prototype.getValue_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getValue())\n  );\n};\n/** @param {!(string|Uint8Array)} value */\n\n\nproto.Mysqlx.Datatypes.Scalar.Octets.prototype.setValue = function (value) {\n  jspb.Message.setField(this, 1, value);\n};\n\nproto.Mysqlx.Datatypes.Scalar.Octets.prototype.clearValue = function () {\n  jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Mysqlx.Datatypes.Scalar.Octets.prototype.hasValue = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional uint32 content_type = 2;\n * @return {number}\n */\n\n\nproto.Mysqlx.Datatypes.Scalar.Octets.prototype.getContentType = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.Mysqlx.Datatypes.Scalar.Octets.prototype.setContentType = function (value) {\n  jspb.Message.setField(this, 2, value);\n};\n\nproto.Mysqlx.Datatypes.Scalar.Octets.prototype.clearContentType = function () {\n  jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Mysqlx.Datatypes.Scalar.Octets.prototype.hasContentType = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * required Type type = 1;\n * @return {!proto.Mysqlx.Datatypes.Scalar.Type}\n */\n\n\nproto.Mysqlx.Datatypes.Scalar.prototype.getType = function () {\n  return (\n    /** @type {!proto.Mysqlx.Datatypes.Scalar.Type} */\n    jspb.Message.getFieldWithDefault(this, 1, 1)\n  );\n};\n/** @param {!proto.Mysqlx.Datatypes.Scalar.Type} value */\n\n\nproto.Mysqlx.Datatypes.Scalar.prototype.setType = function (value) {\n  jspb.Message.setField(this, 1, value);\n};\n\nproto.Mysqlx.Datatypes.Scalar.prototype.clearType = function () {\n  jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Mysqlx.Datatypes.Scalar.prototype.hasType = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional sint64 v_signed_int = 2;\n * @return {number}\n */\n\n\nproto.Mysqlx.Datatypes.Scalar.prototype.getVSignedInt = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.Mysqlx.Datatypes.Scalar.prototype.setVSignedInt = function (value) {\n  jspb.Message.setField(this, 2, value);\n};\n\nproto.Mysqlx.Datatypes.Scalar.prototype.clearVSignedInt = function () {\n  jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Mysqlx.Datatypes.Scalar.prototype.hasVSignedInt = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional uint64 v_unsigned_int = 3;\n * @return {number}\n */\n\n\nproto.Mysqlx.Datatypes.Scalar.prototype.getVUnsignedInt = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.Mysqlx.Datatypes.Scalar.prototype.setVUnsignedInt = function (value) {\n  jspb.Message.setField(this, 3, value);\n};\n\nproto.Mysqlx.Datatypes.Scalar.prototype.clearVUnsignedInt = function () {\n  jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Mysqlx.Datatypes.Scalar.prototype.hasVUnsignedInt = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * optional Octets v_octets = 5;\n * @return {?proto.Mysqlx.Datatypes.Scalar.Octets}\n */\n\n\nproto.Mysqlx.Datatypes.Scalar.prototype.getVOctets = function () {\n  return (\n    /** @type{?proto.Mysqlx.Datatypes.Scalar.Octets} */\n    jspb.Message.getWrapperField(this, proto.Mysqlx.Datatypes.Scalar.Octets, 5)\n  );\n};\n/** @param {?proto.Mysqlx.Datatypes.Scalar.Octets|undefined} value */\n\n\nproto.Mysqlx.Datatypes.Scalar.prototype.setVOctets = function (value) {\n  jspb.Message.setWrapperField(this, 5, value);\n};\n\nproto.Mysqlx.Datatypes.Scalar.prototype.clearVOctets = function () {\n  this.setVOctets(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Mysqlx.Datatypes.Scalar.prototype.hasVOctets = function () {\n  return jspb.Message.getField(this, 5) != null;\n};\n/**\n * optional double v_double = 6;\n * @return {number}\n */\n\n\nproto.Mysqlx.Datatypes.Scalar.prototype.getVDouble = function () {\n  return (\n    /** @type {number} */\n    +jspb.Message.getFieldWithDefault(this, 6, 0.0)\n  );\n};\n/** @param {number} value */\n\n\nproto.Mysqlx.Datatypes.Scalar.prototype.setVDouble = function (value) {\n  jspb.Message.setField(this, 6, value);\n};\n\nproto.Mysqlx.Datatypes.Scalar.prototype.clearVDouble = function () {\n  jspb.Message.setField(this, 6, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Mysqlx.Datatypes.Scalar.prototype.hasVDouble = function () {\n  return jspb.Message.getField(this, 6) != null;\n};\n/**\n * optional float v_float = 7;\n * @return {number}\n */\n\n\nproto.Mysqlx.Datatypes.Scalar.prototype.getVFloat = function () {\n  return (\n    /** @type {number} */\n    +jspb.Message.getFieldWithDefault(this, 7, 0.0)\n  );\n};\n/** @param {number} value */\n\n\nproto.Mysqlx.Datatypes.Scalar.prototype.setVFloat = function (value) {\n  jspb.Message.setField(this, 7, value);\n};\n\nproto.Mysqlx.Datatypes.Scalar.prototype.clearVFloat = function () {\n  jspb.Message.setField(this, 7, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Mysqlx.Datatypes.Scalar.prototype.hasVFloat = function () {\n  return jspb.Message.getField(this, 7) != null;\n};\n/**\n * optional bool v_bool = 8;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\n\n\nproto.Mysqlx.Datatypes.Scalar.prototype.getVBool = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getFieldWithDefault(this, 8, false)\n  );\n};\n/** @param {boolean} value */\n\n\nproto.Mysqlx.Datatypes.Scalar.prototype.setVBool = function (value) {\n  jspb.Message.setField(this, 8, value);\n};\n\nproto.Mysqlx.Datatypes.Scalar.prototype.clearVBool = function () {\n  jspb.Message.setField(this, 8, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Mysqlx.Datatypes.Scalar.prototype.hasVBool = function () {\n  return jspb.Message.getField(this, 8) != null;\n};\n/**\n * optional String v_string = 9;\n * @return {?proto.Mysqlx.Datatypes.Scalar.String}\n */\n\n\nproto.Mysqlx.Datatypes.Scalar.prototype.getVString = function () {\n  return (\n    /** @type{?proto.Mysqlx.Datatypes.Scalar.String} */\n    jspb.Message.getWrapperField(this, proto.Mysqlx.Datatypes.Scalar.String, 9)\n  );\n};\n/** @param {?proto.Mysqlx.Datatypes.Scalar.String|undefined} value */\n\n\nproto.Mysqlx.Datatypes.Scalar.prototype.setVString = function (value) {\n  jspb.Message.setWrapperField(this, 9, value);\n};\n\nproto.Mysqlx.Datatypes.Scalar.prototype.clearVString = function () {\n  this.setVString(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Mysqlx.Datatypes.Scalar.prototype.hasVString = function () {\n  return jspb.Message.getField(this, 9) != null;\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Mysqlx.Datatypes.Object = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.Mysqlx.Datatypes.Object.repeatedFields_, null);\n};\n\ngoog.inherits(proto.Mysqlx.Datatypes.Object, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.Mysqlx.Datatypes.Object.displayName = 'proto.Mysqlx.Datatypes.Object';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.Mysqlx.Datatypes.Object.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Mysqlx.Datatypes.Object.prototype.toObject = function (opt_includeInstance) {\n    return proto.Mysqlx.Datatypes.Object.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Mysqlx.Datatypes.Object} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Mysqlx.Datatypes.Object.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      fldList: jspb.Message.toObjectList(msg.getFldList(), proto.Mysqlx.Datatypes.Object.ObjectField.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Datatypes.Object}\n */\n\n\nproto.Mysqlx.Datatypes.Object.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Datatypes.Object();\n  return proto.Mysqlx.Datatypes.Object.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Datatypes.Object} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Datatypes.Object}\n */\n\n\nproto.Mysqlx.Datatypes.Object.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.Mysqlx.Datatypes.Object.ObjectField();\n        reader.readMessage(value, proto.Mysqlx.Datatypes.Object.ObjectField.deserializeBinaryFromReader);\n        msg.addFld(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Mysqlx.Datatypes.Object.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Datatypes.Object.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Datatypes.Object} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Mysqlx.Datatypes.Object.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getFldList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto.Mysqlx.Datatypes.Object.ObjectField.serializeBinaryToWriter);\n  }\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Mysqlx.Datatypes.Object.ObjectField = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Mysqlx.Datatypes.Object.ObjectField, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.Mysqlx.Datatypes.Object.ObjectField.displayName = 'proto.Mysqlx.Datatypes.Object.ObjectField';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Mysqlx.Datatypes.Object.ObjectField.prototype.toObject = function (opt_includeInstance) {\n    return proto.Mysqlx.Datatypes.Object.ObjectField.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Mysqlx.Datatypes.Object.ObjectField} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Mysqlx.Datatypes.Object.ObjectField.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      key: jspb.Message.getField(msg, 1),\n      value: (f = msg.getValue()) && proto.Mysqlx.Datatypes.Any.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Datatypes.Object.ObjectField}\n */\n\n\nproto.Mysqlx.Datatypes.Object.ObjectField.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Datatypes.Object.ObjectField();\n  return proto.Mysqlx.Datatypes.Object.ObjectField.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Datatypes.Object.ObjectField} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Datatypes.Object.ObjectField}\n */\n\n\nproto.Mysqlx.Datatypes.Object.ObjectField.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setKey(value);\n        break;\n\n      case 2:\n        var value = new proto.Mysqlx.Datatypes.Any();\n        reader.readMessage(value, proto.Mysqlx.Datatypes.Any.deserializeBinaryFromReader);\n        msg.setValue(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Mysqlx.Datatypes.Object.ObjectField.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Datatypes.Object.ObjectField.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Datatypes.Object.ObjectField} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Mysqlx.Datatypes.Object.ObjectField.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f =\n  /** @type {string} */\n  jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getValue();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto.Mysqlx.Datatypes.Any.serializeBinaryToWriter);\n  }\n};\n/**\n * required string key = 1;\n * @return {string}\n */\n\n\nproto.Mysqlx.Datatypes.Object.ObjectField.prototype.getKey = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.Mysqlx.Datatypes.Object.ObjectField.prototype.setKey = function (value) {\n  jspb.Message.setField(this, 1, value);\n};\n\nproto.Mysqlx.Datatypes.Object.ObjectField.prototype.clearKey = function () {\n  jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Mysqlx.Datatypes.Object.ObjectField.prototype.hasKey = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * required Any value = 2;\n * @return {!proto.Mysqlx.Datatypes.Any}\n */\n\n\nproto.Mysqlx.Datatypes.Object.ObjectField.prototype.getValue = function () {\n  return (\n    /** @type{!proto.Mysqlx.Datatypes.Any} */\n    jspb.Message.getWrapperField(this, proto.Mysqlx.Datatypes.Any, 2, 1)\n  );\n};\n/** @param {!proto.Mysqlx.Datatypes.Any} value */\n\n\nproto.Mysqlx.Datatypes.Object.ObjectField.prototype.setValue = function (value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\nproto.Mysqlx.Datatypes.Object.ObjectField.prototype.clearValue = function () {\n  jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Mysqlx.Datatypes.Object.ObjectField.prototype.hasValue = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * repeated ObjectField fld = 1;\n * @return {!Array.<!proto.Mysqlx.Datatypes.Object.ObjectField>}\n */\n\n\nproto.Mysqlx.Datatypes.Object.prototype.getFldList = function () {\n  return (\n    /** @type{!Array.<!proto.Mysqlx.Datatypes.Object.ObjectField>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.Mysqlx.Datatypes.Object.ObjectField, 1)\n  );\n};\n/** @param {!Array.<!proto.Mysqlx.Datatypes.Object.ObjectField>} value */\n\n\nproto.Mysqlx.Datatypes.Object.prototype.setFldList = function (value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.Mysqlx.Datatypes.Object.ObjectField=} opt_value\n * @param {number=} opt_index\n * @return {!proto.Mysqlx.Datatypes.Object.ObjectField}\n */\n\n\nproto.Mysqlx.Datatypes.Object.prototype.addFld = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Mysqlx.Datatypes.Object.ObjectField, opt_index);\n};\n\nproto.Mysqlx.Datatypes.Object.prototype.clearFldList = function () {\n  this.setFldList([]);\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Mysqlx.Datatypes.Array = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.Mysqlx.Datatypes.Array.repeatedFields_, null);\n};\n\ngoog.inherits(proto.Mysqlx.Datatypes.Array, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.Mysqlx.Datatypes.Array.displayName = 'proto.Mysqlx.Datatypes.Array';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.Mysqlx.Datatypes.Array.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Mysqlx.Datatypes.Array.prototype.toObject = function (opt_includeInstance) {\n    return proto.Mysqlx.Datatypes.Array.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Mysqlx.Datatypes.Array} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Mysqlx.Datatypes.Array.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      valueList: jspb.Message.toObjectList(msg.getValueList(), proto.Mysqlx.Datatypes.Any.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Datatypes.Array}\n */\n\n\nproto.Mysqlx.Datatypes.Array.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Datatypes.Array();\n  return proto.Mysqlx.Datatypes.Array.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Datatypes.Array} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Datatypes.Array}\n */\n\n\nproto.Mysqlx.Datatypes.Array.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.Mysqlx.Datatypes.Any();\n        reader.readMessage(value, proto.Mysqlx.Datatypes.Any.deserializeBinaryFromReader);\n        msg.addValue(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Mysqlx.Datatypes.Array.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Datatypes.Array.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Datatypes.Array} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Mysqlx.Datatypes.Array.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getValueList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto.Mysqlx.Datatypes.Any.serializeBinaryToWriter);\n  }\n};\n/**\n * repeated Any value = 1;\n * @return {!Array.<!proto.Mysqlx.Datatypes.Any>}\n */\n\n\nproto.Mysqlx.Datatypes.Array.prototype.getValueList = function () {\n  return (\n    /** @type{!Array.<!proto.Mysqlx.Datatypes.Any>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.Mysqlx.Datatypes.Any, 1)\n  );\n};\n/** @param {!Array.<!proto.Mysqlx.Datatypes.Any>} value */\n\n\nproto.Mysqlx.Datatypes.Array.prototype.setValueList = function (value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.Mysqlx.Datatypes.Any=} opt_value\n * @param {number=} opt_index\n * @return {!proto.Mysqlx.Datatypes.Any}\n */\n\n\nproto.Mysqlx.Datatypes.Array.prototype.addValue = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Mysqlx.Datatypes.Any, opt_index);\n};\n\nproto.Mysqlx.Datatypes.Array.prototype.clearValueList = function () {\n  this.setValueList([]);\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Mysqlx.Datatypes.Any = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Mysqlx.Datatypes.Any, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.Mysqlx.Datatypes.Any.displayName = 'proto.Mysqlx.Datatypes.Any';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Mysqlx.Datatypes.Any.prototype.toObject = function (opt_includeInstance) {\n    return proto.Mysqlx.Datatypes.Any.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Mysqlx.Datatypes.Any} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Mysqlx.Datatypes.Any.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      type: jspb.Message.getField(msg, 1),\n      scalar: (f = msg.getScalar()) && proto.Mysqlx.Datatypes.Scalar.toObject(includeInstance, f),\n      obj: (f = msg.getObj()) && proto.Mysqlx.Datatypes.Object.toObject(includeInstance, f),\n      array: (f = msg.getArray()) && proto.Mysqlx.Datatypes.Array.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Datatypes.Any}\n */\n\n\nproto.Mysqlx.Datatypes.Any.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Datatypes.Any();\n  return proto.Mysqlx.Datatypes.Any.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Datatypes.Any} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Datatypes.Any}\n */\n\n\nproto.Mysqlx.Datatypes.Any.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!proto.Mysqlx.Datatypes.Any.Type} */\n        reader.readEnum();\n        msg.setType(value);\n        break;\n\n      case 2:\n        var value = new proto.Mysqlx.Datatypes.Scalar();\n        reader.readMessage(value, proto.Mysqlx.Datatypes.Scalar.deserializeBinaryFromReader);\n        msg.setScalar(value);\n        break;\n\n      case 3:\n        var value = new proto.Mysqlx.Datatypes.Object();\n        reader.readMessage(value, proto.Mysqlx.Datatypes.Object.deserializeBinaryFromReader);\n        msg.setObj(value);\n        break;\n\n      case 4:\n        var value = new proto.Mysqlx.Datatypes.Array();\n        reader.readMessage(value, proto.Mysqlx.Datatypes.Array.deserializeBinaryFromReader);\n        msg.setArray(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Mysqlx.Datatypes.Any.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Datatypes.Any.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Datatypes.Any} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Mysqlx.Datatypes.Any.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f =\n  /** @type {!proto.Mysqlx.Datatypes.Any.Type} */\n  jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeEnum(1, f);\n  }\n\n  f = message.getScalar();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto.Mysqlx.Datatypes.Scalar.serializeBinaryToWriter);\n  }\n\n  f = message.getObj();\n\n  if (f != null) {\n    writer.writeMessage(3, f, proto.Mysqlx.Datatypes.Object.serializeBinaryToWriter);\n  }\n\n  f = message.getArray();\n\n  if (f != null) {\n    writer.writeMessage(4, f, proto.Mysqlx.Datatypes.Array.serializeBinaryToWriter);\n  }\n};\n/**\n * @enum {number}\n */\n\n\nproto.Mysqlx.Datatypes.Any.Type = {\n  SCALAR: 1,\n  OBJECT: 2,\n  ARRAY: 3\n};\n/**\n * required Type type = 1;\n * @return {!proto.Mysqlx.Datatypes.Any.Type}\n */\n\nproto.Mysqlx.Datatypes.Any.prototype.getType = function () {\n  return (\n    /** @type {!proto.Mysqlx.Datatypes.Any.Type} */\n    jspb.Message.getFieldWithDefault(this, 1, 1)\n  );\n};\n/** @param {!proto.Mysqlx.Datatypes.Any.Type} value */\n\n\nproto.Mysqlx.Datatypes.Any.prototype.setType = function (value) {\n  jspb.Message.setField(this, 1, value);\n};\n\nproto.Mysqlx.Datatypes.Any.prototype.clearType = function () {\n  jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Mysqlx.Datatypes.Any.prototype.hasType = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional Scalar scalar = 2;\n * @return {?proto.Mysqlx.Datatypes.Scalar}\n */\n\n\nproto.Mysqlx.Datatypes.Any.prototype.getScalar = function () {\n  return (\n    /** @type{?proto.Mysqlx.Datatypes.Scalar} */\n    jspb.Message.getWrapperField(this, proto.Mysqlx.Datatypes.Scalar, 2)\n  );\n};\n/** @param {?proto.Mysqlx.Datatypes.Scalar|undefined} value */\n\n\nproto.Mysqlx.Datatypes.Any.prototype.setScalar = function (value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\nproto.Mysqlx.Datatypes.Any.prototype.clearScalar = function () {\n  this.setScalar(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Mysqlx.Datatypes.Any.prototype.hasScalar = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional Object obj = 3;\n * @return {?proto.Mysqlx.Datatypes.Object}\n */\n\n\nproto.Mysqlx.Datatypes.Any.prototype.getObj = function () {\n  return (\n    /** @type{?proto.Mysqlx.Datatypes.Object} */\n    jspb.Message.getWrapperField(this, proto.Mysqlx.Datatypes.Object, 3)\n  );\n};\n/** @param {?proto.Mysqlx.Datatypes.Object|undefined} value */\n\n\nproto.Mysqlx.Datatypes.Any.prototype.setObj = function (value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\nproto.Mysqlx.Datatypes.Any.prototype.clearObj = function () {\n  this.setObj(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Mysqlx.Datatypes.Any.prototype.hasObj = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * optional Array array = 4;\n * @return {?proto.Mysqlx.Datatypes.Array}\n */\n\n\nproto.Mysqlx.Datatypes.Any.prototype.getArray = function () {\n  return (\n    /** @type{?proto.Mysqlx.Datatypes.Array} */\n    jspb.Message.getWrapperField(this, proto.Mysqlx.Datatypes.Array, 4)\n  );\n};\n/** @param {?proto.Mysqlx.Datatypes.Array|undefined} value */\n\n\nproto.Mysqlx.Datatypes.Any.prototype.setArray = function (value) {\n  jspb.Message.setWrapperField(this, 4, value);\n};\n\nproto.Mysqlx.Datatypes.Any.prototype.clearArray = function () {\n  this.setArray(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Mysqlx.Datatypes.Any.prototype.hasArray = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n\ngoog.object.extend(exports, proto.Mysqlx.Datatypes);","map":{"version":3,"sources":["/home/ad/Bureau/infof308/src/node_modules/@mysql/xdevapi/lib/Protocol/Stubs/mysqlx_datatypes_pb.js"],"names":["jspb","require","goog","global","Function","exportSymbol","proto","Mysqlx","Datatypes","Scalar","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","type","getField","vSignedInt","vUnsignedInt","vOctets","getVOctets","Octets","vDouble","getOptionalFloatingPointField","vFloat","vBool","vString","getVString","String","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readEnum","setType","readSint64","setVSignedInt","readUint64","setVUnsignedInt","readMessage","setVOctets","readDouble","setVDouble","readFloat","setVFloat","readBool","setVBool","setVString","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","writeEnum","writeSint64","writeUint64","writeMessage","writeDouble","writeFloat","writeBool","Type","V_SINT","V_UINT","V_NULL","V_OCTETS","V_DOUBLE","V_FLOAT","V_BOOL","V_STRING","getValue_asB64","collation","readBytes","setValue","setCollation","writeBytes","getValue","getFieldWithDefault","bytesAsB64","getValue_asU8","bytesAsU8","setField","clearValue","hasValue","getCollation","clearCollation","hasCollation","contentType","readUint32","setContentType","writeUint32","getContentType","clearContentType","hasContentType","getType","clearType","hasType","getVSignedInt","clearVSignedInt","hasVSignedInt","getVUnsignedInt","clearVUnsignedInt","hasVUnsignedInt","getWrapperField","setWrapperField","clearVOctets","hasVOctets","getVDouble","clearVDouble","hasVDouble","getVFloat","clearVFloat","hasVFloat","getVBool","clearVBool","hasVBool","clearVString","hasVString","Object","repeatedFields_","fldList","toObjectList","getFldList","ObjectField","addFld","length","writeRepeatedMessage","key","Any","readString","setKey","writeString","getKey","clearKey","hasKey","getRepeatedWrapperField","setFldList","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","clearFldList","Array","valueList","getValueList","addValue","setValueList","clearValueList","scalar","getScalar","getObj","array","getArray","setScalar","setObj","setArray","SCALAR","OBJECT","ARRAY","clearScalar","hasScalar","clearObj","hasObj","clearArray","hasArray","object","extend","exports"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2017, 2021, Oracle and/or its affiliates.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License, version 2.0, as\n * published by the Free Software Foundation.\n *\n * This program is also distributed with certain software (including\n * but not limited to OpenSSL) that is licensed under separate terms,\n * as designated in a particular file or component or in included license\n * documentation.  The authors of MySQL hereby grant you an\n * additional permission to link the program and your derivative works\n * with the separately licensed software that they have included with\n * MySQL.\n *\n * Without limiting anything contained in the foregoing, this file,\n * which is part of MySQL Connector/Node.js, is also subject to the\n * Universal FOSS Exception, version 1.0, a copy of which can be found at\n * http://oss.oracle.com/licenses/universal-foss-exception.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License, version 2.0, for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.Mysqlx.Datatypes.Any', null, global);\ngoog.exportSymbol('proto.Mysqlx.Datatypes.Any.Type', null, global);\ngoog.exportSymbol('proto.Mysqlx.Datatypes.Array', null, global);\ngoog.exportSymbol('proto.Mysqlx.Datatypes.Object', null, global);\ngoog.exportSymbol('proto.Mysqlx.Datatypes.Object.ObjectField', null, global);\ngoog.exportSymbol('proto.Mysqlx.Datatypes.Scalar', null, global);\ngoog.exportSymbol('proto.Mysqlx.Datatypes.Scalar.Octets', null, global);\ngoog.exportSymbol('proto.Mysqlx.Datatypes.Scalar.String', null, global);\ngoog.exportSymbol('proto.Mysqlx.Datatypes.Scalar.Type', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Mysqlx.Datatypes.Scalar = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Mysqlx.Datatypes.Scalar, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Mysqlx.Datatypes.Scalar.displayName = 'proto.Mysqlx.Datatypes.Scalar';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Mysqlx.Datatypes.Scalar.prototype.toObject = function(opt_includeInstance) {\n  return proto.Mysqlx.Datatypes.Scalar.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Mysqlx.Datatypes.Scalar} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Datatypes.Scalar.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    type: jspb.Message.getField(msg, 1),\n    vSignedInt: jspb.Message.getField(msg, 2),\n    vUnsignedInt: jspb.Message.getField(msg, 3),\n    vOctets: (f = msg.getVOctets()) && proto.Mysqlx.Datatypes.Scalar.Octets.toObject(includeInstance, f),\n    vDouble: jspb.Message.getOptionalFloatingPointField(msg, 6),\n    vFloat: jspb.Message.getOptionalFloatingPointField(msg, 7),\n    vBool: jspb.Message.getField(msg, 8),\n    vString: (f = msg.getVString()) && proto.Mysqlx.Datatypes.Scalar.String.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Datatypes.Scalar}\n */\nproto.Mysqlx.Datatypes.Scalar.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Datatypes.Scalar;\n  return proto.Mysqlx.Datatypes.Scalar.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Datatypes.Scalar} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Datatypes.Scalar}\n */\nproto.Mysqlx.Datatypes.Scalar.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.Mysqlx.Datatypes.Scalar.Type} */ (reader.readEnum());\n      msg.setType(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readSint64());\n      msg.setVSignedInt(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setVUnsignedInt(value);\n      break;\n    case 5:\n      var value = new proto.Mysqlx.Datatypes.Scalar.Octets;\n      reader.readMessage(value,proto.Mysqlx.Datatypes.Scalar.Octets.deserializeBinaryFromReader);\n      msg.setVOctets(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setVDouble(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readFloat());\n      msg.setVFloat(value);\n      break;\n    case 8:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setVBool(value);\n      break;\n    case 9:\n      var value = new proto.Mysqlx.Datatypes.Scalar.String;\n      reader.readMessage(value,proto.Mysqlx.Datatypes.Scalar.String.deserializeBinaryFromReader);\n      msg.setVString(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Mysqlx.Datatypes.Scalar.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Datatypes.Scalar.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Datatypes.Scalar} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Datatypes.Scalar.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {!proto.Mysqlx.Datatypes.Scalar.Type} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeSint64(\n      2,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n  f = message.getVOctets();\n  if (f != null) {\n    writer.writeMessage(\n      5,\n      f,\n      proto.Mysqlx.Datatypes.Scalar.Octets.serializeBinaryToWriter\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 6));\n  if (f != null) {\n    writer.writeDouble(\n      6,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 7));\n  if (f != null) {\n    writer.writeFloat(\n      7,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 8));\n  if (f != null) {\n    writer.writeBool(\n      8,\n      f\n    );\n  }\n  f = message.getVString();\n  if (f != null) {\n    writer.writeMessage(\n      9,\n      f,\n      proto.Mysqlx.Datatypes.Scalar.String.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.Mysqlx.Datatypes.Scalar.Type = {\n  V_SINT: 1,\n  V_UINT: 2,\n  V_NULL: 3,\n  V_OCTETS: 4,\n  V_DOUBLE: 5,\n  V_FLOAT: 6,\n  V_BOOL: 7,\n  V_STRING: 8\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Mysqlx.Datatypes.Scalar.String = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Mysqlx.Datatypes.Scalar.String, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Mysqlx.Datatypes.Scalar.String.displayName = 'proto.Mysqlx.Datatypes.Scalar.String';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Mysqlx.Datatypes.Scalar.String.prototype.toObject = function(opt_includeInstance) {\n  return proto.Mysqlx.Datatypes.Scalar.String.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Mysqlx.Datatypes.Scalar.String} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Datatypes.Scalar.String.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    value: msg.getValue_asB64(),\n    collation: jspb.Message.getField(msg, 2)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Datatypes.Scalar.String}\n */\nproto.Mysqlx.Datatypes.Scalar.String.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Datatypes.Scalar.String;\n  return proto.Mysqlx.Datatypes.Scalar.String.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Datatypes.Scalar.String} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Datatypes.Scalar.String}\n */\nproto.Mysqlx.Datatypes.Scalar.String.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setValue(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setCollation(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Mysqlx.Datatypes.Scalar.String.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Datatypes.Scalar.String.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Datatypes.Scalar.String} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Datatypes.Scalar.String.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * required bytes value = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.Mysqlx.Datatypes.Scalar.String.prototype.getValue = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * required bytes value = 1;\n * This is a type-conversion wrapper around `getValue()`\n * @return {string}\n */\nproto.Mysqlx.Datatypes.Scalar.String.prototype.getValue_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getValue()));\n};\n\n\n/**\n * required bytes value = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getValue()`\n * @return {!Uint8Array}\n */\nproto.Mysqlx.Datatypes.Scalar.String.prototype.getValue_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getValue()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.Mysqlx.Datatypes.Scalar.String.prototype.setValue = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.Mysqlx.Datatypes.Scalar.String.prototype.clearValue = function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Mysqlx.Datatypes.Scalar.String.prototype.hasValue = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional uint64 collation = 2;\n * @return {number}\n */\nproto.Mysqlx.Datatypes.Scalar.String.prototype.getCollation = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.Mysqlx.Datatypes.Scalar.String.prototype.setCollation = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\nproto.Mysqlx.Datatypes.Scalar.String.prototype.clearCollation = function() {\n  jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Mysqlx.Datatypes.Scalar.String.prototype.hasCollation = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Mysqlx.Datatypes.Scalar.Octets = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Mysqlx.Datatypes.Scalar.Octets, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Mysqlx.Datatypes.Scalar.Octets.displayName = 'proto.Mysqlx.Datatypes.Scalar.Octets';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Mysqlx.Datatypes.Scalar.Octets.prototype.toObject = function(opt_includeInstance) {\n  return proto.Mysqlx.Datatypes.Scalar.Octets.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Mysqlx.Datatypes.Scalar.Octets} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Datatypes.Scalar.Octets.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    value: msg.getValue_asB64(),\n    contentType: jspb.Message.getField(msg, 2)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Datatypes.Scalar.Octets}\n */\nproto.Mysqlx.Datatypes.Scalar.Octets.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Datatypes.Scalar.Octets;\n  return proto.Mysqlx.Datatypes.Scalar.Octets.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Datatypes.Scalar.Octets} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Datatypes.Scalar.Octets}\n */\nproto.Mysqlx.Datatypes.Scalar.Octets.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setValue(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setContentType(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Mysqlx.Datatypes.Scalar.Octets.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Datatypes.Scalar.Octets.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Datatypes.Scalar.Octets} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Datatypes.Scalar.Octets.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeUint32(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * required bytes value = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.Mysqlx.Datatypes.Scalar.Octets.prototype.getValue = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * required bytes value = 1;\n * This is a type-conversion wrapper around `getValue()`\n * @return {string}\n */\nproto.Mysqlx.Datatypes.Scalar.Octets.prototype.getValue_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getValue()));\n};\n\n\n/**\n * required bytes value = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getValue()`\n * @return {!Uint8Array}\n */\nproto.Mysqlx.Datatypes.Scalar.Octets.prototype.getValue_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getValue()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.Mysqlx.Datatypes.Scalar.Octets.prototype.setValue = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.Mysqlx.Datatypes.Scalar.Octets.prototype.clearValue = function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Mysqlx.Datatypes.Scalar.Octets.prototype.hasValue = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional uint32 content_type = 2;\n * @return {number}\n */\nproto.Mysqlx.Datatypes.Scalar.Octets.prototype.getContentType = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.Mysqlx.Datatypes.Scalar.Octets.prototype.setContentType = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\nproto.Mysqlx.Datatypes.Scalar.Octets.prototype.clearContentType = function() {\n  jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Mysqlx.Datatypes.Scalar.Octets.prototype.hasContentType = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * required Type type = 1;\n * @return {!proto.Mysqlx.Datatypes.Scalar.Type}\n */\nproto.Mysqlx.Datatypes.Scalar.prototype.getType = function() {\n  return /** @type {!proto.Mysqlx.Datatypes.Scalar.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 1));\n};\n\n\n/** @param {!proto.Mysqlx.Datatypes.Scalar.Type} value */\nproto.Mysqlx.Datatypes.Scalar.prototype.setType = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.Mysqlx.Datatypes.Scalar.prototype.clearType = function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Mysqlx.Datatypes.Scalar.prototype.hasType = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional sint64 v_signed_int = 2;\n * @return {number}\n */\nproto.Mysqlx.Datatypes.Scalar.prototype.getVSignedInt = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.Mysqlx.Datatypes.Scalar.prototype.setVSignedInt = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\nproto.Mysqlx.Datatypes.Scalar.prototype.clearVSignedInt = function() {\n  jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Mysqlx.Datatypes.Scalar.prototype.hasVSignedInt = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional uint64 v_unsigned_int = 3;\n * @return {number}\n */\nproto.Mysqlx.Datatypes.Scalar.prototype.getVUnsignedInt = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.Mysqlx.Datatypes.Scalar.prototype.setVUnsignedInt = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\nproto.Mysqlx.Datatypes.Scalar.prototype.clearVUnsignedInt = function() {\n  jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Mysqlx.Datatypes.Scalar.prototype.hasVUnsignedInt = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional Octets v_octets = 5;\n * @return {?proto.Mysqlx.Datatypes.Scalar.Octets}\n */\nproto.Mysqlx.Datatypes.Scalar.prototype.getVOctets = function() {\n  return /** @type{?proto.Mysqlx.Datatypes.Scalar.Octets} */ (\n    jspb.Message.getWrapperField(this, proto.Mysqlx.Datatypes.Scalar.Octets, 5));\n};\n\n\n/** @param {?proto.Mysqlx.Datatypes.Scalar.Octets|undefined} value */\nproto.Mysqlx.Datatypes.Scalar.prototype.setVOctets = function(value) {\n  jspb.Message.setWrapperField(this, 5, value);\n};\n\n\nproto.Mysqlx.Datatypes.Scalar.prototype.clearVOctets = function() {\n  this.setVOctets(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Mysqlx.Datatypes.Scalar.prototype.hasVOctets = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional double v_double = 6;\n * @return {number}\n */\nproto.Mysqlx.Datatypes.Scalar.prototype.getVDouble = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));\n};\n\n\n/** @param {number} value */\nproto.Mysqlx.Datatypes.Scalar.prototype.setVDouble = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\nproto.Mysqlx.Datatypes.Scalar.prototype.clearVDouble = function() {\n  jspb.Message.setField(this, 6, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Mysqlx.Datatypes.Scalar.prototype.hasVDouble = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n/**\n * optional float v_float = 7;\n * @return {number}\n */\nproto.Mysqlx.Datatypes.Scalar.prototype.getVFloat = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 7, 0.0));\n};\n\n\n/** @param {number} value */\nproto.Mysqlx.Datatypes.Scalar.prototype.setVFloat = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\nproto.Mysqlx.Datatypes.Scalar.prototype.clearVFloat = function() {\n  jspb.Message.setField(this, 7, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Mysqlx.Datatypes.Scalar.prototype.hasVFloat = function() {\n  return jspb.Message.getField(this, 7) != null;\n};\n\n\n/**\n * optional bool v_bool = 8;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.Mysqlx.Datatypes.Scalar.prototype.getVBool = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 8, false));\n};\n\n\n/** @param {boolean} value */\nproto.Mysqlx.Datatypes.Scalar.prototype.setVBool = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\nproto.Mysqlx.Datatypes.Scalar.prototype.clearVBool = function() {\n  jspb.Message.setField(this, 8, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Mysqlx.Datatypes.Scalar.prototype.hasVBool = function() {\n  return jspb.Message.getField(this, 8) != null;\n};\n\n\n/**\n * optional String v_string = 9;\n * @return {?proto.Mysqlx.Datatypes.Scalar.String}\n */\nproto.Mysqlx.Datatypes.Scalar.prototype.getVString = function() {\n  return /** @type{?proto.Mysqlx.Datatypes.Scalar.String} */ (\n    jspb.Message.getWrapperField(this, proto.Mysqlx.Datatypes.Scalar.String, 9));\n};\n\n\n/** @param {?proto.Mysqlx.Datatypes.Scalar.String|undefined} value */\nproto.Mysqlx.Datatypes.Scalar.prototype.setVString = function(value) {\n  jspb.Message.setWrapperField(this, 9, value);\n};\n\n\nproto.Mysqlx.Datatypes.Scalar.prototype.clearVString = function() {\n  this.setVString(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Mysqlx.Datatypes.Scalar.prototype.hasVString = function() {\n  return jspb.Message.getField(this, 9) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Mysqlx.Datatypes.Object = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.Mysqlx.Datatypes.Object.repeatedFields_, null);\n};\ngoog.inherits(proto.Mysqlx.Datatypes.Object, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Mysqlx.Datatypes.Object.displayName = 'proto.Mysqlx.Datatypes.Object';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.Mysqlx.Datatypes.Object.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Mysqlx.Datatypes.Object.prototype.toObject = function(opt_includeInstance) {\n  return proto.Mysqlx.Datatypes.Object.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Mysqlx.Datatypes.Object} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Datatypes.Object.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    fldList: jspb.Message.toObjectList(msg.getFldList(),\n    proto.Mysqlx.Datatypes.Object.ObjectField.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Datatypes.Object}\n */\nproto.Mysqlx.Datatypes.Object.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Datatypes.Object;\n  return proto.Mysqlx.Datatypes.Object.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Datatypes.Object} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Datatypes.Object}\n */\nproto.Mysqlx.Datatypes.Object.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.Mysqlx.Datatypes.Object.ObjectField;\n      reader.readMessage(value,proto.Mysqlx.Datatypes.Object.ObjectField.deserializeBinaryFromReader);\n      msg.addFld(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Mysqlx.Datatypes.Object.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Datatypes.Object.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Datatypes.Object} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Datatypes.Object.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFldList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.Mysqlx.Datatypes.Object.ObjectField.serializeBinaryToWriter\n    );\n  }\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Mysqlx.Datatypes.Object.ObjectField = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Mysqlx.Datatypes.Object.ObjectField, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Mysqlx.Datatypes.Object.ObjectField.displayName = 'proto.Mysqlx.Datatypes.Object.ObjectField';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Mysqlx.Datatypes.Object.ObjectField.prototype.toObject = function(opt_includeInstance) {\n  return proto.Mysqlx.Datatypes.Object.ObjectField.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Mysqlx.Datatypes.Object.ObjectField} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Datatypes.Object.ObjectField.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    key: jspb.Message.getField(msg, 1),\n    value: (f = msg.getValue()) && proto.Mysqlx.Datatypes.Any.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Datatypes.Object.ObjectField}\n */\nproto.Mysqlx.Datatypes.Object.ObjectField.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Datatypes.Object.ObjectField;\n  return proto.Mysqlx.Datatypes.Object.ObjectField.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Datatypes.Object.ObjectField} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Datatypes.Object.ObjectField}\n */\nproto.Mysqlx.Datatypes.Object.ObjectField.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setKey(value);\n      break;\n    case 2:\n      var value = new proto.Mysqlx.Datatypes.Any;\n      reader.readMessage(value,proto.Mysqlx.Datatypes.Any.deserializeBinaryFromReader);\n      msg.setValue(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Mysqlx.Datatypes.Object.ObjectField.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Datatypes.Object.ObjectField.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Datatypes.Object.ObjectField} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Datatypes.Object.ObjectField.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getValue();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.Mysqlx.Datatypes.Any.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * required string key = 1;\n * @return {string}\n */\nproto.Mysqlx.Datatypes.Object.ObjectField.prototype.getKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Mysqlx.Datatypes.Object.ObjectField.prototype.setKey = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.Mysqlx.Datatypes.Object.ObjectField.prototype.clearKey = function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Mysqlx.Datatypes.Object.ObjectField.prototype.hasKey = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * required Any value = 2;\n * @return {!proto.Mysqlx.Datatypes.Any}\n */\nproto.Mysqlx.Datatypes.Object.ObjectField.prototype.getValue = function() {\n  return /** @type{!proto.Mysqlx.Datatypes.Any} */ (\n    jspb.Message.getWrapperField(this, proto.Mysqlx.Datatypes.Any, 2, 1));\n};\n\n\n/** @param {!proto.Mysqlx.Datatypes.Any} value */\nproto.Mysqlx.Datatypes.Object.ObjectField.prototype.setValue = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.Mysqlx.Datatypes.Object.ObjectField.prototype.clearValue = function() {\n  jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Mysqlx.Datatypes.Object.ObjectField.prototype.hasValue = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * repeated ObjectField fld = 1;\n * @return {!Array.<!proto.Mysqlx.Datatypes.Object.ObjectField>}\n */\nproto.Mysqlx.Datatypes.Object.prototype.getFldList = function() {\n  return /** @type{!Array.<!proto.Mysqlx.Datatypes.Object.ObjectField>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.Mysqlx.Datatypes.Object.ObjectField, 1));\n};\n\n\n/** @param {!Array.<!proto.Mysqlx.Datatypes.Object.ObjectField>} value */\nproto.Mysqlx.Datatypes.Object.prototype.setFldList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.Mysqlx.Datatypes.Object.ObjectField=} opt_value\n * @param {number=} opt_index\n * @return {!proto.Mysqlx.Datatypes.Object.ObjectField}\n */\nproto.Mysqlx.Datatypes.Object.prototype.addFld = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Mysqlx.Datatypes.Object.ObjectField, opt_index);\n};\n\n\nproto.Mysqlx.Datatypes.Object.prototype.clearFldList = function() {\n  this.setFldList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Mysqlx.Datatypes.Array = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.Mysqlx.Datatypes.Array.repeatedFields_, null);\n};\ngoog.inherits(proto.Mysqlx.Datatypes.Array, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Mysqlx.Datatypes.Array.displayName = 'proto.Mysqlx.Datatypes.Array';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.Mysqlx.Datatypes.Array.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Mysqlx.Datatypes.Array.prototype.toObject = function(opt_includeInstance) {\n  return proto.Mysqlx.Datatypes.Array.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Mysqlx.Datatypes.Array} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Datatypes.Array.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    valueList: jspb.Message.toObjectList(msg.getValueList(),\n    proto.Mysqlx.Datatypes.Any.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Datatypes.Array}\n */\nproto.Mysqlx.Datatypes.Array.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Datatypes.Array;\n  return proto.Mysqlx.Datatypes.Array.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Datatypes.Array} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Datatypes.Array}\n */\nproto.Mysqlx.Datatypes.Array.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.Mysqlx.Datatypes.Any;\n      reader.readMessage(value,proto.Mysqlx.Datatypes.Any.deserializeBinaryFromReader);\n      msg.addValue(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Mysqlx.Datatypes.Array.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Datatypes.Array.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Datatypes.Array} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Datatypes.Array.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getValueList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.Mysqlx.Datatypes.Any.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated Any value = 1;\n * @return {!Array.<!proto.Mysqlx.Datatypes.Any>}\n */\nproto.Mysqlx.Datatypes.Array.prototype.getValueList = function() {\n  return /** @type{!Array.<!proto.Mysqlx.Datatypes.Any>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.Mysqlx.Datatypes.Any, 1));\n};\n\n\n/** @param {!Array.<!proto.Mysqlx.Datatypes.Any>} value */\nproto.Mysqlx.Datatypes.Array.prototype.setValueList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.Mysqlx.Datatypes.Any=} opt_value\n * @param {number=} opt_index\n * @return {!proto.Mysqlx.Datatypes.Any}\n */\nproto.Mysqlx.Datatypes.Array.prototype.addValue = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Mysqlx.Datatypes.Any, opt_index);\n};\n\n\nproto.Mysqlx.Datatypes.Array.prototype.clearValueList = function() {\n  this.setValueList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Mysqlx.Datatypes.Any = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Mysqlx.Datatypes.Any, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Mysqlx.Datatypes.Any.displayName = 'proto.Mysqlx.Datatypes.Any';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Mysqlx.Datatypes.Any.prototype.toObject = function(opt_includeInstance) {\n  return proto.Mysqlx.Datatypes.Any.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Mysqlx.Datatypes.Any} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Datatypes.Any.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    type: jspb.Message.getField(msg, 1),\n    scalar: (f = msg.getScalar()) && proto.Mysqlx.Datatypes.Scalar.toObject(includeInstance, f),\n    obj: (f = msg.getObj()) && proto.Mysqlx.Datatypes.Object.toObject(includeInstance, f),\n    array: (f = msg.getArray()) && proto.Mysqlx.Datatypes.Array.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Datatypes.Any}\n */\nproto.Mysqlx.Datatypes.Any.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Datatypes.Any;\n  return proto.Mysqlx.Datatypes.Any.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Datatypes.Any} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Datatypes.Any}\n */\nproto.Mysqlx.Datatypes.Any.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.Mysqlx.Datatypes.Any.Type} */ (reader.readEnum());\n      msg.setType(value);\n      break;\n    case 2:\n      var value = new proto.Mysqlx.Datatypes.Scalar;\n      reader.readMessage(value,proto.Mysqlx.Datatypes.Scalar.deserializeBinaryFromReader);\n      msg.setScalar(value);\n      break;\n    case 3:\n      var value = new proto.Mysqlx.Datatypes.Object;\n      reader.readMessage(value,proto.Mysqlx.Datatypes.Object.deserializeBinaryFromReader);\n      msg.setObj(value);\n      break;\n    case 4:\n      var value = new proto.Mysqlx.Datatypes.Array;\n      reader.readMessage(value,proto.Mysqlx.Datatypes.Array.deserializeBinaryFromReader);\n      msg.setArray(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Mysqlx.Datatypes.Any.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Datatypes.Any.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Datatypes.Any} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Datatypes.Any.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {!proto.Mysqlx.Datatypes.Any.Type} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getScalar();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.Mysqlx.Datatypes.Scalar.serializeBinaryToWriter\n    );\n  }\n  f = message.getObj();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.Mysqlx.Datatypes.Object.serializeBinaryToWriter\n    );\n  }\n  f = message.getArray();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      proto.Mysqlx.Datatypes.Array.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.Mysqlx.Datatypes.Any.Type = {\n  SCALAR: 1,\n  OBJECT: 2,\n  ARRAY: 3\n};\n\n/**\n * required Type type = 1;\n * @return {!proto.Mysqlx.Datatypes.Any.Type}\n */\nproto.Mysqlx.Datatypes.Any.prototype.getType = function() {\n  return /** @type {!proto.Mysqlx.Datatypes.Any.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 1));\n};\n\n\n/** @param {!proto.Mysqlx.Datatypes.Any.Type} value */\nproto.Mysqlx.Datatypes.Any.prototype.setType = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.Mysqlx.Datatypes.Any.prototype.clearType = function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Mysqlx.Datatypes.Any.prototype.hasType = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional Scalar scalar = 2;\n * @return {?proto.Mysqlx.Datatypes.Scalar}\n */\nproto.Mysqlx.Datatypes.Any.prototype.getScalar = function() {\n  return /** @type{?proto.Mysqlx.Datatypes.Scalar} */ (\n    jspb.Message.getWrapperField(this, proto.Mysqlx.Datatypes.Scalar, 2));\n};\n\n\n/** @param {?proto.Mysqlx.Datatypes.Scalar|undefined} value */\nproto.Mysqlx.Datatypes.Any.prototype.setScalar = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.Mysqlx.Datatypes.Any.prototype.clearScalar = function() {\n  this.setScalar(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Mysqlx.Datatypes.Any.prototype.hasScalar = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional Object obj = 3;\n * @return {?proto.Mysqlx.Datatypes.Object}\n */\nproto.Mysqlx.Datatypes.Any.prototype.getObj = function() {\n  return /** @type{?proto.Mysqlx.Datatypes.Object} */ (\n    jspb.Message.getWrapperField(this, proto.Mysqlx.Datatypes.Object, 3));\n};\n\n\n/** @param {?proto.Mysqlx.Datatypes.Object|undefined} value */\nproto.Mysqlx.Datatypes.Any.prototype.setObj = function(value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\n\nproto.Mysqlx.Datatypes.Any.prototype.clearObj = function() {\n  this.setObj(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Mysqlx.Datatypes.Any.prototype.hasObj = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional Array array = 4;\n * @return {?proto.Mysqlx.Datatypes.Array}\n */\nproto.Mysqlx.Datatypes.Any.prototype.getArray = function() {\n  return /** @type{?proto.Mysqlx.Datatypes.Array} */ (\n    jspb.Message.getWrapperField(this, proto.Mysqlx.Datatypes.Array, 4));\n};\n\n\n/** @param {?proto.Mysqlx.Datatypes.Array|undefined} value */\nproto.Mysqlx.Datatypes.Any.prototype.setArray = function(value) {\n  jspb.Message.setWrapperField(this, 4, value);\n};\n\n\nproto.Mysqlx.Datatypes.Any.prototype.clearArray = function() {\n  this.setArray(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Mysqlx.Datatypes.Any.prototype.hasArray = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\ngoog.object.extend(exports, proto.Mysqlx.Datatypes);\n"]},"metadata":{},"sourceType":"script"}