{"ast":null,"code":"/*\n * Copyright (c) 2020, Oracle and/or its affiliates.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License, version 2.0, as\n * published by the Free Software Foundation.\n *\n * This program is also distributed with certain software (including\n * but not limited to OpenSSL) that is licensed under separate terms,\n * as designated in a particular file or component or in included license\n * documentation.  The authors of MySQL hereby grant you an\n * additional permission to link the program and your derivative works\n * with the separately licensed software that they have included with\n * MySQL.\n *\n * Without limiting anything contained in the foregoing, this file,\n * which is part of MySQL Connector/Node.js, is also subject to the\n * Universal FOSS Exception, version 1.0, a copy of which can be found at\n * http://oss.oracle.com/licenses/universal-foss-exception.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License, version 2.0, for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA\n */\n'use strict';\n\nconst CloseStub = require('../../../Stubs/mysqlx_connection_pb').Close;\n\nconst empty = require('../../Traits/Empty');\n\nconst serializable = require('../../Traits/Serializable');\n\nconst wraps = require('../../Traits/Wraps');\n/**\n * @private\n * @alias module:adapters.Mysqlx.Connection.Close\n * @param {proto.Mysqlx.Connection.Close} proto - protobuf stub\n * @returns {module:adapters.Mysqlx.Connection.Close}\n */\n\n\nfunction Close(proto) {\n  return Object.assign({}, empty(proto), serializable(proto), wraps(proto));\n}\n/**\n * Creates a wrapper of a Mysqlx.Connection.Close instance.\n * @returns {module:adapters.Mysqlx.Connection.Close}\n */\n\n\nClose.create = function () {\n  return Close(new CloseStub());\n};\n\nmodule.exports = Close;","map":{"version":3,"sources":["/home/ad/Bureau/infof308/src/node_modules/@mysql/xdevapi/lib/Protocol/Wrappers/Messages/Connection/Close.js"],"names":["CloseStub","require","Close","empty","serializable","wraps","proto","Object","assign","create","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,qCAAD,CAAP,CAA+CC,KAAjE;;AACA,MAAMC,KAAK,GAAGF,OAAO,CAAC,oBAAD,CAArB;;AACA,MAAMG,YAAY,GAAGH,OAAO,CAAC,2BAAD,CAA5B;;AACA,MAAMI,KAAK,GAAGJ,OAAO,CAAC,oBAAD,CAArB;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,KAAT,CAAgBI,KAAhB,EAAuB;AACnB,SAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAK,CAACG,KAAD,CAAvB,EAAgCF,YAAY,CAACE,KAAD,CAA5C,EAAqDD,KAAK,CAACC,KAAD,CAA1D,CAAP;AACH;AAED;AACA;AACA;AACA;;;AACAJ,KAAK,CAACO,MAAN,GAAe,YAAY;AACvB,SAAOP,KAAK,CAAC,IAAIF,SAAJ,EAAD,CAAZ;AACH,CAFD;;AAIAU,MAAM,CAACC,OAAP,GAAiBT,KAAjB","sourcesContent":["/*\n * Copyright (c) 2020, Oracle and/or its affiliates.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License, version 2.0, as\n * published by the Free Software Foundation.\n *\n * This program is also distributed with certain software (including\n * but not limited to OpenSSL) that is licensed under separate terms,\n * as designated in a particular file or component or in included license\n * documentation.  The authors of MySQL hereby grant you an\n * additional permission to link the program and your derivative works\n * with the separately licensed software that they have included with\n * MySQL.\n *\n * Without limiting anything contained in the foregoing, this file,\n * which is part of MySQL Connector/Node.js, is also subject to the\n * Universal FOSS Exception, version 1.0, a copy of which can be found at\n * http://oss.oracle.com/licenses/universal-foss-exception.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License, version 2.0, for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\n'use strict';\n\nconst CloseStub = require('../../../Stubs/mysqlx_connection_pb').Close;\nconst empty = require('../../Traits/Empty');\nconst serializable = require('../../Traits/Serializable');\nconst wraps = require('../../Traits/Wraps');\n\n/**\n * @private\n * @alias module:adapters.Mysqlx.Connection.Close\n * @param {proto.Mysqlx.Connection.Close} proto - protobuf stub\n * @returns {module:adapters.Mysqlx.Connection.Close}\n */\nfunction Close (proto) {\n    return Object.assign({}, empty(proto), serializable(proto), wraps(proto));\n}\n\n/**\n * Creates a wrapper of a Mysqlx.Connection.Close instance.\n * @returns {module:adapters.Mysqlx.Connection.Close}\n */\nClose.create = function () {\n    return Close(new CloseStub());\n};\n\nmodule.exports = Close;\n"]},"metadata":{},"sourceType":"script"}