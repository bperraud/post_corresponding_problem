{"ast":null,"code":"/*\n * Copyright (c) 2017, 2021, Oracle and/or its affiliates.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License, version 2.0, as\n * published by the Free Software Foundation.\n *\n * This program is also distributed with certain software (including\n * but not limited to OpenSSL) that is licensed under separate terms,\n * as designated in a particular file or component or in included license\n * documentation.  The authors of MySQL hereby grant you an\n * additional permission to link the program and your derivative works\n * with the separately licensed software that they have included with\n * MySQL.\n *\n * Without limiting anything contained in the foregoing, this file,\n * which is part of MySQL Connector/Node.js, is also subject to the\n * Universal FOSS Exception, version 1.0, a copy of which can be found at\n * http://oss.oracle.com/licenses/universal-foss-exception.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License, version 2.0, for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA\n */\n'use strict';\n\nconst errors = require('../../../constants/errors');\n\nmodule.exports = parse;\n/**\n * User credentials.\n * @private\n * @typedef {Object} UserInfo\n * @prop {string} username\n * @prop {string} [password]\n */\n\n/**\n * Parse the user authentication details.\n * @private\n * @param {string} input - authentication segment\n * @throws {Error} When the segment is not valid.\n * @returns {UserInfo} Object containing the user credentials.\n */\n\nfunction parse(input) {\n  // TODO(Rui): use default agument values on node >= 6.0.0\n  const match = (input || '').trim().match(/^([^:@]+)(:([^@]*))?/) || [];\n  const validationPattern = /^[a-zA-Z0-9-._~%!$&'()*+,;=]*$/;\n  const isValidUsername = validationPattern.test(match[1]);\n  const isValidPassword = validationPattern.test(match[3]);\n\n  if (!isValidUsername || !isValidPassword) {\n    throw new Error(errors.MESSAGES.ER_DEVAPI_BAD_CONNECTION_STRING_USER_INFO);\n  }\n\n  return {\n    username: !match[1] ? match[1] : decodeURIComponent(match[1]),\n    password: !match[3] ? match[3] : decodeURIComponent(match[3])\n  };\n}","map":{"version":3,"sources":["/home/ad/Bureau/infof308/src/node_modules/@mysql/xdevapi/lib/DevAPI/Util/URIParser/parseUserInfo.js"],"names":["errors","require","module","exports","parse","input","match","trim","validationPattern","isValidUsername","test","isValidPassword","Error","MESSAGES","ER_DEVAPI_BAD_CONNECTION_STRING_USER_INFO","username","decodeURIComponent","password"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,2BAAD,CAAtB;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,KAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,KAAT,CAAgBC,KAAhB,EAAuB;AACnB;AACA,QAAMC,KAAK,GAAG,CAACD,KAAK,IAAI,EAAV,EAAcE,IAAd,GAAqBD,KAArB,CAA2B,sBAA3B,KAAsD,EAApE;AAEA,QAAME,iBAAiB,GAAG,gCAA1B;AACA,QAAMC,eAAe,GAAGD,iBAAiB,CAACE,IAAlB,CAAuBJ,KAAK,CAAC,CAAD,CAA5B,CAAxB;AACA,QAAMK,eAAe,GAAGH,iBAAiB,CAACE,IAAlB,CAAuBJ,KAAK,CAAC,CAAD,CAA5B,CAAxB;;AAEA,MAAI,CAACG,eAAD,IAAoB,CAACE,eAAzB,EAA0C;AACtC,UAAM,IAAIC,KAAJ,CAAUZ,MAAM,CAACa,QAAP,CAAgBC,yCAA1B,CAAN;AACH;;AAED,SAAO;AACHC,IAAAA,QAAQ,EAAE,CAACT,KAAK,CAAC,CAAD,CAAN,GAAYA,KAAK,CAAC,CAAD,CAAjB,GAAuBU,kBAAkB,CAACV,KAAK,CAAC,CAAD,CAAN,CADhD;AAEHW,IAAAA,QAAQ,EAAE,CAACX,KAAK,CAAC,CAAD,CAAN,GAAYA,KAAK,CAAC,CAAD,CAAjB,GAAuBU,kBAAkB,CAACV,KAAK,CAAC,CAAD,CAAN;AAFhD,GAAP;AAIH","sourcesContent":["/*\n * Copyright (c) 2017, 2021, Oracle and/or its affiliates.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License, version 2.0, as\n * published by the Free Software Foundation.\n *\n * This program is also distributed with certain software (including\n * but not limited to OpenSSL) that is licensed under separate terms,\n * as designated in a particular file or component or in included license\n * documentation.  The authors of MySQL hereby grant you an\n * additional permission to link the program and your derivative works\n * with the separately licensed software that they have included with\n * MySQL.\n *\n * Without limiting anything contained in the foregoing, this file,\n * which is part of MySQL Connector/Node.js, is also subject to the\n * Universal FOSS Exception, version 1.0, a copy of which can be found at\n * http://oss.oracle.com/licenses/universal-foss-exception.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License, version 2.0, for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\n'use strict';\n\nconst errors = require('../../../constants/errors');\n\nmodule.exports = parse;\n\n/**\n * User credentials.\n * @private\n * @typedef {Object} UserInfo\n * @prop {string} username\n * @prop {string} [password]\n */\n\n/**\n * Parse the user authentication details.\n * @private\n * @param {string} input - authentication segment\n * @throws {Error} When the segment is not valid.\n * @returns {UserInfo} Object containing the user credentials.\n */\nfunction parse (input) {\n    // TODO(Rui): use default agument values on node >= 6.0.0\n    const match = (input || '').trim().match(/^([^:@]+)(:([^@]*))?/) || [];\n\n    const validationPattern = /^[a-zA-Z0-9-._~%!$&'()*+,;=]*$/;\n    const isValidUsername = validationPattern.test(match[1]);\n    const isValidPassword = validationPattern.test(match[3]);\n\n    if (!isValidUsername || !isValidPassword) {\n        throw new Error(errors.MESSAGES.ER_DEVAPI_BAD_CONNECTION_STRING_USER_INFO);\n    }\n\n    return {\n        username: !match[1] ? match[1] : decodeURIComponent(match[1]),\n        password: !match[3] ? match[3] : decodeURIComponent(match[3])\n    };\n}\n"]},"metadata":{},"sourceType":"script"}