{"ast":null,"code":"/*\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License, version 2.0, as\n * published by the Free Software Foundation.\n *\n * This program is also distributed with certain software (including\n * but not limited to OpenSSL) that is licensed under separate terms,\n * as designated in a particular file or component or in included license\n * documentation.  The authors of MySQL hereby grant you an\n * additional permission to link the program and your derivative works\n * with the separately licensed software that they have included with\n * MySQL.\n *\n * Without limiting anything contained in the foregoing, this file,\n * which is part of MySQL Connector/Node.js, is also subject to the\n * Universal FOSS Exception, version 1.0, a copy of which can be found at\n * http://oss.oracle.com/licenses/universal-foss-exception.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License, version 2.0, for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA\n */\n'use strict';\n\nconst errors = require('../constants/errors');\n\nconst limiting = require('./Limiting');\n\nconst logger = require('../logger');\n\nconst warnings = require('../constants/warnings');\n\nconst log = logger('api');\n/**\n * Skipping mixin.\n * @mixin\n * @alias Skipping\n * @mixes Limiting\n * @param {Object} state - Skipping properties\n * @returns {Skipping}\n */\n\nfunction Skipping(state) {\n  state = Object.assign({}, state);\n  return Object.assign({}, limiting(state), {\n    /**\n     * Retrieve the number of items to skip on the result.\n     * @function\n     * @private\n     * @name Skipping#getOffset\n     * @returns {number} The number of items.\n     */\n    getOffset() {\n      return state.offset;\n    },\n\n    /**\n     * Set the number of items to skip on the result.\n     * @function\n     * @name Skipping#offset\n     * @param {number} value - number of items\n     * @returns {Skipping} The query instance.\n     */\n    offset(value) {\n      this.resetStage();\n\n      if (isNaN(parseInt(value, 10)) || value < 0) {\n        throw new Error(errors.MESSAGES.ER_DEVAPI_BAD_OFFSET_INPUT);\n      }\n\n      state.offset = value;\n      return this;\n    },\n\n    /**\n     * @function\n     * @private\n     * @name Skipping#setOffset\n     * @param {number} value - number of items\n     * @returns {Skipping} The query instance.\n     * @deprecated since version 8.0.12. Will be removed in future versions.\n     */\n    setOffset(offset) {\n      log.warning('setOffset', warnings.MESSAGES.WARN_DEPRECATED_SET_OFFSET, {\n        type: warnings.TYPES.DEPRECATION,\n        code: warnings.CODES.DEPRECATION\n      });\n      return this.offset(offset);\n    }\n\n  });\n}\n\n;\nmodule.exports = Skipping;","map":{"version":3,"sources":["/home/ad/Bureau/infof308/src/node_modules/@mysql/xdevapi/lib/DevAPI/Skipping.js"],"names":["errors","require","limiting","logger","warnings","log","Skipping","state","Object","assign","getOffset","offset","value","resetStage","isNaN","parseInt","Error","MESSAGES","ER_DEVAPI_BAD_OFFSET_INPUT","setOffset","warning","WARN_DEPRECATED_SET_OFFSET","type","TYPES","DEPRECATION","code","CODES","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,qBAAD,CAAtB;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,YAAD,CAAxB;;AACA,MAAME,MAAM,GAAGF,OAAO,CAAC,WAAD,CAAtB;;AACA,MAAMG,QAAQ,GAAGH,OAAO,CAAC,uBAAD,CAAxB;;AAEA,MAAMI,GAAG,GAAGF,MAAM,CAAC,KAAD,CAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASG,QAAT,CAAmBC,KAAnB,EAA0B;AACtBA,EAAAA,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,KAAlB,CAAR;AAEA,SAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,QAAQ,CAACK,KAAD,CAA1B,EAAmC;AACtC;AACR;AACA;AACA;AACA;AACA;AACA;AACQG,IAAAA,SAAS,GAAI;AACT,aAAOH,KAAK,CAACI,MAAb;AACH,KAVqC;;AAYtC;AACR;AACA;AACA;AACA;AACA;AACA;AACQA,IAAAA,MAAM,CAAEC,KAAF,EAAS;AACX,WAAKC,UAAL;;AAEA,UAAIC,KAAK,CAACC,QAAQ,CAACH,KAAD,EAAQ,EAAR,CAAT,CAAL,IAA8BA,KAAK,GAAG,CAA1C,EAA6C;AACzC,cAAM,IAAII,KAAJ,CAAUhB,MAAM,CAACiB,QAAP,CAAgBC,0BAA1B,CAAN;AACH;;AAEDX,MAAAA,KAAK,CAACI,MAAN,GAAeC,KAAf;AAEA,aAAO,IAAP;AACH,KA7BqC;;AA+BtC;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQO,IAAAA,SAAS,CAAER,MAAF,EAAU;AACfN,MAAAA,GAAG,CAACe,OAAJ,CAAY,WAAZ,EAAyBhB,QAAQ,CAACa,QAAT,CAAkBI,0BAA3C,EAAuE;AACnEC,QAAAA,IAAI,EAAElB,QAAQ,CAACmB,KAAT,CAAeC,WAD8C;AAEnEC,QAAAA,IAAI,EAAErB,QAAQ,CAACsB,KAAT,CAAeF;AAF8C,OAAvE;AAKA,aAAO,KAAKb,MAAL,CAAYA,MAAZ,CAAP;AACH;;AA9CqC,GAAnC,CAAP;AAgDH;;AAAA;AAEDgB,MAAM,CAACC,OAAP,GAAiBtB,QAAjB","sourcesContent":["/*\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License, version 2.0, as\n * published by the Free Software Foundation.\n *\n * This program is also distributed with certain software (including\n * but not limited to OpenSSL) that is licensed under separate terms,\n * as designated in a particular file or component or in included license\n * documentation.  The authors of MySQL hereby grant you an\n * additional permission to link the program and your derivative works\n * with the separately licensed software that they have included with\n * MySQL.\n *\n * Without limiting anything contained in the foregoing, this file,\n * which is part of MySQL Connector/Node.js, is also subject to the\n * Universal FOSS Exception, version 1.0, a copy of which can be found at\n * http://oss.oracle.com/licenses/universal-foss-exception.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License, version 2.0, for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\n'use strict';\n\nconst errors = require('../constants/errors');\nconst limiting = require('./Limiting');\nconst logger = require('../logger');\nconst warnings = require('../constants/warnings');\n\nconst log = logger('api');\n\n/**\n * Skipping mixin.\n * @mixin\n * @alias Skipping\n * @mixes Limiting\n * @param {Object} state - Skipping properties\n * @returns {Skipping}\n */\nfunction Skipping (state) {\n    state = Object.assign({}, state);\n\n    return Object.assign({}, limiting(state), {\n        /**\n         * Retrieve the number of items to skip on the result.\n         * @function\n         * @private\n         * @name Skipping#getOffset\n         * @returns {number} The number of items.\n         */\n        getOffset () {\n            return state.offset;\n        },\n\n        /**\n         * Set the number of items to skip on the result.\n         * @function\n         * @name Skipping#offset\n         * @param {number} value - number of items\n         * @returns {Skipping} The query instance.\n         */\n        offset (value) {\n            this.resetStage();\n\n            if (isNaN(parseInt(value, 10)) || value < 0) {\n                throw new Error(errors.MESSAGES.ER_DEVAPI_BAD_OFFSET_INPUT);\n            }\n\n            state.offset = value;\n\n            return this;\n        },\n\n        /**\n         * @function\n         * @private\n         * @name Skipping#setOffset\n         * @param {number} value - number of items\n         * @returns {Skipping} The query instance.\n         * @deprecated since version 8.0.12. Will be removed in future versions.\n         */\n        setOffset (offset) {\n            log.warning('setOffset', warnings.MESSAGES.WARN_DEPRECATED_SET_OFFSET, {\n                type: warnings.TYPES.DEPRECATION,\n                code: warnings.CODES.DEPRECATION\n            });\n\n            return this.offset(offset);\n        }\n    });\n};\n\nmodule.exports = Skipping;\n"]},"metadata":{},"sourceType":"script"}