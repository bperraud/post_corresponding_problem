{"ast":null,"code":"/*\n * Copyright (c) 2017, 2021, Oracle and/or its affiliates.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License, version 2.0, as\n * published by the Free Software Foundation.\n *\n * This program is also distributed with certain software (including\n * but not limited to OpenSSL) that is licensed under separate terms,\n * as designated in a particular file or component or in included license\n * documentation.  The authors of MySQL hereby grant you an\n * additional permission to link the program and your derivative works\n * with the separately licensed software that they have included with\n * MySQL.\n *\n * Without limiting anything contained in the foregoing, this file,\n * which is part of MySQL Connector/Node.js, is also subject to the\n * Universal FOSS Exception, version 1.0, a copy of which can be found at\n * http://oss.oracle.com/licenses/universal-foss-exception.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License, version 2.0, for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA\n */\n'use strict';\n\nconst Expr = require('../../../../Protocol/Stubs/mysqlx_expr_pb').Expr;\n\nconst Operator = require('../../../../Protocol/Stubs/mysqlx_expr_pb').Operator;\n\nconst Pa = require('parsimmon');\n\nconst parser = options => r => Pa.seq(Pa.alt(r.NOT.skip(r.blank), Pa.string('!'), Pa.string('~'), Pa.string('+').result('sign_plus'), Pa.string('-').result('sign_minus')), r.atomicExpr).map(data => {\n  const operator = new Operator();\n  operator.setName(data[0]);\n  operator.addParam(data[1]);\n  const expr = new Expr();\n  expr.setType(Expr.Type.OPERATOR);\n  expr.setOperator(operator);\n  return expr;\n});\n\nmodule.exports = {\n  name: 'UNARY_OP',\n  parser\n};","map":{"version":3,"sources":["/home/ad/Bureau/infof308/src/node_modules/@mysql/xdevapi/lib/ExprParser/lib/grammar/booleanExpressions/unaryOp.js"],"names":["Expr","require","Operator","Pa","parser","options","r","seq","alt","NOT","skip","blank","string","result","atomicExpr","map","data","operator","setName","addParam","expr","setType","Type","OPERATOR","setOperator","module","exports","name"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,2CAAD,CAAP,CAAqDD,IAAlE;;AACA,MAAME,QAAQ,GAAGD,OAAO,CAAC,2CAAD,CAAP,CAAqDC,QAAtE;;AACA,MAAMC,EAAE,GAAGF,OAAO,CAAC,WAAD,CAAlB;;AAEA,MAAMG,MAAM,GAAGC,OAAO,IAAIC,CAAC,IAAIH,EAAE,CAC5BI,GAD0B,CAEvBJ,EAAE,CAACK,GAAH,CACIF,CAAC,CAACG,GAAF,CAAMC,IAAN,CAAWJ,CAAC,CAACK,KAAb,CADJ,EAEIR,EAAE,CAACS,MAAH,CAAU,GAAV,CAFJ,EAGIT,EAAE,CAACS,MAAH,CAAU,GAAV,CAHJ,EAIIT,EAAE,CAACS,MAAH,CAAU,GAAV,EAAeC,MAAf,CAAsB,WAAtB,CAJJ,EAKIV,EAAE,CAACS,MAAH,CAAU,GAAV,EAAeC,MAAf,CAAsB,YAAtB,CALJ,CAFuB,EASvBP,CAAC,CAACQ,UATqB,EAW1BC,GAX0B,CAWtBC,IAAI,IAAI;AACT,QAAMC,QAAQ,GAAG,IAAIf,QAAJ,EAAjB;AACAe,EAAAA,QAAQ,CAACC,OAAT,CAAiBF,IAAI,CAAC,CAAD,CAArB;AACAC,EAAAA,QAAQ,CAACE,QAAT,CAAkBH,IAAI,CAAC,CAAD,CAAtB;AAEA,QAAMI,IAAI,GAAG,IAAIpB,IAAJ,EAAb;AACAoB,EAAAA,IAAI,CAACC,OAAL,CAAarB,IAAI,CAACsB,IAAL,CAAUC,QAAvB;AACAH,EAAAA,IAAI,CAACI,WAAL,CAAiBP,QAAjB;AAEA,SAAOG,IAAP;AACH,CArB0B,CAA/B;;AAuBAK,MAAM,CAACC,OAAP,GAAiB;AAAEC,EAAAA,IAAI,EAAE,UAAR;AAAoBvB,EAAAA;AAApB,CAAjB","sourcesContent":["/*\n * Copyright (c) 2017, 2021, Oracle and/or its affiliates.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License, version 2.0, as\n * published by the Free Software Foundation.\n *\n * This program is also distributed with certain software (including\n * but not limited to OpenSSL) that is licensed under separate terms,\n * as designated in a particular file or component or in included license\n * documentation.  The authors of MySQL hereby grant you an\n * additional permission to link the program and your derivative works\n * with the separately licensed software that they have included with\n * MySQL.\n *\n * Without limiting anything contained in the foregoing, this file,\n * which is part of MySQL Connector/Node.js, is also subject to the\n * Universal FOSS Exception, version 1.0, a copy of which can be found at\n * http://oss.oracle.com/licenses/universal-foss-exception.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License, version 2.0, for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\n'use strict';\n\nconst Expr = require('../../../../Protocol/Stubs/mysqlx_expr_pb').Expr;\nconst Operator = require('../../../../Protocol/Stubs/mysqlx_expr_pb').Operator;\nconst Pa = require('parsimmon');\n\nconst parser = options => r => Pa\n    .seq(\n        Pa.alt(\n            r.NOT.skip(r.blank),\n            Pa.string('!'),\n            Pa.string('~'),\n            Pa.string('+').result('sign_plus'),\n            Pa.string('-').result('sign_minus')\n        ),\n        r.atomicExpr\n    )\n    .map(data => {\n        const operator = new Operator();\n        operator.setName(data[0]);\n        operator.addParam(data[1]);\n\n        const expr = new Expr();\n        expr.setType(Expr.Type.OPERATOR);\n        expr.setOperator(operator);\n\n        return expr;\n    });\n\nmodule.exports = { name: 'UNARY_OP', parser };\n"]},"metadata":{},"sourceType":"script"}