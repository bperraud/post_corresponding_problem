{"ast":null,"code":"/*\n * Copyright (c) 2018, 2021, Oracle and/or its affiliates.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License, version 2.0, as\n * published by the Free Software Foundation.\n *\n * This program is also distributed with certain software (including\n * but not limited to OpenSSL) that is licensed under separate terms,\n * as designated in a particular file or component or in included license\n * documentation.  The authors of MySQL hereby grant you an\n * additional permission to link the program and your derivative works\n * with the separately licensed software that they have included with\n * MySQL.\n *\n * Without limiting anything contained in the foregoing, this file,\n * which is part of MySQL Connector/Node.js, is also subject to the\n * Universal FOSS Exception, version 1.0, a copy of which can be found at\n * http://oss.oracle.com/licenses/universal-foss-exception.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License, version 2.0, for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA\n */\n'use strict';\n\nconst parseQueryParameters = require('./parseQueryParameters');\n\nmodule.exports = parse;\n/**\n * Parse connection timeout value.\n * @private\n * @param {string} input - URI querystring\n * @returns {number} The timeout value.\n */\n\nfunction parse() {\n  let input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  const match = input.trim().match(/^\\?([^#]+)/) || [];\n  const params = parseQueryParameters(match[1], {\n    allowDuplicates: false,\n    ignoreCase: ['connect-timeout']\n  });\n  const connectTimeout = typeof params['connect-timeout'] !== 'undefined' ? params['connect-timeout'] : '10000'; // default value\n  // If the string is not numeric we return it as is for further\n  // validation.\n\n  if (!/^\\d+$/.test(connectTimeout)) {\n    return connectTimeout;\n  } // Otherwise, we return its numeric value.\n\n\n  return parseFloat(connectTimeout);\n}","map":{"version":3,"sources":["/home/ad/Bureau/infof308/src/node_modules/@mysql/xdevapi/lib/DevAPI/Util/URIParser/parseConnectTimeout.js"],"names":["parseQueryParameters","require","module","exports","parse","input","match","trim","params","allowDuplicates","ignoreCase","connectTimeout","test","parseFloat"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,oBAAoB,GAAGC,OAAO,CAAC,wBAAD,CAApC;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,KAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,KAAT,GAA4B;AAAA,MAAZC,KAAY,uEAAJ,EAAI;AACxB,QAAMC,KAAK,GAAGD,KAAK,CAACE,IAAN,GAAaD,KAAb,CAAmB,YAAnB,KAAoC,EAAlD;AACA,QAAME,MAAM,GAAGR,oBAAoB,CAACM,KAAK,CAAC,CAAD,CAAN,EAAW;AAAEG,IAAAA,eAAe,EAAE,KAAnB;AAA0BC,IAAAA,UAAU,EAAE,CAAC,iBAAD;AAAtC,GAAX,CAAnC;AACA,QAAMC,cAAc,GAAG,OAAOH,MAAM,CAAC,iBAAD,CAAb,KAAqC,WAArC,GAAmDA,MAAM,CAAC,iBAAD,CAAzD,GAA+E,OAAtG,CAHwB,CAGuF;AAE/G;AACA;;AACA,MAAI,CAAE,QAAQI,IAAR,CAAaD,cAAb,CAAN,EAAqC;AACjC,WAAOA,cAAP;AACH,GATuB,CAWxB;;;AACA,SAAOE,UAAU,CAACF,cAAD,CAAjB;AACH","sourcesContent":["/*\n * Copyright (c) 2018, 2021, Oracle and/or its affiliates.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License, version 2.0, as\n * published by the Free Software Foundation.\n *\n * This program is also distributed with certain software (including\n * but not limited to OpenSSL) that is licensed under separate terms,\n * as designated in a particular file or component or in included license\n * documentation.  The authors of MySQL hereby grant you an\n * additional permission to link the program and your derivative works\n * with the separately licensed software that they have included with\n * MySQL.\n *\n * Without limiting anything contained in the foregoing, this file,\n * which is part of MySQL Connector/Node.js, is also subject to the\n * Universal FOSS Exception, version 1.0, a copy of which can be found at\n * http://oss.oracle.com/licenses/universal-foss-exception.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License, version 2.0, for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\n'use strict';\n\nconst parseQueryParameters = require('./parseQueryParameters');\n\nmodule.exports = parse;\n\n/**\n * Parse connection timeout value.\n * @private\n * @param {string} input - URI querystring\n * @returns {number} The timeout value.\n */\nfunction parse (input = '') {\n    const match = input.trim().match(/^\\?([^#]+)/) || [];\n    const params = parseQueryParameters(match[1], { allowDuplicates: false, ignoreCase: ['connect-timeout'] });\n    const connectTimeout = typeof params['connect-timeout'] !== 'undefined' ? params['connect-timeout'] : '10000'; // default value\n\n    // If the string is not numeric we return it as is for further\n    // validation.\n    if (!(/^\\d+$/.test(connectTimeout))) {\n        return connectTimeout;\n    }\n\n    // Otherwise, we return its numeric value.\n    return parseFloat(connectTimeout);\n}\n"]},"metadata":{},"sourceType":"script"}