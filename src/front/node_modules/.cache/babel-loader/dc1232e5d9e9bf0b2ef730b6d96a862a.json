{"ast":null,"code":"/*\n * Copyright (c) 2017, 2021, Oracle and/or its affiliates.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License, version 2.0, as\n * published by the Free Software Foundation.\n *\n * This program is also distributed with certain software (including\n * but not limited to OpenSSL) that is licensed under separate terms,\n * as designated in a particular file or component or in included license\n * documentation.  The authors of MySQL hereby grant you an\n * additional permission to link the program and your derivative works\n * with the separately licensed software that they have included with\n * MySQL.\n *\n * Without limiting anything contained in the foregoing, this file,\n * which is part of MySQL Connector/Node.js, is also subject to the\n * Universal FOSS Exception, version 1.0, a copy of which can be found at\n * http://oss.oracle.com/licenses/universal-foss-exception.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License, version 2.0, for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\nvar jspb = require('google-protobuf');\n\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar mysqlx_datatypes_pb = require('./mysqlx_datatypes_pb.js');\n\ngoog.exportSymbol('proto.Mysqlx.Expr.Array', null, global);\ngoog.exportSymbol('proto.Mysqlx.Expr.ColumnIdentifier', null, global);\ngoog.exportSymbol('proto.Mysqlx.Expr.DocumentPathItem', null, global);\ngoog.exportSymbol('proto.Mysqlx.Expr.DocumentPathItem.Type', null, global);\ngoog.exportSymbol('proto.Mysqlx.Expr.Expr', null, global);\ngoog.exportSymbol('proto.Mysqlx.Expr.Expr.Type', null, global);\ngoog.exportSymbol('proto.Mysqlx.Expr.FunctionCall', null, global);\ngoog.exportSymbol('proto.Mysqlx.Expr.Identifier', null, global);\ngoog.exportSymbol('proto.Mysqlx.Expr.Object', null, global);\ngoog.exportSymbol('proto.Mysqlx.Expr.Object.ObjectField', null, global);\ngoog.exportSymbol('proto.Mysqlx.Expr.Operator', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.Mysqlx.Expr.Expr = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Mysqlx.Expr.Expr, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.Mysqlx.Expr.Expr.displayName = 'proto.Mysqlx.Expr.Expr';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Mysqlx.Expr.Expr.prototype.toObject = function (opt_includeInstance) {\n    return proto.Mysqlx.Expr.Expr.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Mysqlx.Expr.Expr} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Mysqlx.Expr.Expr.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      type: jspb.Message.getField(msg, 1),\n      identifier: (f = msg.getIdentifier()) && proto.Mysqlx.Expr.ColumnIdentifier.toObject(includeInstance, f),\n      variable: jspb.Message.getField(msg, 3),\n      literal: (f = msg.getLiteral()) && mysqlx_datatypes_pb.Scalar.toObject(includeInstance, f),\n      functionCall: (f = msg.getFunctionCall()) && proto.Mysqlx.Expr.FunctionCall.toObject(includeInstance, f),\n      operator: (f = msg.getOperator()) && proto.Mysqlx.Expr.Operator.toObject(includeInstance, f),\n      position: jspb.Message.getField(msg, 7),\n      object: (f = msg.getObject()) && proto.Mysqlx.Expr.Object.toObject(includeInstance, f),\n      array: (f = msg.getArray()) && proto.Mysqlx.Expr.Array.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Expr.Expr}\n */\n\n\nproto.Mysqlx.Expr.Expr.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Expr.Expr();\n  return proto.Mysqlx.Expr.Expr.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Expr.Expr} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Expr.Expr}\n */\n\n\nproto.Mysqlx.Expr.Expr.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!proto.Mysqlx.Expr.Expr.Type} */\n        reader.readEnum();\n        msg.setType(value);\n        break;\n\n      case 2:\n        var value = new proto.Mysqlx.Expr.ColumnIdentifier();\n        reader.readMessage(value, proto.Mysqlx.Expr.ColumnIdentifier.deserializeBinaryFromReader);\n        msg.setIdentifier(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setVariable(value);\n        break;\n\n      case 4:\n        var value = new mysqlx_datatypes_pb.Scalar();\n        reader.readMessage(value, mysqlx_datatypes_pb.Scalar.deserializeBinaryFromReader);\n        msg.setLiteral(value);\n        break;\n\n      case 5:\n        var value = new proto.Mysqlx.Expr.FunctionCall();\n        reader.readMessage(value, proto.Mysqlx.Expr.FunctionCall.deserializeBinaryFromReader);\n        msg.setFunctionCall(value);\n        break;\n\n      case 6:\n        var value = new proto.Mysqlx.Expr.Operator();\n        reader.readMessage(value, proto.Mysqlx.Expr.Operator.deserializeBinaryFromReader);\n        msg.setOperator(value);\n        break;\n\n      case 7:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setPosition(value);\n        break;\n\n      case 8:\n        var value = new proto.Mysqlx.Expr.Object();\n        reader.readMessage(value, proto.Mysqlx.Expr.Object.deserializeBinaryFromReader);\n        msg.setObject(value);\n        break;\n\n      case 9:\n        var value = new proto.Mysqlx.Expr.Array();\n        reader.readMessage(value, proto.Mysqlx.Expr.Array.deserializeBinaryFromReader);\n        msg.setArray(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Mysqlx.Expr.Expr.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Expr.Expr.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Expr.Expr} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Mysqlx.Expr.Expr.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f =\n  /** @type {!proto.Mysqlx.Expr.Expr.Type} */\n  jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeEnum(1, f);\n  }\n\n  f = message.getIdentifier();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto.Mysqlx.Expr.ColumnIdentifier.serializeBinaryToWriter);\n  }\n\n  f =\n  /** @type {string} */\n  jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeString(3, f);\n  }\n\n  f = message.getLiteral();\n\n  if (f != null) {\n    writer.writeMessage(4, f, mysqlx_datatypes_pb.Scalar.serializeBinaryToWriter);\n  }\n\n  f = message.getFunctionCall();\n\n  if (f != null) {\n    writer.writeMessage(5, f, proto.Mysqlx.Expr.FunctionCall.serializeBinaryToWriter);\n  }\n\n  f = message.getOperator();\n\n  if (f != null) {\n    writer.writeMessage(6, f, proto.Mysqlx.Expr.Operator.serializeBinaryToWriter);\n  }\n\n  f =\n  /** @type {number} */\n  jspb.Message.getField(message, 7);\n\n  if (f != null) {\n    writer.writeUint32(7, f);\n  }\n\n  f = message.getObject();\n\n  if (f != null) {\n    writer.writeMessage(8, f, proto.Mysqlx.Expr.Object.serializeBinaryToWriter);\n  }\n\n  f = message.getArray();\n\n  if (f != null) {\n    writer.writeMessage(9, f, proto.Mysqlx.Expr.Array.serializeBinaryToWriter);\n  }\n};\n/**\n * @enum {number}\n */\n\n\nproto.Mysqlx.Expr.Expr.Type = {\n  IDENT: 1,\n  LITERAL: 2,\n  VARIABLE: 3,\n  FUNC_CALL: 4,\n  OPERATOR: 5,\n  PLACEHOLDER: 6,\n  OBJECT: 7,\n  ARRAY: 8\n};\n/**\n * required Type type = 1;\n * @return {!proto.Mysqlx.Expr.Expr.Type}\n */\n\nproto.Mysqlx.Expr.Expr.prototype.getType = function () {\n  return (\n    /** @type {!proto.Mysqlx.Expr.Expr.Type} */\n    jspb.Message.getFieldWithDefault(this, 1, 1)\n  );\n};\n/** @param {!proto.Mysqlx.Expr.Expr.Type} value */\n\n\nproto.Mysqlx.Expr.Expr.prototype.setType = function (value) {\n  jspb.Message.setField(this, 1, value);\n};\n\nproto.Mysqlx.Expr.Expr.prototype.clearType = function () {\n  jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Mysqlx.Expr.Expr.prototype.hasType = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional ColumnIdentifier identifier = 2;\n * @return {?proto.Mysqlx.Expr.ColumnIdentifier}\n */\n\n\nproto.Mysqlx.Expr.Expr.prototype.getIdentifier = function () {\n  return (\n    /** @type{?proto.Mysqlx.Expr.ColumnIdentifier} */\n    jspb.Message.getWrapperField(this, proto.Mysqlx.Expr.ColumnIdentifier, 2)\n  );\n};\n/** @param {?proto.Mysqlx.Expr.ColumnIdentifier|undefined} value */\n\n\nproto.Mysqlx.Expr.Expr.prototype.setIdentifier = function (value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\nproto.Mysqlx.Expr.Expr.prototype.clearIdentifier = function () {\n  this.setIdentifier(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Mysqlx.Expr.Expr.prototype.hasIdentifier = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional string variable = 3;\n * @return {string}\n */\n\n\nproto.Mysqlx.Expr.Expr.prototype.getVariable = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.Mysqlx.Expr.Expr.prototype.setVariable = function (value) {\n  jspb.Message.setField(this, 3, value);\n};\n\nproto.Mysqlx.Expr.Expr.prototype.clearVariable = function () {\n  jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Mysqlx.Expr.Expr.prototype.hasVariable = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * optional Mysqlx.Datatypes.Scalar literal = 4;\n * @return {?proto.Mysqlx.Datatypes.Scalar}\n */\n\n\nproto.Mysqlx.Expr.Expr.prototype.getLiteral = function () {\n  return (\n    /** @type{?proto.Mysqlx.Datatypes.Scalar} */\n    jspb.Message.getWrapperField(this, mysqlx_datatypes_pb.Scalar, 4)\n  );\n};\n/** @param {?proto.Mysqlx.Datatypes.Scalar|undefined} value */\n\n\nproto.Mysqlx.Expr.Expr.prototype.setLiteral = function (value) {\n  jspb.Message.setWrapperField(this, 4, value);\n};\n\nproto.Mysqlx.Expr.Expr.prototype.clearLiteral = function () {\n  this.setLiteral(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Mysqlx.Expr.Expr.prototype.hasLiteral = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n/**\n * optional FunctionCall function_call = 5;\n * @return {?proto.Mysqlx.Expr.FunctionCall}\n */\n\n\nproto.Mysqlx.Expr.Expr.prototype.getFunctionCall = function () {\n  return (\n    /** @type{?proto.Mysqlx.Expr.FunctionCall} */\n    jspb.Message.getWrapperField(this, proto.Mysqlx.Expr.FunctionCall, 5)\n  );\n};\n/** @param {?proto.Mysqlx.Expr.FunctionCall|undefined} value */\n\n\nproto.Mysqlx.Expr.Expr.prototype.setFunctionCall = function (value) {\n  jspb.Message.setWrapperField(this, 5, value);\n};\n\nproto.Mysqlx.Expr.Expr.prototype.clearFunctionCall = function () {\n  this.setFunctionCall(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Mysqlx.Expr.Expr.prototype.hasFunctionCall = function () {\n  return jspb.Message.getField(this, 5) != null;\n};\n/**\n * optional Operator operator = 6;\n * @return {?proto.Mysqlx.Expr.Operator}\n */\n\n\nproto.Mysqlx.Expr.Expr.prototype.getOperator = function () {\n  return (\n    /** @type{?proto.Mysqlx.Expr.Operator} */\n    jspb.Message.getWrapperField(this, proto.Mysqlx.Expr.Operator, 6)\n  );\n};\n/** @param {?proto.Mysqlx.Expr.Operator|undefined} value */\n\n\nproto.Mysqlx.Expr.Expr.prototype.setOperator = function (value) {\n  jspb.Message.setWrapperField(this, 6, value);\n};\n\nproto.Mysqlx.Expr.Expr.prototype.clearOperator = function () {\n  this.setOperator(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Mysqlx.Expr.Expr.prototype.hasOperator = function () {\n  return jspb.Message.getField(this, 6) != null;\n};\n/**\n * optional uint32 position = 7;\n * @return {number}\n */\n\n\nproto.Mysqlx.Expr.Expr.prototype.getPosition = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 7, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.Mysqlx.Expr.Expr.prototype.setPosition = function (value) {\n  jspb.Message.setField(this, 7, value);\n};\n\nproto.Mysqlx.Expr.Expr.prototype.clearPosition = function () {\n  jspb.Message.setField(this, 7, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Mysqlx.Expr.Expr.prototype.hasPosition = function () {\n  return jspb.Message.getField(this, 7) != null;\n};\n/**\n * optional Object object = 8;\n * @return {?proto.Mysqlx.Expr.Object}\n */\n\n\nproto.Mysqlx.Expr.Expr.prototype.getObject = function () {\n  return (\n    /** @type{?proto.Mysqlx.Expr.Object} */\n    jspb.Message.getWrapperField(this, proto.Mysqlx.Expr.Object, 8)\n  );\n};\n/** @param {?proto.Mysqlx.Expr.Object|undefined} value */\n\n\nproto.Mysqlx.Expr.Expr.prototype.setObject = function (value) {\n  jspb.Message.setWrapperField(this, 8, value);\n};\n\nproto.Mysqlx.Expr.Expr.prototype.clearObject = function () {\n  this.setObject(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Mysqlx.Expr.Expr.prototype.hasObject = function () {\n  return jspb.Message.getField(this, 8) != null;\n};\n/**\n * optional Array array = 9;\n * @return {?proto.Mysqlx.Expr.Array}\n */\n\n\nproto.Mysqlx.Expr.Expr.prototype.getArray = function () {\n  return (\n    /** @type{?proto.Mysqlx.Expr.Array} */\n    jspb.Message.getWrapperField(this, proto.Mysqlx.Expr.Array, 9)\n  );\n};\n/** @param {?proto.Mysqlx.Expr.Array|undefined} value */\n\n\nproto.Mysqlx.Expr.Expr.prototype.setArray = function (value) {\n  jspb.Message.setWrapperField(this, 9, value);\n};\n\nproto.Mysqlx.Expr.Expr.prototype.clearArray = function () {\n  this.setArray(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Mysqlx.Expr.Expr.prototype.hasArray = function () {\n  return jspb.Message.getField(this, 9) != null;\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Mysqlx.Expr.Identifier = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Mysqlx.Expr.Identifier, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.Mysqlx.Expr.Identifier.displayName = 'proto.Mysqlx.Expr.Identifier';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Mysqlx.Expr.Identifier.prototype.toObject = function (opt_includeInstance) {\n    return proto.Mysqlx.Expr.Identifier.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Mysqlx.Expr.Identifier} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Mysqlx.Expr.Identifier.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      name: jspb.Message.getField(msg, 1),\n      schemaName: jspb.Message.getField(msg, 2)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Expr.Identifier}\n */\n\n\nproto.Mysqlx.Expr.Identifier.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Expr.Identifier();\n  return proto.Mysqlx.Expr.Identifier.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Expr.Identifier} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Expr.Identifier}\n */\n\n\nproto.Mysqlx.Expr.Identifier.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setName(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setSchemaName(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Mysqlx.Expr.Identifier.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Expr.Identifier.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Expr.Identifier} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Mysqlx.Expr.Identifier.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f =\n  /** @type {string} */\n  jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeString(1, f);\n  }\n\n  f =\n  /** @type {string} */\n  jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeString(2, f);\n  }\n};\n/**\n * required string name = 1;\n * @return {string}\n */\n\n\nproto.Mysqlx.Expr.Identifier.prototype.getName = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.Mysqlx.Expr.Identifier.prototype.setName = function (value) {\n  jspb.Message.setField(this, 1, value);\n};\n\nproto.Mysqlx.Expr.Identifier.prototype.clearName = function () {\n  jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Mysqlx.Expr.Identifier.prototype.hasName = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional string schema_name = 2;\n * @return {string}\n */\n\n\nproto.Mysqlx.Expr.Identifier.prototype.getSchemaName = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.Mysqlx.Expr.Identifier.prototype.setSchemaName = function (value) {\n  jspb.Message.setField(this, 2, value);\n};\n\nproto.Mysqlx.Expr.Identifier.prototype.clearSchemaName = function () {\n  jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Mysqlx.Expr.Identifier.prototype.hasSchemaName = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Mysqlx.Expr.DocumentPathItem = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Mysqlx.Expr.DocumentPathItem, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.Mysqlx.Expr.DocumentPathItem.displayName = 'proto.Mysqlx.Expr.DocumentPathItem';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Mysqlx.Expr.DocumentPathItem.prototype.toObject = function (opt_includeInstance) {\n    return proto.Mysqlx.Expr.DocumentPathItem.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Mysqlx.Expr.DocumentPathItem} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Mysqlx.Expr.DocumentPathItem.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      type: jspb.Message.getField(msg, 1),\n      value: jspb.Message.getField(msg, 2),\n      index: jspb.Message.getField(msg, 3)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Expr.DocumentPathItem}\n */\n\n\nproto.Mysqlx.Expr.DocumentPathItem.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Expr.DocumentPathItem();\n  return proto.Mysqlx.Expr.DocumentPathItem.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Expr.DocumentPathItem} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Expr.DocumentPathItem}\n */\n\n\nproto.Mysqlx.Expr.DocumentPathItem.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!proto.Mysqlx.Expr.DocumentPathItem.Type} */\n        reader.readEnum();\n        msg.setType(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setValue(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setIndex(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Mysqlx.Expr.DocumentPathItem.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Expr.DocumentPathItem.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Expr.DocumentPathItem} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Mysqlx.Expr.DocumentPathItem.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f =\n  /** @type {!proto.Mysqlx.Expr.DocumentPathItem.Type} */\n  jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeEnum(1, f);\n  }\n\n  f =\n  /** @type {string} */\n  jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeString(2, f);\n  }\n\n  f =\n  /** @type {number} */\n  jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeUint32(3, f);\n  }\n};\n/**\n * @enum {number}\n */\n\n\nproto.Mysqlx.Expr.DocumentPathItem.Type = {\n  MEMBER: 1,\n  MEMBER_ASTERISK: 2,\n  ARRAY_INDEX: 3,\n  ARRAY_INDEX_ASTERISK: 4,\n  DOUBLE_ASTERISK: 5\n};\n/**\n * required Type type = 1;\n * @return {!proto.Mysqlx.Expr.DocumentPathItem.Type}\n */\n\nproto.Mysqlx.Expr.DocumentPathItem.prototype.getType = function () {\n  return (\n    /** @type {!proto.Mysqlx.Expr.DocumentPathItem.Type} */\n    jspb.Message.getFieldWithDefault(this, 1, 1)\n  );\n};\n/** @param {!proto.Mysqlx.Expr.DocumentPathItem.Type} value */\n\n\nproto.Mysqlx.Expr.DocumentPathItem.prototype.setType = function (value) {\n  jspb.Message.setField(this, 1, value);\n};\n\nproto.Mysqlx.Expr.DocumentPathItem.prototype.clearType = function () {\n  jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Mysqlx.Expr.DocumentPathItem.prototype.hasType = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional string value = 2;\n * @return {string}\n */\n\n\nproto.Mysqlx.Expr.DocumentPathItem.prototype.getValue = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.Mysqlx.Expr.DocumentPathItem.prototype.setValue = function (value) {\n  jspb.Message.setField(this, 2, value);\n};\n\nproto.Mysqlx.Expr.DocumentPathItem.prototype.clearValue = function () {\n  jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Mysqlx.Expr.DocumentPathItem.prototype.hasValue = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional uint32 index = 3;\n * @return {number}\n */\n\n\nproto.Mysqlx.Expr.DocumentPathItem.prototype.getIndex = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.Mysqlx.Expr.DocumentPathItem.prototype.setIndex = function (value) {\n  jspb.Message.setField(this, 3, value);\n};\n\nproto.Mysqlx.Expr.DocumentPathItem.prototype.clearIndex = function () {\n  jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Mysqlx.Expr.DocumentPathItem.prototype.hasIndex = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Mysqlx.Expr.ColumnIdentifier = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.Mysqlx.Expr.ColumnIdentifier.repeatedFields_, null);\n};\n\ngoog.inherits(proto.Mysqlx.Expr.ColumnIdentifier, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.Mysqlx.Expr.ColumnIdentifier.displayName = 'proto.Mysqlx.Expr.ColumnIdentifier';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.Mysqlx.Expr.ColumnIdentifier.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Mysqlx.Expr.ColumnIdentifier.prototype.toObject = function (opt_includeInstance) {\n    return proto.Mysqlx.Expr.ColumnIdentifier.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Mysqlx.Expr.ColumnIdentifier} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Mysqlx.Expr.ColumnIdentifier.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      documentPathList: jspb.Message.toObjectList(msg.getDocumentPathList(), proto.Mysqlx.Expr.DocumentPathItem.toObject, includeInstance),\n      name: jspb.Message.getField(msg, 2),\n      tableName: jspb.Message.getField(msg, 3),\n      schemaName: jspb.Message.getField(msg, 4)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Expr.ColumnIdentifier}\n */\n\n\nproto.Mysqlx.Expr.ColumnIdentifier.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Expr.ColumnIdentifier();\n  return proto.Mysqlx.Expr.ColumnIdentifier.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Expr.ColumnIdentifier} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Expr.ColumnIdentifier}\n */\n\n\nproto.Mysqlx.Expr.ColumnIdentifier.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.Mysqlx.Expr.DocumentPathItem();\n        reader.readMessage(value, proto.Mysqlx.Expr.DocumentPathItem.deserializeBinaryFromReader);\n        msg.addDocumentPath(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setName(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setTableName(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setSchemaName(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Mysqlx.Expr.ColumnIdentifier.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Expr.ColumnIdentifier.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Expr.ColumnIdentifier} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Mysqlx.Expr.ColumnIdentifier.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getDocumentPathList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto.Mysqlx.Expr.DocumentPathItem.serializeBinaryToWriter);\n  }\n\n  f =\n  /** @type {string} */\n  jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeString(2, f);\n  }\n\n  f =\n  /** @type {string} */\n  jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeString(3, f);\n  }\n\n  f =\n  /** @type {string} */\n  jspb.Message.getField(message, 4);\n\n  if (f != null) {\n    writer.writeString(4, f);\n  }\n};\n/**\n * repeated DocumentPathItem document_path = 1;\n * @return {!Array.<!proto.Mysqlx.Expr.DocumentPathItem>}\n */\n\n\nproto.Mysqlx.Expr.ColumnIdentifier.prototype.getDocumentPathList = function () {\n  return (\n    /** @type{!Array.<!proto.Mysqlx.Expr.DocumentPathItem>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.Mysqlx.Expr.DocumentPathItem, 1)\n  );\n};\n/** @param {!Array.<!proto.Mysqlx.Expr.DocumentPathItem>} value */\n\n\nproto.Mysqlx.Expr.ColumnIdentifier.prototype.setDocumentPathList = function (value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.Mysqlx.Expr.DocumentPathItem=} opt_value\n * @param {number=} opt_index\n * @return {!proto.Mysqlx.Expr.DocumentPathItem}\n */\n\n\nproto.Mysqlx.Expr.ColumnIdentifier.prototype.addDocumentPath = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Mysqlx.Expr.DocumentPathItem, opt_index);\n};\n\nproto.Mysqlx.Expr.ColumnIdentifier.prototype.clearDocumentPathList = function () {\n  this.setDocumentPathList([]);\n};\n/**\n * optional string name = 2;\n * @return {string}\n */\n\n\nproto.Mysqlx.Expr.ColumnIdentifier.prototype.getName = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.Mysqlx.Expr.ColumnIdentifier.prototype.setName = function (value) {\n  jspb.Message.setField(this, 2, value);\n};\n\nproto.Mysqlx.Expr.ColumnIdentifier.prototype.clearName = function () {\n  jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Mysqlx.Expr.ColumnIdentifier.prototype.hasName = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional string table_name = 3;\n * @return {string}\n */\n\n\nproto.Mysqlx.Expr.ColumnIdentifier.prototype.getTableName = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.Mysqlx.Expr.ColumnIdentifier.prototype.setTableName = function (value) {\n  jspb.Message.setField(this, 3, value);\n};\n\nproto.Mysqlx.Expr.ColumnIdentifier.prototype.clearTableName = function () {\n  jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Mysqlx.Expr.ColumnIdentifier.prototype.hasTableName = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * optional string schema_name = 4;\n * @return {string}\n */\n\n\nproto.Mysqlx.Expr.ColumnIdentifier.prototype.getSchemaName = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 4, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.Mysqlx.Expr.ColumnIdentifier.prototype.setSchemaName = function (value) {\n  jspb.Message.setField(this, 4, value);\n};\n\nproto.Mysqlx.Expr.ColumnIdentifier.prototype.clearSchemaName = function () {\n  jspb.Message.setField(this, 4, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Mysqlx.Expr.ColumnIdentifier.prototype.hasSchemaName = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Mysqlx.Expr.FunctionCall = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.Mysqlx.Expr.FunctionCall.repeatedFields_, null);\n};\n\ngoog.inherits(proto.Mysqlx.Expr.FunctionCall, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.Mysqlx.Expr.FunctionCall.displayName = 'proto.Mysqlx.Expr.FunctionCall';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.Mysqlx.Expr.FunctionCall.repeatedFields_ = [2];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Mysqlx.Expr.FunctionCall.prototype.toObject = function (opt_includeInstance) {\n    return proto.Mysqlx.Expr.FunctionCall.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Mysqlx.Expr.FunctionCall} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Mysqlx.Expr.FunctionCall.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      name: (f = msg.getName()) && proto.Mysqlx.Expr.Identifier.toObject(includeInstance, f),\n      paramList: jspb.Message.toObjectList(msg.getParamList(), proto.Mysqlx.Expr.Expr.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Expr.FunctionCall}\n */\n\n\nproto.Mysqlx.Expr.FunctionCall.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Expr.FunctionCall();\n  return proto.Mysqlx.Expr.FunctionCall.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Expr.FunctionCall} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Expr.FunctionCall}\n */\n\n\nproto.Mysqlx.Expr.FunctionCall.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.Mysqlx.Expr.Identifier();\n        reader.readMessage(value, proto.Mysqlx.Expr.Identifier.deserializeBinaryFromReader);\n        msg.setName(value);\n        break;\n\n      case 2:\n        var value = new proto.Mysqlx.Expr.Expr();\n        reader.readMessage(value, proto.Mysqlx.Expr.Expr.deserializeBinaryFromReader);\n        msg.addParam(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Mysqlx.Expr.FunctionCall.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Expr.FunctionCall.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Expr.FunctionCall} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Mysqlx.Expr.FunctionCall.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getName();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.Mysqlx.Expr.Identifier.serializeBinaryToWriter);\n  }\n\n  f = message.getParamList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(2, f, proto.Mysqlx.Expr.Expr.serializeBinaryToWriter);\n  }\n};\n/**\n * required Identifier name = 1;\n * @return {!proto.Mysqlx.Expr.Identifier}\n */\n\n\nproto.Mysqlx.Expr.FunctionCall.prototype.getName = function () {\n  return (\n    /** @type{!proto.Mysqlx.Expr.Identifier} */\n    jspb.Message.getWrapperField(this, proto.Mysqlx.Expr.Identifier, 1, 1)\n  );\n};\n/** @param {!proto.Mysqlx.Expr.Identifier} value */\n\n\nproto.Mysqlx.Expr.FunctionCall.prototype.setName = function (value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\nproto.Mysqlx.Expr.FunctionCall.prototype.clearName = function () {\n  jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Mysqlx.Expr.FunctionCall.prototype.hasName = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * repeated Expr param = 2;\n * @return {!Array.<!proto.Mysqlx.Expr.Expr>}\n */\n\n\nproto.Mysqlx.Expr.FunctionCall.prototype.getParamList = function () {\n  return (\n    /** @type{!Array.<!proto.Mysqlx.Expr.Expr>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.Mysqlx.Expr.Expr, 2)\n  );\n};\n/** @param {!Array.<!proto.Mysqlx.Expr.Expr>} value */\n\n\nproto.Mysqlx.Expr.FunctionCall.prototype.setParamList = function (value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n/**\n * @param {!proto.Mysqlx.Expr.Expr=} opt_value\n * @param {number=} opt_index\n * @return {!proto.Mysqlx.Expr.Expr}\n */\n\n\nproto.Mysqlx.Expr.FunctionCall.prototype.addParam = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Mysqlx.Expr.Expr, opt_index);\n};\n\nproto.Mysqlx.Expr.FunctionCall.prototype.clearParamList = function () {\n  this.setParamList([]);\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Mysqlx.Expr.Operator = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.Mysqlx.Expr.Operator.repeatedFields_, null);\n};\n\ngoog.inherits(proto.Mysqlx.Expr.Operator, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.Mysqlx.Expr.Operator.displayName = 'proto.Mysqlx.Expr.Operator';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.Mysqlx.Expr.Operator.repeatedFields_ = [2];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Mysqlx.Expr.Operator.prototype.toObject = function (opt_includeInstance) {\n    return proto.Mysqlx.Expr.Operator.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Mysqlx.Expr.Operator} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Mysqlx.Expr.Operator.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      name: jspb.Message.getField(msg, 1),\n      paramList: jspb.Message.toObjectList(msg.getParamList(), proto.Mysqlx.Expr.Expr.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Expr.Operator}\n */\n\n\nproto.Mysqlx.Expr.Operator.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Expr.Operator();\n  return proto.Mysqlx.Expr.Operator.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Expr.Operator} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Expr.Operator}\n */\n\n\nproto.Mysqlx.Expr.Operator.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setName(value);\n        break;\n\n      case 2:\n        var value = new proto.Mysqlx.Expr.Expr();\n        reader.readMessage(value, proto.Mysqlx.Expr.Expr.deserializeBinaryFromReader);\n        msg.addParam(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Mysqlx.Expr.Operator.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Expr.Operator.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Expr.Operator} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Mysqlx.Expr.Operator.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f =\n  /** @type {string} */\n  jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getParamList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(2, f, proto.Mysqlx.Expr.Expr.serializeBinaryToWriter);\n  }\n};\n/**\n * required string name = 1;\n * @return {string}\n */\n\n\nproto.Mysqlx.Expr.Operator.prototype.getName = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.Mysqlx.Expr.Operator.prototype.setName = function (value) {\n  jspb.Message.setField(this, 1, value);\n};\n\nproto.Mysqlx.Expr.Operator.prototype.clearName = function () {\n  jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Mysqlx.Expr.Operator.prototype.hasName = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * repeated Expr param = 2;\n * @return {!Array.<!proto.Mysqlx.Expr.Expr>}\n */\n\n\nproto.Mysqlx.Expr.Operator.prototype.getParamList = function () {\n  return (\n    /** @type{!Array.<!proto.Mysqlx.Expr.Expr>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.Mysqlx.Expr.Expr, 2)\n  );\n};\n/** @param {!Array.<!proto.Mysqlx.Expr.Expr>} value */\n\n\nproto.Mysqlx.Expr.Operator.prototype.setParamList = function (value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n/**\n * @param {!proto.Mysqlx.Expr.Expr=} opt_value\n * @param {number=} opt_index\n * @return {!proto.Mysqlx.Expr.Expr}\n */\n\n\nproto.Mysqlx.Expr.Operator.prototype.addParam = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Mysqlx.Expr.Expr, opt_index);\n};\n\nproto.Mysqlx.Expr.Operator.prototype.clearParamList = function () {\n  this.setParamList([]);\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Mysqlx.Expr.Object = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.Mysqlx.Expr.Object.repeatedFields_, null);\n};\n\ngoog.inherits(proto.Mysqlx.Expr.Object, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.Mysqlx.Expr.Object.displayName = 'proto.Mysqlx.Expr.Object';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.Mysqlx.Expr.Object.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Mysqlx.Expr.Object.prototype.toObject = function (opt_includeInstance) {\n    return proto.Mysqlx.Expr.Object.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Mysqlx.Expr.Object} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Mysqlx.Expr.Object.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      fldList: jspb.Message.toObjectList(msg.getFldList(), proto.Mysqlx.Expr.Object.ObjectField.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Expr.Object}\n */\n\n\nproto.Mysqlx.Expr.Object.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Expr.Object();\n  return proto.Mysqlx.Expr.Object.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Expr.Object} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Expr.Object}\n */\n\n\nproto.Mysqlx.Expr.Object.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.Mysqlx.Expr.Object.ObjectField();\n        reader.readMessage(value, proto.Mysqlx.Expr.Object.ObjectField.deserializeBinaryFromReader);\n        msg.addFld(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Mysqlx.Expr.Object.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Expr.Object.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Expr.Object} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Mysqlx.Expr.Object.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getFldList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto.Mysqlx.Expr.Object.ObjectField.serializeBinaryToWriter);\n  }\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Mysqlx.Expr.Object.ObjectField = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Mysqlx.Expr.Object.ObjectField, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.Mysqlx.Expr.Object.ObjectField.displayName = 'proto.Mysqlx.Expr.Object.ObjectField';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Mysqlx.Expr.Object.ObjectField.prototype.toObject = function (opt_includeInstance) {\n    return proto.Mysqlx.Expr.Object.ObjectField.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Mysqlx.Expr.Object.ObjectField} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Mysqlx.Expr.Object.ObjectField.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      key: jspb.Message.getField(msg, 1),\n      value: (f = msg.getValue()) && proto.Mysqlx.Expr.Expr.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Expr.Object.ObjectField}\n */\n\n\nproto.Mysqlx.Expr.Object.ObjectField.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Expr.Object.ObjectField();\n  return proto.Mysqlx.Expr.Object.ObjectField.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Expr.Object.ObjectField} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Expr.Object.ObjectField}\n */\n\n\nproto.Mysqlx.Expr.Object.ObjectField.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setKey(value);\n        break;\n\n      case 2:\n        var value = new proto.Mysqlx.Expr.Expr();\n        reader.readMessage(value, proto.Mysqlx.Expr.Expr.deserializeBinaryFromReader);\n        msg.setValue(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Mysqlx.Expr.Object.ObjectField.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Expr.Object.ObjectField.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Expr.Object.ObjectField} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Mysqlx.Expr.Object.ObjectField.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f =\n  /** @type {string} */\n  jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getValue();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto.Mysqlx.Expr.Expr.serializeBinaryToWriter);\n  }\n};\n/**\n * required string key = 1;\n * @return {string}\n */\n\n\nproto.Mysqlx.Expr.Object.ObjectField.prototype.getKey = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.Mysqlx.Expr.Object.ObjectField.prototype.setKey = function (value) {\n  jspb.Message.setField(this, 1, value);\n};\n\nproto.Mysqlx.Expr.Object.ObjectField.prototype.clearKey = function () {\n  jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Mysqlx.Expr.Object.ObjectField.prototype.hasKey = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * required Expr value = 2;\n * @return {!proto.Mysqlx.Expr.Expr}\n */\n\n\nproto.Mysqlx.Expr.Object.ObjectField.prototype.getValue = function () {\n  return (\n    /** @type{!proto.Mysqlx.Expr.Expr} */\n    jspb.Message.getWrapperField(this, proto.Mysqlx.Expr.Expr, 2, 1)\n  );\n};\n/** @param {!proto.Mysqlx.Expr.Expr} value */\n\n\nproto.Mysqlx.Expr.Object.ObjectField.prototype.setValue = function (value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\nproto.Mysqlx.Expr.Object.ObjectField.prototype.clearValue = function () {\n  jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Mysqlx.Expr.Object.ObjectField.prototype.hasValue = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * repeated ObjectField fld = 1;\n * @return {!Array.<!proto.Mysqlx.Expr.Object.ObjectField>}\n */\n\n\nproto.Mysqlx.Expr.Object.prototype.getFldList = function () {\n  return (\n    /** @type{!Array.<!proto.Mysqlx.Expr.Object.ObjectField>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.Mysqlx.Expr.Object.ObjectField, 1)\n  );\n};\n/** @param {!Array.<!proto.Mysqlx.Expr.Object.ObjectField>} value */\n\n\nproto.Mysqlx.Expr.Object.prototype.setFldList = function (value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.Mysqlx.Expr.Object.ObjectField=} opt_value\n * @param {number=} opt_index\n * @return {!proto.Mysqlx.Expr.Object.ObjectField}\n */\n\n\nproto.Mysqlx.Expr.Object.prototype.addFld = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Mysqlx.Expr.Object.ObjectField, opt_index);\n};\n\nproto.Mysqlx.Expr.Object.prototype.clearFldList = function () {\n  this.setFldList([]);\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Mysqlx.Expr.Array = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.Mysqlx.Expr.Array.repeatedFields_, null);\n};\n\ngoog.inherits(proto.Mysqlx.Expr.Array, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.Mysqlx.Expr.Array.displayName = 'proto.Mysqlx.Expr.Array';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.Mysqlx.Expr.Array.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Mysqlx.Expr.Array.prototype.toObject = function (opt_includeInstance) {\n    return proto.Mysqlx.Expr.Array.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Mysqlx.Expr.Array} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Mysqlx.Expr.Array.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      valueList: jspb.Message.toObjectList(msg.getValueList(), proto.Mysqlx.Expr.Expr.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Expr.Array}\n */\n\n\nproto.Mysqlx.Expr.Array.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Expr.Array();\n  return proto.Mysqlx.Expr.Array.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Expr.Array} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Expr.Array}\n */\n\n\nproto.Mysqlx.Expr.Array.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.Mysqlx.Expr.Expr();\n        reader.readMessage(value, proto.Mysqlx.Expr.Expr.deserializeBinaryFromReader);\n        msg.addValue(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Mysqlx.Expr.Array.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Expr.Array.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Expr.Array} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Mysqlx.Expr.Array.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getValueList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto.Mysqlx.Expr.Expr.serializeBinaryToWriter);\n  }\n};\n/**\n * repeated Expr value = 1;\n * @return {!Array.<!proto.Mysqlx.Expr.Expr>}\n */\n\n\nproto.Mysqlx.Expr.Array.prototype.getValueList = function () {\n  return (\n    /** @type{!Array.<!proto.Mysqlx.Expr.Expr>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.Mysqlx.Expr.Expr, 1)\n  );\n};\n/** @param {!Array.<!proto.Mysqlx.Expr.Expr>} value */\n\n\nproto.Mysqlx.Expr.Array.prototype.setValueList = function (value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.Mysqlx.Expr.Expr=} opt_value\n * @param {number=} opt_index\n * @return {!proto.Mysqlx.Expr.Expr}\n */\n\n\nproto.Mysqlx.Expr.Array.prototype.addValue = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Mysqlx.Expr.Expr, opt_index);\n};\n\nproto.Mysqlx.Expr.Array.prototype.clearValueList = function () {\n  this.setValueList([]);\n};\n\ngoog.object.extend(exports, proto.Mysqlx.Expr);","map":{"version":3,"sources":["/home/ad/Bureau/infof308/src/node_modules/@mysql/xdevapi/lib/Protocol/Stubs/mysqlx_expr_pb.js"],"names":["jspb","require","goog","global","Function","mysqlx_datatypes_pb","exportSymbol","proto","Mysqlx","Expr","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","type","getField","identifier","getIdentifier","ColumnIdentifier","variable","literal","getLiteral","Scalar","functionCall","getFunctionCall","FunctionCall","operator","getOperator","Operator","position","object","getObject","Object","array","getArray","Array","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readEnum","setType","readMessage","setIdentifier","readString","setVariable","setLiteral","setFunctionCall","setOperator","readUint32","setPosition","setObject","setArray","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","writeEnum","writeMessage","writeString","writeUint32","Type","IDENT","LITERAL","VARIABLE","FUNC_CALL","OPERATOR","PLACEHOLDER","OBJECT","ARRAY","getType","getFieldWithDefault","setField","clearType","hasType","getWrapperField","setWrapperField","clearIdentifier","hasIdentifier","getVariable","clearVariable","hasVariable","clearLiteral","hasLiteral","clearFunctionCall","hasFunctionCall","clearOperator","hasOperator","getPosition","clearPosition","hasPosition","clearObject","hasObject","clearArray","hasArray","Identifier","name","schemaName","setName","setSchemaName","getName","clearName","hasName","getSchemaName","clearSchemaName","hasSchemaName","DocumentPathItem","index","setValue","setIndex","MEMBER","MEMBER_ASTERISK","ARRAY_INDEX","ARRAY_INDEX_ASTERISK","DOUBLE_ASTERISK","getValue","clearValue","hasValue","getIndex","clearIndex","hasIndex","repeatedFields_","documentPathList","toObjectList","getDocumentPathList","tableName","addDocumentPath","setTableName","length","writeRepeatedMessage","getRepeatedWrapperField","setDocumentPathList","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","clearDocumentPathList","getTableName","clearTableName","hasTableName","paramList","getParamList","addParam","setParamList","clearParamList","fldList","getFldList","ObjectField","addFld","key","setKey","getKey","clearKey","hasKey","setFldList","clearFldList","valueList","getValueList","addValue","setValueList","clearValueList","extend","exports"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2017, 2021, Oracle and/or its affiliates.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License, version 2.0, as\n * published by the Free Software Foundation.\n *\n * This program is also distributed with certain software (including\n * but not limited to OpenSSL) that is licensed under separate terms,\n * as designated in a particular file or component or in included license\n * documentation.  The authors of MySQL hereby grant you an\n * additional permission to link the program and your derivative works\n * with the separately licensed software that they have included with\n * MySQL.\n *\n * Without limiting anything contained in the foregoing, this file,\n * which is part of MySQL Connector/Node.js, is also subject to the\n * Universal FOSS Exception, version 1.0, a copy of which can be found at\n * http://oss.oracle.com/licenses/universal-foss-exception.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License, version 2.0, for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar mysqlx_datatypes_pb = require('./mysqlx_datatypes_pb.js');\ngoog.exportSymbol('proto.Mysqlx.Expr.Array', null, global);\ngoog.exportSymbol('proto.Mysqlx.Expr.ColumnIdentifier', null, global);\ngoog.exportSymbol('proto.Mysqlx.Expr.DocumentPathItem', null, global);\ngoog.exportSymbol('proto.Mysqlx.Expr.DocumentPathItem.Type', null, global);\ngoog.exportSymbol('proto.Mysqlx.Expr.Expr', null, global);\ngoog.exportSymbol('proto.Mysqlx.Expr.Expr.Type', null, global);\ngoog.exportSymbol('proto.Mysqlx.Expr.FunctionCall', null, global);\ngoog.exportSymbol('proto.Mysqlx.Expr.Identifier', null, global);\ngoog.exportSymbol('proto.Mysqlx.Expr.Object', null, global);\ngoog.exportSymbol('proto.Mysqlx.Expr.Object.ObjectField', null, global);\ngoog.exportSymbol('proto.Mysqlx.Expr.Operator', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Mysqlx.Expr.Expr = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Mysqlx.Expr.Expr, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Mysqlx.Expr.Expr.displayName = 'proto.Mysqlx.Expr.Expr';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Mysqlx.Expr.Expr.prototype.toObject = function(opt_includeInstance) {\n  return proto.Mysqlx.Expr.Expr.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Mysqlx.Expr.Expr} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Expr.Expr.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    type: jspb.Message.getField(msg, 1),\n    identifier: (f = msg.getIdentifier()) && proto.Mysqlx.Expr.ColumnIdentifier.toObject(includeInstance, f),\n    variable: jspb.Message.getField(msg, 3),\n    literal: (f = msg.getLiteral()) && mysqlx_datatypes_pb.Scalar.toObject(includeInstance, f),\n    functionCall: (f = msg.getFunctionCall()) && proto.Mysqlx.Expr.FunctionCall.toObject(includeInstance, f),\n    operator: (f = msg.getOperator()) && proto.Mysqlx.Expr.Operator.toObject(includeInstance, f),\n    position: jspb.Message.getField(msg, 7),\n    object: (f = msg.getObject()) && proto.Mysqlx.Expr.Object.toObject(includeInstance, f),\n    array: (f = msg.getArray()) && proto.Mysqlx.Expr.Array.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Expr.Expr}\n */\nproto.Mysqlx.Expr.Expr.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Expr.Expr;\n  return proto.Mysqlx.Expr.Expr.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Expr.Expr} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Expr.Expr}\n */\nproto.Mysqlx.Expr.Expr.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.Mysqlx.Expr.Expr.Type} */ (reader.readEnum());\n      msg.setType(value);\n      break;\n    case 2:\n      var value = new proto.Mysqlx.Expr.ColumnIdentifier;\n      reader.readMessage(value,proto.Mysqlx.Expr.ColumnIdentifier.deserializeBinaryFromReader);\n      msg.setIdentifier(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setVariable(value);\n      break;\n    case 4:\n      var value = new mysqlx_datatypes_pb.Scalar;\n      reader.readMessage(value,mysqlx_datatypes_pb.Scalar.deserializeBinaryFromReader);\n      msg.setLiteral(value);\n      break;\n    case 5:\n      var value = new proto.Mysqlx.Expr.FunctionCall;\n      reader.readMessage(value,proto.Mysqlx.Expr.FunctionCall.deserializeBinaryFromReader);\n      msg.setFunctionCall(value);\n      break;\n    case 6:\n      var value = new proto.Mysqlx.Expr.Operator;\n      reader.readMessage(value,proto.Mysqlx.Expr.Operator.deserializeBinaryFromReader);\n      msg.setOperator(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setPosition(value);\n      break;\n    case 8:\n      var value = new proto.Mysqlx.Expr.Object;\n      reader.readMessage(value,proto.Mysqlx.Expr.Object.deserializeBinaryFromReader);\n      msg.setObject(value);\n      break;\n    case 9:\n      var value = new proto.Mysqlx.Expr.Array;\n      reader.readMessage(value,proto.Mysqlx.Expr.Array.deserializeBinaryFromReader);\n      msg.setArray(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Mysqlx.Expr.Expr.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Expr.Expr.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Expr.Expr} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Expr.Expr.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {!proto.Mysqlx.Expr.Expr.Type} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getIdentifier();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.Mysqlx.Expr.ColumnIdentifier.serializeBinaryToWriter\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getLiteral();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      mysqlx_datatypes_pb.Scalar.serializeBinaryToWriter\n    );\n  }\n  f = message.getFunctionCall();\n  if (f != null) {\n    writer.writeMessage(\n      5,\n      f,\n      proto.Mysqlx.Expr.FunctionCall.serializeBinaryToWriter\n    );\n  }\n  f = message.getOperator();\n  if (f != null) {\n    writer.writeMessage(\n      6,\n      f,\n      proto.Mysqlx.Expr.Operator.serializeBinaryToWriter\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 7));\n  if (f != null) {\n    writer.writeUint32(\n      7,\n      f\n    );\n  }\n  f = message.getObject();\n  if (f != null) {\n    writer.writeMessage(\n      8,\n      f,\n      proto.Mysqlx.Expr.Object.serializeBinaryToWriter\n    );\n  }\n  f = message.getArray();\n  if (f != null) {\n    writer.writeMessage(\n      9,\n      f,\n      proto.Mysqlx.Expr.Array.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.Mysqlx.Expr.Expr.Type = {\n  IDENT: 1,\n  LITERAL: 2,\n  VARIABLE: 3,\n  FUNC_CALL: 4,\n  OPERATOR: 5,\n  PLACEHOLDER: 6,\n  OBJECT: 7,\n  ARRAY: 8\n};\n\n/**\n * required Type type = 1;\n * @return {!proto.Mysqlx.Expr.Expr.Type}\n */\nproto.Mysqlx.Expr.Expr.prototype.getType = function() {\n  return /** @type {!proto.Mysqlx.Expr.Expr.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 1));\n};\n\n\n/** @param {!proto.Mysqlx.Expr.Expr.Type} value */\nproto.Mysqlx.Expr.Expr.prototype.setType = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.Mysqlx.Expr.Expr.prototype.clearType = function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Mysqlx.Expr.Expr.prototype.hasType = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional ColumnIdentifier identifier = 2;\n * @return {?proto.Mysqlx.Expr.ColumnIdentifier}\n */\nproto.Mysqlx.Expr.Expr.prototype.getIdentifier = function() {\n  return /** @type{?proto.Mysqlx.Expr.ColumnIdentifier} */ (\n    jspb.Message.getWrapperField(this, proto.Mysqlx.Expr.ColumnIdentifier, 2));\n};\n\n\n/** @param {?proto.Mysqlx.Expr.ColumnIdentifier|undefined} value */\nproto.Mysqlx.Expr.Expr.prototype.setIdentifier = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.Mysqlx.Expr.Expr.prototype.clearIdentifier = function() {\n  this.setIdentifier(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Mysqlx.Expr.Expr.prototype.hasIdentifier = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional string variable = 3;\n * @return {string}\n */\nproto.Mysqlx.Expr.Expr.prototype.getVariable = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Mysqlx.Expr.Expr.prototype.setVariable = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\nproto.Mysqlx.Expr.Expr.prototype.clearVariable = function() {\n  jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Mysqlx.Expr.Expr.prototype.hasVariable = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional Mysqlx.Datatypes.Scalar literal = 4;\n * @return {?proto.Mysqlx.Datatypes.Scalar}\n */\nproto.Mysqlx.Expr.Expr.prototype.getLiteral = function() {\n  return /** @type{?proto.Mysqlx.Datatypes.Scalar} */ (\n    jspb.Message.getWrapperField(this, mysqlx_datatypes_pb.Scalar, 4));\n};\n\n\n/** @param {?proto.Mysqlx.Datatypes.Scalar|undefined} value */\nproto.Mysqlx.Expr.Expr.prototype.setLiteral = function(value) {\n  jspb.Message.setWrapperField(this, 4, value);\n};\n\n\nproto.Mysqlx.Expr.Expr.prototype.clearLiteral = function() {\n  this.setLiteral(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Mysqlx.Expr.Expr.prototype.hasLiteral = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional FunctionCall function_call = 5;\n * @return {?proto.Mysqlx.Expr.FunctionCall}\n */\nproto.Mysqlx.Expr.Expr.prototype.getFunctionCall = function() {\n  return /** @type{?proto.Mysqlx.Expr.FunctionCall} */ (\n    jspb.Message.getWrapperField(this, proto.Mysqlx.Expr.FunctionCall, 5));\n};\n\n\n/** @param {?proto.Mysqlx.Expr.FunctionCall|undefined} value */\nproto.Mysqlx.Expr.Expr.prototype.setFunctionCall = function(value) {\n  jspb.Message.setWrapperField(this, 5, value);\n};\n\n\nproto.Mysqlx.Expr.Expr.prototype.clearFunctionCall = function() {\n  this.setFunctionCall(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Mysqlx.Expr.Expr.prototype.hasFunctionCall = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional Operator operator = 6;\n * @return {?proto.Mysqlx.Expr.Operator}\n */\nproto.Mysqlx.Expr.Expr.prototype.getOperator = function() {\n  return /** @type{?proto.Mysqlx.Expr.Operator} */ (\n    jspb.Message.getWrapperField(this, proto.Mysqlx.Expr.Operator, 6));\n};\n\n\n/** @param {?proto.Mysqlx.Expr.Operator|undefined} value */\nproto.Mysqlx.Expr.Expr.prototype.setOperator = function(value) {\n  jspb.Message.setWrapperField(this, 6, value);\n};\n\n\nproto.Mysqlx.Expr.Expr.prototype.clearOperator = function() {\n  this.setOperator(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Mysqlx.Expr.Expr.prototype.hasOperator = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n/**\n * optional uint32 position = 7;\n * @return {number}\n */\nproto.Mysqlx.Expr.Expr.prototype.getPosition = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.Mysqlx.Expr.Expr.prototype.setPosition = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\nproto.Mysqlx.Expr.Expr.prototype.clearPosition = function() {\n  jspb.Message.setField(this, 7, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Mysqlx.Expr.Expr.prototype.hasPosition = function() {\n  return jspb.Message.getField(this, 7) != null;\n};\n\n\n/**\n * optional Object object = 8;\n * @return {?proto.Mysqlx.Expr.Object}\n */\nproto.Mysqlx.Expr.Expr.prototype.getObject = function() {\n  return /** @type{?proto.Mysqlx.Expr.Object} */ (\n    jspb.Message.getWrapperField(this, proto.Mysqlx.Expr.Object, 8));\n};\n\n\n/** @param {?proto.Mysqlx.Expr.Object|undefined} value */\nproto.Mysqlx.Expr.Expr.prototype.setObject = function(value) {\n  jspb.Message.setWrapperField(this, 8, value);\n};\n\n\nproto.Mysqlx.Expr.Expr.prototype.clearObject = function() {\n  this.setObject(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Mysqlx.Expr.Expr.prototype.hasObject = function() {\n  return jspb.Message.getField(this, 8) != null;\n};\n\n\n/**\n * optional Array array = 9;\n * @return {?proto.Mysqlx.Expr.Array}\n */\nproto.Mysqlx.Expr.Expr.prototype.getArray = function() {\n  return /** @type{?proto.Mysqlx.Expr.Array} */ (\n    jspb.Message.getWrapperField(this, proto.Mysqlx.Expr.Array, 9));\n};\n\n\n/** @param {?proto.Mysqlx.Expr.Array|undefined} value */\nproto.Mysqlx.Expr.Expr.prototype.setArray = function(value) {\n  jspb.Message.setWrapperField(this, 9, value);\n};\n\n\nproto.Mysqlx.Expr.Expr.prototype.clearArray = function() {\n  this.setArray(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Mysqlx.Expr.Expr.prototype.hasArray = function() {\n  return jspb.Message.getField(this, 9) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Mysqlx.Expr.Identifier = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Mysqlx.Expr.Identifier, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Mysqlx.Expr.Identifier.displayName = 'proto.Mysqlx.Expr.Identifier';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Mysqlx.Expr.Identifier.prototype.toObject = function(opt_includeInstance) {\n  return proto.Mysqlx.Expr.Identifier.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Mysqlx.Expr.Identifier} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Expr.Identifier.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getField(msg, 1),\n    schemaName: jspb.Message.getField(msg, 2)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Expr.Identifier}\n */\nproto.Mysqlx.Expr.Identifier.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Expr.Identifier;\n  return proto.Mysqlx.Expr.Identifier.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Expr.Identifier} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Expr.Identifier}\n */\nproto.Mysqlx.Expr.Identifier.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSchemaName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Mysqlx.Expr.Identifier.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Expr.Identifier.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Expr.Identifier} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Expr.Identifier.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * required string name = 1;\n * @return {string}\n */\nproto.Mysqlx.Expr.Identifier.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Mysqlx.Expr.Identifier.prototype.setName = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.Mysqlx.Expr.Identifier.prototype.clearName = function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Mysqlx.Expr.Identifier.prototype.hasName = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional string schema_name = 2;\n * @return {string}\n */\nproto.Mysqlx.Expr.Identifier.prototype.getSchemaName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Mysqlx.Expr.Identifier.prototype.setSchemaName = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\nproto.Mysqlx.Expr.Identifier.prototype.clearSchemaName = function() {\n  jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Mysqlx.Expr.Identifier.prototype.hasSchemaName = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Mysqlx.Expr.DocumentPathItem = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Mysqlx.Expr.DocumentPathItem, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Mysqlx.Expr.DocumentPathItem.displayName = 'proto.Mysqlx.Expr.DocumentPathItem';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Mysqlx.Expr.DocumentPathItem.prototype.toObject = function(opt_includeInstance) {\n  return proto.Mysqlx.Expr.DocumentPathItem.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Mysqlx.Expr.DocumentPathItem} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Expr.DocumentPathItem.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    type: jspb.Message.getField(msg, 1),\n    value: jspb.Message.getField(msg, 2),\n    index: jspb.Message.getField(msg, 3)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Expr.DocumentPathItem}\n */\nproto.Mysqlx.Expr.DocumentPathItem.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Expr.DocumentPathItem;\n  return proto.Mysqlx.Expr.DocumentPathItem.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Expr.DocumentPathItem} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Expr.DocumentPathItem}\n */\nproto.Mysqlx.Expr.DocumentPathItem.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.Mysqlx.Expr.DocumentPathItem.Type} */ (reader.readEnum());\n      msg.setType(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setValue(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setIndex(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Mysqlx.Expr.DocumentPathItem.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Expr.DocumentPathItem.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Expr.DocumentPathItem} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Expr.DocumentPathItem.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {!proto.Mysqlx.Expr.DocumentPathItem.Type} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeUint32(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.Mysqlx.Expr.DocumentPathItem.Type = {\n  MEMBER: 1,\n  MEMBER_ASTERISK: 2,\n  ARRAY_INDEX: 3,\n  ARRAY_INDEX_ASTERISK: 4,\n  DOUBLE_ASTERISK: 5\n};\n\n/**\n * required Type type = 1;\n * @return {!proto.Mysqlx.Expr.DocumentPathItem.Type}\n */\nproto.Mysqlx.Expr.DocumentPathItem.prototype.getType = function() {\n  return /** @type {!proto.Mysqlx.Expr.DocumentPathItem.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 1));\n};\n\n\n/** @param {!proto.Mysqlx.Expr.DocumentPathItem.Type} value */\nproto.Mysqlx.Expr.DocumentPathItem.prototype.setType = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.Mysqlx.Expr.DocumentPathItem.prototype.clearType = function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Mysqlx.Expr.DocumentPathItem.prototype.hasType = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional string value = 2;\n * @return {string}\n */\nproto.Mysqlx.Expr.DocumentPathItem.prototype.getValue = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Mysqlx.Expr.DocumentPathItem.prototype.setValue = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\nproto.Mysqlx.Expr.DocumentPathItem.prototype.clearValue = function() {\n  jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Mysqlx.Expr.DocumentPathItem.prototype.hasValue = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional uint32 index = 3;\n * @return {number}\n */\nproto.Mysqlx.Expr.DocumentPathItem.prototype.getIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.Mysqlx.Expr.DocumentPathItem.prototype.setIndex = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\nproto.Mysqlx.Expr.DocumentPathItem.prototype.clearIndex = function() {\n  jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Mysqlx.Expr.DocumentPathItem.prototype.hasIndex = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Mysqlx.Expr.ColumnIdentifier = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.Mysqlx.Expr.ColumnIdentifier.repeatedFields_, null);\n};\ngoog.inherits(proto.Mysqlx.Expr.ColumnIdentifier, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Mysqlx.Expr.ColumnIdentifier.displayName = 'proto.Mysqlx.Expr.ColumnIdentifier';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.Mysqlx.Expr.ColumnIdentifier.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Mysqlx.Expr.ColumnIdentifier.prototype.toObject = function(opt_includeInstance) {\n  return proto.Mysqlx.Expr.ColumnIdentifier.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Mysqlx.Expr.ColumnIdentifier} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Expr.ColumnIdentifier.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    documentPathList: jspb.Message.toObjectList(msg.getDocumentPathList(),\n    proto.Mysqlx.Expr.DocumentPathItem.toObject, includeInstance),\n    name: jspb.Message.getField(msg, 2),\n    tableName: jspb.Message.getField(msg, 3),\n    schemaName: jspb.Message.getField(msg, 4)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Expr.ColumnIdentifier}\n */\nproto.Mysqlx.Expr.ColumnIdentifier.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Expr.ColumnIdentifier;\n  return proto.Mysqlx.Expr.ColumnIdentifier.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Expr.ColumnIdentifier} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Expr.ColumnIdentifier}\n */\nproto.Mysqlx.Expr.ColumnIdentifier.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.Mysqlx.Expr.DocumentPathItem;\n      reader.readMessage(value,proto.Mysqlx.Expr.DocumentPathItem.deserializeBinaryFromReader);\n      msg.addDocumentPath(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTableName(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSchemaName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Mysqlx.Expr.ColumnIdentifier.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Expr.ColumnIdentifier.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Expr.ColumnIdentifier} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Expr.ColumnIdentifier.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDocumentPathList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.Mysqlx.Expr.DocumentPathItem.serializeBinaryToWriter\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 4));\n  if (f != null) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated DocumentPathItem document_path = 1;\n * @return {!Array.<!proto.Mysqlx.Expr.DocumentPathItem>}\n */\nproto.Mysqlx.Expr.ColumnIdentifier.prototype.getDocumentPathList = function() {\n  return /** @type{!Array.<!proto.Mysqlx.Expr.DocumentPathItem>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.Mysqlx.Expr.DocumentPathItem, 1));\n};\n\n\n/** @param {!Array.<!proto.Mysqlx.Expr.DocumentPathItem>} value */\nproto.Mysqlx.Expr.ColumnIdentifier.prototype.setDocumentPathList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.Mysqlx.Expr.DocumentPathItem=} opt_value\n * @param {number=} opt_index\n * @return {!proto.Mysqlx.Expr.DocumentPathItem}\n */\nproto.Mysqlx.Expr.ColumnIdentifier.prototype.addDocumentPath = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Mysqlx.Expr.DocumentPathItem, opt_index);\n};\n\n\nproto.Mysqlx.Expr.ColumnIdentifier.prototype.clearDocumentPathList = function() {\n  this.setDocumentPathList([]);\n};\n\n\n/**\n * optional string name = 2;\n * @return {string}\n */\nproto.Mysqlx.Expr.ColumnIdentifier.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Mysqlx.Expr.ColumnIdentifier.prototype.setName = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\nproto.Mysqlx.Expr.ColumnIdentifier.prototype.clearName = function() {\n  jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Mysqlx.Expr.ColumnIdentifier.prototype.hasName = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional string table_name = 3;\n * @return {string}\n */\nproto.Mysqlx.Expr.ColumnIdentifier.prototype.getTableName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Mysqlx.Expr.ColumnIdentifier.prototype.setTableName = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\nproto.Mysqlx.Expr.ColumnIdentifier.prototype.clearTableName = function() {\n  jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Mysqlx.Expr.ColumnIdentifier.prototype.hasTableName = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional string schema_name = 4;\n * @return {string}\n */\nproto.Mysqlx.Expr.ColumnIdentifier.prototype.getSchemaName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Mysqlx.Expr.ColumnIdentifier.prototype.setSchemaName = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\nproto.Mysqlx.Expr.ColumnIdentifier.prototype.clearSchemaName = function() {\n  jspb.Message.setField(this, 4, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Mysqlx.Expr.ColumnIdentifier.prototype.hasSchemaName = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Mysqlx.Expr.FunctionCall = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.Mysqlx.Expr.FunctionCall.repeatedFields_, null);\n};\ngoog.inherits(proto.Mysqlx.Expr.FunctionCall, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Mysqlx.Expr.FunctionCall.displayName = 'proto.Mysqlx.Expr.FunctionCall';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.Mysqlx.Expr.FunctionCall.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Mysqlx.Expr.FunctionCall.prototype.toObject = function(opt_includeInstance) {\n  return proto.Mysqlx.Expr.FunctionCall.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Mysqlx.Expr.FunctionCall} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Expr.FunctionCall.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: (f = msg.getName()) && proto.Mysqlx.Expr.Identifier.toObject(includeInstance, f),\n    paramList: jspb.Message.toObjectList(msg.getParamList(),\n    proto.Mysqlx.Expr.Expr.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Expr.FunctionCall}\n */\nproto.Mysqlx.Expr.FunctionCall.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Expr.FunctionCall;\n  return proto.Mysqlx.Expr.FunctionCall.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Expr.FunctionCall} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Expr.FunctionCall}\n */\nproto.Mysqlx.Expr.FunctionCall.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.Mysqlx.Expr.Identifier;\n      reader.readMessage(value,proto.Mysqlx.Expr.Identifier.deserializeBinaryFromReader);\n      msg.setName(value);\n      break;\n    case 2:\n      var value = new proto.Mysqlx.Expr.Expr;\n      reader.readMessage(value,proto.Mysqlx.Expr.Expr.deserializeBinaryFromReader);\n      msg.addParam(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Mysqlx.Expr.FunctionCall.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Expr.FunctionCall.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Expr.FunctionCall} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Expr.FunctionCall.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.Mysqlx.Expr.Identifier.serializeBinaryToWriter\n    );\n  }\n  f = message.getParamList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.Mysqlx.Expr.Expr.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * required Identifier name = 1;\n * @return {!proto.Mysqlx.Expr.Identifier}\n */\nproto.Mysqlx.Expr.FunctionCall.prototype.getName = function() {\n  return /** @type{!proto.Mysqlx.Expr.Identifier} */ (\n    jspb.Message.getWrapperField(this, proto.Mysqlx.Expr.Identifier, 1, 1));\n};\n\n\n/** @param {!proto.Mysqlx.Expr.Identifier} value */\nproto.Mysqlx.Expr.FunctionCall.prototype.setName = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.Mysqlx.Expr.FunctionCall.prototype.clearName = function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Mysqlx.Expr.FunctionCall.prototype.hasName = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * repeated Expr param = 2;\n * @return {!Array.<!proto.Mysqlx.Expr.Expr>}\n */\nproto.Mysqlx.Expr.FunctionCall.prototype.getParamList = function() {\n  return /** @type{!Array.<!proto.Mysqlx.Expr.Expr>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.Mysqlx.Expr.Expr, 2));\n};\n\n\n/** @param {!Array.<!proto.Mysqlx.Expr.Expr>} value */\nproto.Mysqlx.Expr.FunctionCall.prototype.setParamList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.Mysqlx.Expr.Expr=} opt_value\n * @param {number=} opt_index\n * @return {!proto.Mysqlx.Expr.Expr}\n */\nproto.Mysqlx.Expr.FunctionCall.prototype.addParam = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Mysqlx.Expr.Expr, opt_index);\n};\n\n\nproto.Mysqlx.Expr.FunctionCall.prototype.clearParamList = function() {\n  this.setParamList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Mysqlx.Expr.Operator = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.Mysqlx.Expr.Operator.repeatedFields_, null);\n};\ngoog.inherits(proto.Mysqlx.Expr.Operator, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Mysqlx.Expr.Operator.displayName = 'proto.Mysqlx.Expr.Operator';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.Mysqlx.Expr.Operator.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Mysqlx.Expr.Operator.prototype.toObject = function(opt_includeInstance) {\n  return proto.Mysqlx.Expr.Operator.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Mysqlx.Expr.Operator} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Expr.Operator.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getField(msg, 1),\n    paramList: jspb.Message.toObjectList(msg.getParamList(),\n    proto.Mysqlx.Expr.Expr.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Expr.Operator}\n */\nproto.Mysqlx.Expr.Operator.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Expr.Operator;\n  return proto.Mysqlx.Expr.Operator.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Expr.Operator} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Expr.Operator}\n */\nproto.Mysqlx.Expr.Operator.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 2:\n      var value = new proto.Mysqlx.Expr.Expr;\n      reader.readMessage(value,proto.Mysqlx.Expr.Expr.deserializeBinaryFromReader);\n      msg.addParam(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Mysqlx.Expr.Operator.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Expr.Operator.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Expr.Operator} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Expr.Operator.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getParamList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.Mysqlx.Expr.Expr.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * required string name = 1;\n * @return {string}\n */\nproto.Mysqlx.Expr.Operator.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Mysqlx.Expr.Operator.prototype.setName = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.Mysqlx.Expr.Operator.prototype.clearName = function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Mysqlx.Expr.Operator.prototype.hasName = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * repeated Expr param = 2;\n * @return {!Array.<!proto.Mysqlx.Expr.Expr>}\n */\nproto.Mysqlx.Expr.Operator.prototype.getParamList = function() {\n  return /** @type{!Array.<!proto.Mysqlx.Expr.Expr>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.Mysqlx.Expr.Expr, 2));\n};\n\n\n/** @param {!Array.<!proto.Mysqlx.Expr.Expr>} value */\nproto.Mysqlx.Expr.Operator.prototype.setParamList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.Mysqlx.Expr.Expr=} opt_value\n * @param {number=} opt_index\n * @return {!proto.Mysqlx.Expr.Expr}\n */\nproto.Mysqlx.Expr.Operator.prototype.addParam = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Mysqlx.Expr.Expr, opt_index);\n};\n\n\nproto.Mysqlx.Expr.Operator.prototype.clearParamList = function() {\n  this.setParamList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Mysqlx.Expr.Object = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.Mysqlx.Expr.Object.repeatedFields_, null);\n};\ngoog.inherits(proto.Mysqlx.Expr.Object, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Mysqlx.Expr.Object.displayName = 'proto.Mysqlx.Expr.Object';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.Mysqlx.Expr.Object.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Mysqlx.Expr.Object.prototype.toObject = function(opt_includeInstance) {\n  return proto.Mysqlx.Expr.Object.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Mysqlx.Expr.Object} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Expr.Object.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    fldList: jspb.Message.toObjectList(msg.getFldList(),\n    proto.Mysqlx.Expr.Object.ObjectField.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Expr.Object}\n */\nproto.Mysqlx.Expr.Object.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Expr.Object;\n  return proto.Mysqlx.Expr.Object.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Expr.Object} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Expr.Object}\n */\nproto.Mysqlx.Expr.Object.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.Mysqlx.Expr.Object.ObjectField;\n      reader.readMessage(value,proto.Mysqlx.Expr.Object.ObjectField.deserializeBinaryFromReader);\n      msg.addFld(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Mysqlx.Expr.Object.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Expr.Object.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Expr.Object} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Expr.Object.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFldList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.Mysqlx.Expr.Object.ObjectField.serializeBinaryToWriter\n    );\n  }\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Mysqlx.Expr.Object.ObjectField = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Mysqlx.Expr.Object.ObjectField, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Mysqlx.Expr.Object.ObjectField.displayName = 'proto.Mysqlx.Expr.Object.ObjectField';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Mysqlx.Expr.Object.ObjectField.prototype.toObject = function(opt_includeInstance) {\n  return proto.Mysqlx.Expr.Object.ObjectField.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Mysqlx.Expr.Object.ObjectField} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Expr.Object.ObjectField.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    key: jspb.Message.getField(msg, 1),\n    value: (f = msg.getValue()) && proto.Mysqlx.Expr.Expr.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Expr.Object.ObjectField}\n */\nproto.Mysqlx.Expr.Object.ObjectField.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Expr.Object.ObjectField;\n  return proto.Mysqlx.Expr.Object.ObjectField.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Expr.Object.ObjectField} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Expr.Object.ObjectField}\n */\nproto.Mysqlx.Expr.Object.ObjectField.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setKey(value);\n      break;\n    case 2:\n      var value = new proto.Mysqlx.Expr.Expr;\n      reader.readMessage(value,proto.Mysqlx.Expr.Expr.deserializeBinaryFromReader);\n      msg.setValue(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Mysqlx.Expr.Object.ObjectField.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Expr.Object.ObjectField.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Expr.Object.ObjectField} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Expr.Object.ObjectField.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getValue();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.Mysqlx.Expr.Expr.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * required string key = 1;\n * @return {string}\n */\nproto.Mysqlx.Expr.Object.ObjectField.prototype.getKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Mysqlx.Expr.Object.ObjectField.prototype.setKey = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.Mysqlx.Expr.Object.ObjectField.prototype.clearKey = function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Mysqlx.Expr.Object.ObjectField.prototype.hasKey = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * required Expr value = 2;\n * @return {!proto.Mysqlx.Expr.Expr}\n */\nproto.Mysqlx.Expr.Object.ObjectField.prototype.getValue = function() {\n  return /** @type{!proto.Mysqlx.Expr.Expr} */ (\n    jspb.Message.getWrapperField(this, proto.Mysqlx.Expr.Expr, 2, 1));\n};\n\n\n/** @param {!proto.Mysqlx.Expr.Expr} value */\nproto.Mysqlx.Expr.Object.ObjectField.prototype.setValue = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.Mysqlx.Expr.Object.ObjectField.prototype.clearValue = function() {\n  jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Mysqlx.Expr.Object.ObjectField.prototype.hasValue = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * repeated ObjectField fld = 1;\n * @return {!Array.<!proto.Mysqlx.Expr.Object.ObjectField>}\n */\nproto.Mysqlx.Expr.Object.prototype.getFldList = function() {\n  return /** @type{!Array.<!proto.Mysqlx.Expr.Object.ObjectField>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.Mysqlx.Expr.Object.ObjectField, 1));\n};\n\n\n/** @param {!Array.<!proto.Mysqlx.Expr.Object.ObjectField>} value */\nproto.Mysqlx.Expr.Object.prototype.setFldList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.Mysqlx.Expr.Object.ObjectField=} opt_value\n * @param {number=} opt_index\n * @return {!proto.Mysqlx.Expr.Object.ObjectField}\n */\nproto.Mysqlx.Expr.Object.prototype.addFld = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Mysqlx.Expr.Object.ObjectField, opt_index);\n};\n\n\nproto.Mysqlx.Expr.Object.prototype.clearFldList = function() {\n  this.setFldList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Mysqlx.Expr.Array = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.Mysqlx.Expr.Array.repeatedFields_, null);\n};\ngoog.inherits(proto.Mysqlx.Expr.Array, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Mysqlx.Expr.Array.displayName = 'proto.Mysqlx.Expr.Array';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.Mysqlx.Expr.Array.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Mysqlx.Expr.Array.prototype.toObject = function(opt_includeInstance) {\n  return proto.Mysqlx.Expr.Array.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Mysqlx.Expr.Array} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Expr.Array.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    valueList: jspb.Message.toObjectList(msg.getValueList(),\n    proto.Mysqlx.Expr.Expr.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Mysqlx.Expr.Array}\n */\nproto.Mysqlx.Expr.Array.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Mysqlx.Expr.Array;\n  return proto.Mysqlx.Expr.Array.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Mysqlx.Expr.Array} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Mysqlx.Expr.Array}\n */\nproto.Mysqlx.Expr.Array.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.Mysqlx.Expr.Expr;\n      reader.readMessage(value,proto.Mysqlx.Expr.Expr.deserializeBinaryFromReader);\n      msg.addValue(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Mysqlx.Expr.Array.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Mysqlx.Expr.Array.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Mysqlx.Expr.Array} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Mysqlx.Expr.Array.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getValueList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.Mysqlx.Expr.Expr.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated Expr value = 1;\n * @return {!Array.<!proto.Mysqlx.Expr.Expr>}\n */\nproto.Mysqlx.Expr.Array.prototype.getValueList = function() {\n  return /** @type{!Array.<!proto.Mysqlx.Expr.Expr>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.Mysqlx.Expr.Expr, 1));\n};\n\n\n/** @param {!Array.<!proto.Mysqlx.Expr.Expr>} value */\nproto.Mysqlx.Expr.Array.prototype.setValueList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.Mysqlx.Expr.Expr=} opt_value\n * @param {number=} opt_index\n * @return {!proto.Mysqlx.Expr.Expr}\n */\nproto.Mysqlx.Expr.Array.prototype.addValue = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Mysqlx.Expr.Expr, opt_index);\n};\n\n\nproto.Mysqlx.Expr.Array.prototype.clearValueList = function() {\n  this.setValueList([]);\n};\n\n\ngoog.object.extend(exports, proto.Mysqlx.Expr);\n"]},"metadata":{},"sourceType":"script"}