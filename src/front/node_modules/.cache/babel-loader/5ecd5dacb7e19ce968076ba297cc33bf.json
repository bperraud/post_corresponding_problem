{"ast":null,"code":"/*\n * Copyright (c) 2017, 2021, Oracle and/or its affiliates.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License, version 2.0, as\n * published by the Free Software Foundation.\n *\n * This program is also distributed with certain software (including\n * but not limited to OpenSSL) that is licensed under separate terms,\n * as designated in a particular file or component or in included license\n * documentation.  The authors of MySQL hereby grant you an\n * additional permission to link the program and your derivative works\n * with the separately licensed software that they have included with\n * MySQL.\n *\n * Without limiting anything contained in the foregoing, this file,\n * which is part of MySQL Connector/Node.js, is also subject to the\n * Universal FOSS Exception, version 1.0, a copy of which can be found at\n * http://oss.oracle.com/licenses/universal-foss-exception.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License, version 2.0, for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA\n */\n'use strict';\n\nconst Pa = require('parsimmon');\n\nconst parser = options => r => Pa.seq(Pa.string('('), Pa.optWhitespace, r.expr.map(data => data.output), Pa.optWhitespace, Pa.string(')')).map(data => data[2]);\n\nmodule.exports = {\n  name: 'GROUPED_EXPR',\n  parser\n};","map":{"version":3,"sources":["/home/ad/Bureau/infof308/src/node_modules/@mysql/xdevapi/lib/ExprParser/lib/grammar/booleanExpressions/groupedExpr.js"],"names":["Pa","require","parser","options","r","seq","string","optWhitespace","expr","map","data","output","module","exports","name"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,EAAE,GAAGC,OAAO,CAAC,WAAD,CAAlB;;AAEA,MAAMC,MAAM,GAAGC,OAAO,IAAIC,CAAC,IAAIJ,EAAE,CAC5BK,GAD0B,CAEvBL,EAAE,CAACM,MAAH,CAAU,GAAV,CAFuB,EAGvBN,EAAE,CAACO,aAHoB,EAIvBH,CAAC,CAACI,IAAF,CAAOC,GAAP,CAAWC,IAAI,IAAIA,IAAI,CAACC,MAAxB,CAJuB,EAKvBX,EAAE,CAACO,aALoB,EAMvBP,EAAE,CAACM,MAAH,CAAU,GAAV,CANuB,EAQ1BG,GAR0B,CAQtBC,IAAI,IAAIA,IAAI,CAAC,CAAD,CARU,CAA/B;;AAUAE,MAAM,CAACC,OAAP,GAAiB;AAAEC,EAAAA,IAAI,EAAE,cAAR;AAAwBZ,EAAAA;AAAxB,CAAjB","sourcesContent":["/*\n * Copyright (c) 2017, 2021, Oracle and/or its affiliates.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License, version 2.0, as\n * published by the Free Software Foundation.\n *\n * This program is also distributed with certain software (including\n * but not limited to OpenSSL) that is licensed under separate terms,\n * as designated in a particular file or component or in included license\n * documentation.  The authors of MySQL hereby grant you an\n * additional permission to link the program and your derivative works\n * with the separately licensed software that they have included with\n * MySQL.\n *\n * Without limiting anything contained in the foregoing, this file,\n * which is part of MySQL Connector/Node.js, is also subject to the\n * Universal FOSS Exception, version 1.0, a copy of which can be found at\n * http://oss.oracle.com/licenses/universal-foss-exception.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License, version 2.0, for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\n'use strict';\n\nconst Pa = require('parsimmon');\n\nconst parser = options => r => Pa\n    .seq(\n        Pa.string('('),\n        Pa.optWhitespace,\n        r.expr.map(data => data.output),\n        Pa.optWhitespace,\n        Pa.string(')')\n    )\n    .map(data => data[2]);\n\nmodule.exports = { name: 'GROUPED_EXPR', parser };\n"]},"metadata":{},"sourceType":"script"}