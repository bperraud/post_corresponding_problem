{"ast":null,"code":"/*\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License, version 2.0, as\n * published by the Free Software Foundation.\n *\n * This program is also distributed with certain software (including\n * but not limited to OpenSSL) that is licensed under separate terms,\n * as designated in a particular file or component or in included license\n * documentation.  The authors of MySQL hereby grant you an\n * additional permission to link the program and your derivative works\n * with the separately licensed software that they have included with\n * MySQL.\n *\n * Without limiting anything contained in the foregoing, this file,\n * which is part of MySQL Connector/Node.js, is also subject to the\n * Universal FOSS Exception, version 1.0, a copy of which can be found at\n * http://oss.oracle.com/licenses/universal-foss-exception.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License, version 2.0, for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA\n */\n'use strict';\n\nconst FetchDoneMoreResultsetsStub = require('../../../Stubs/mysqlx_resultset_pb').FetchDoneMoreResultsets;\n\nconst ServerMessagesStub = require('../../../Stubs/mysqlx_pb').ServerMessages;\n\nconst bytes = require('../../ScalarValues/bytes');\n\nconst empty = require('../../Traits/Empty');\n\nconst wraps = require('../../Traits/Wraps');\n/**\n * @private\n * @alias module:adapters.Mysqlx.Connection.FetchDoneMoreResultsets\n * @param {proto.Mysqlx.Connection.FetchDoneMoreResultsets} proto - protobuf stub\n * @returns {module:adapters.Mysqlx.Connection.FetchDoneMoreResultsets}\n */\n\n\nfunction FetchDoneMoreResultsets(proto) {\n  return Object.assign({}, empty(proto), wraps(proto));\n}\n\nFetchDoneMoreResultsets.deserialize = function (buffer) {\n  return FetchDoneMoreResultsets(FetchDoneMoreResultsetsStub.deserializeBinary(bytes.deserialize(buffer)));\n};\n\nFetchDoneMoreResultsets.MESSAGE_ID = ServerMessagesStub.Type.RESULTSET_FETCH_DONE_MORE_RESULTSETS;\nmodule.exports = FetchDoneMoreResultsets;","map":{"version":3,"sources":["/home/ad/Bureau/infof308/src/node_modules/@mysql/xdevapi/lib/Protocol/Wrappers/Messages/Resultset/FetchDoneMoreResultsets.js"],"names":["FetchDoneMoreResultsetsStub","require","FetchDoneMoreResultsets","ServerMessagesStub","ServerMessages","bytes","empty","wraps","proto","Object","assign","deserialize","buffer","deserializeBinary","MESSAGE_ID","Type","RESULTSET_FETCH_DONE_MORE_RESULTSETS","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,2BAA2B,GAAGC,OAAO,CAAC,oCAAD,CAAP,CAA8CC,uBAAlF;;AACA,MAAMC,kBAAkB,GAAGF,OAAO,CAAC,0BAAD,CAAP,CAAoCG,cAA/D;;AACA,MAAMC,KAAK,GAAGJ,OAAO,CAAC,0BAAD,CAArB;;AACA,MAAMK,KAAK,GAAGL,OAAO,CAAC,oBAAD,CAArB;;AACA,MAAMM,KAAK,GAAGN,OAAO,CAAC,oBAAD,CAArB;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,uBAAT,CAAkCM,KAAlC,EAAyC;AACrC,SAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAK,CAACE,KAAD,CAAvB,EAAgCD,KAAK,CAACC,KAAD,CAArC,CAAP;AACH;;AAEDN,uBAAuB,CAACS,WAAxB,GAAsC,UAAUC,MAAV,EAAkB;AACpD,SAAOV,uBAAuB,CAACF,2BAA2B,CAACa,iBAA5B,CAA8CR,KAAK,CAACM,WAAN,CAAkBC,MAAlB,CAA9C,CAAD,CAA9B;AACH,CAFD;;AAIAV,uBAAuB,CAACY,UAAxB,GAAqCX,kBAAkB,CAACY,IAAnB,CAAwBC,oCAA7D;AAEAC,MAAM,CAACC,OAAP,GAAiBhB,uBAAjB","sourcesContent":["/*\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License, version 2.0, as\n * published by the Free Software Foundation.\n *\n * This program is also distributed with certain software (including\n * but not limited to OpenSSL) that is licensed under separate terms,\n * as designated in a particular file or component or in included license\n * documentation.  The authors of MySQL hereby grant you an\n * additional permission to link the program and your derivative works\n * with the separately licensed software that they have included with\n * MySQL.\n *\n * Without limiting anything contained in the foregoing, this file,\n * which is part of MySQL Connector/Node.js, is also subject to the\n * Universal FOSS Exception, version 1.0, a copy of which can be found at\n * http://oss.oracle.com/licenses/universal-foss-exception.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License, version 2.0, for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\n'use strict';\n\nconst FetchDoneMoreResultsetsStub = require('../../../Stubs/mysqlx_resultset_pb').FetchDoneMoreResultsets;\nconst ServerMessagesStub = require('../../../Stubs/mysqlx_pb').ServerMessages;\nconst bytes = require('../../ScalarValues/bytes');\nconst empty = require('../../Traits/Empty');\nconst wraps = require('../../Traits/Wraps');\n\n/**\n * @private\n * @alias module:adapters.Mysqlx.Connection.FetchDoneMoreResultsets\n * @param {proto.Mysqlx.Connection.FetchDoneMoreResultsets} proto - protobuf stub\n * @returns {module:adapters.Mysqlx.Connection.FetchDoneMoreResultsets}\n */\nfunction FetchDoneMoreResultsets (proto) {\n    return Object.assign({}, empty(proto), wraps(proto));\n}\n\nFetchDoneMoreResultsets.deserialize = function (buffer) {\n    return FetchDoneMoreResultsets(FetchDoneMoreResultsetsStub.deserializeBinary(bytes.deserialize(buffer)));\n};\n\nFetchDoneMoreResultsets.MESSAGE_ID = ServerMessagesStub.Type.RESULTSET_FETCH_DONE_MORE_RESULTSETS;\n\nmodule.exports = FetchDoneMoreResultsets;\n"]},"metadata":{},"sourceType":"script"}