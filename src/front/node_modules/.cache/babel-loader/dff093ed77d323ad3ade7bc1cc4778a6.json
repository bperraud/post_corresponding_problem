{"ast":null,"code":"/*\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License, version 2.0, as\n * published by the Free Software Foundation.\n *\n * This program is also distributed with certain software (including\n * but not limited to OpenSSL) that is licensed under separate terms,\n * as designated in a particular file or component or in included license\n * documentation.  The authors of MySQL hereby grant you an\n * additional permission to link the program and your derivative works\n * with the separately licensed software that they have included with\n * MySQL.\n *\n * Without limiting anything contained in the foregoing, this file,\n * which is part of MySQL Connector/Node.js, is also subject to the\n * Universal FOSS Exception, version 1.0, a copy of which can be found at\n * http://oss.oracle.com/licenses/universal-foss-exception.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License, version 2.0, for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA\n */\n'use strict';\n\nconst ServerMessagesStub = require('../../../Stubs/mysqlx_pb').ServerMessages;\n\nconst StmtExecuteOkStub = require('../../../Stubs/mysqlx_sql_pb').StmtExecuteOk;\n\nconst bytes = require('../../ScalarValues/bytes');\n\nconst empty = require('../../Traits/Empty');\n\nconst wraps = require('../../Traits/Wraps');\n/**\n * @private\n * @alias module:adapters.Mysql.Sql.StmtExecuteOk\n * @param {proto.Mysqlx.Sql.StmtExecuteOk} proto - protobuf stub\n * @returns {module:adapters.Mysqlx.Sql.StmtExecuteOk}\n */\n\n\nfunction StmtExecuteOk(proto) {\n  return Object.assign({}, empty(proto), wraps(proto));\n}\n/**\n * Creates a wrapper from a raw X Protocol message payload.\n * @returns {module:adapters.Mysqlx.Sql.StmtExecuteOk}\n */\n\n\nStmtExecuteOk.deserialize = function (buffer) {\n  return StmtExecuteOk(StmtExecuteOkStub.deserializeBinary(bytes.deserialize(buffer)));\n};\n\nStmtExecuteOk.MESSAGE_ID = ServerMessagesStub.Type.SQL_STMT_EXECUTE_OK;\nmodule.exports = StmtExecuteOk;","map":{"version":3,"sources":["/home/ad/Bureau/infof308/src/node_modules/@mysql/xdevapi/lib/Protocol/Wrappers/Messages/Sql/StmtExecuteOk.js"],"names":["ServerMessagesStub","require","ServerMessages","StmtExecuteOkStub","StmtExecuteOk","bytes","empty","wraps","proto","Object","assign","deserialize","buffer","deserializeBinary","MESSAGE_ID","Type","SQL_STMT_EXECUTE_OK","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,kBAAkB,GAAGC,OAAO,CAAC,0BAAD,CAAP,CAAoCC,cAA/D;;AACA,MAAMC,iBAAiB,GAAGF,OAAO,CAAC,8BAAD,CAAP,CAAwCG,aAAlE;;AACA,MAAMC,KAAK,GAAGJ,OAAO,CAAC,0BAAD,CAArB;;AACA,MAAMK,KAAK,GAAGL,OAAO,CAAC,oBAAD,CAArB;;AACA,MAAMM,KAAK,GAAGN,OAAO,CAAC,oBAAD,CAArB;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASG,aAAT,CAAwBI,KAAxB,EAA+B;AAC3B,SAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAK,CAACE,KAAD,CAAvB,EAAgCD,KAAK,CAACC,KAAD,CAArC,CAAP;AACH;AAED;AACA;AACA;AACA;;;AACAJ,aAAa,CAACO,WAAd,GAA4B,UAAUC,MAAV,EAAkB;AAC1C,SAAOR,aAAa,CAACD,iBAAiB,CAACU,iBAAlB,CAAoCR,KAAK,CAACM,WAAN,CAAkBC,MAAlB,CAApC,CAAD,CAApB;AACH,CAFD;;AAIAR,aAAa,CAACU,UAAd,GAA2Bd,kBAAkB,CAACe,IAAnB,CAAwBC,mBAAnD;AAEAC,MAAM,CAACC,OAAP,GAAiBd,aAAjB","sourcesContent":["/*\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License, version 2.0, as\n * published by the Free Software Foundation.\n *\n * This program is also distributed with certain software (including\n * but not limited to OpenSSL) that is licensed under separate terms,\n * as designated in a particular file or component or in included license\n * documentation.  The authors of MySQL hereby grant you an\n * additional permission to link the program and your derivative works\n * with the separately licensed software that they have included with\n * MySQL.\n *\n * Without limiting anything contained in the foregoing, this file,\n * which is part of MySQL Connector/Node.js, is also subject to the\n * Universal FOSS Exception, version 1.0, a copy of which can be found at\n * http://oss.oracle.com/licenses/universal-foss-exception.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License, version 2.0, for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\n'use strict';\n\nconst ServerMessagesStub = require('../../../Stubs/mysqlx_pb').ServerMessages;\nconst StmtExecuteOkStub = require('../../../Stubs/mysqlx_sql_pb').StmtExecuteOk;\nconst bytes = require('../../ScalarValues/bytes');\nconst empty = require('../../Traits/Empty');\nconst wraps = require('../../Traits/Wraps');\n\n/**\n * @private\n * @alias module:adapters.Mysql.Sql.StmtExecuteOk\n * @param {proto.Mysqlx.Sql.StmtExecuteOk} proto - protobuf stub\n * @returns {module:adapters.Mysqlx.Sql.StmtExecuteOk}\n */\nfunction StmtExecuteOk (proto) {\n    return Object.assign({}, empty(proto), wraps(proto));\n}\n\n/**\n * Creates a wrapper from a raw X Protocol message payload.\n * @returns {module:adapters.Mysqlx.Sql.StmtExecuteOk}\n */\nStmtExecuteOk.deserialize = function (buffer) {\n    return StmtExecuteOk(StmtExecuteOkStub.deserializeBinary(bytes.deserialize(buffer)));\n};\n\nStmtExecuteOk.MESSAGE_ID = ServerMessagesStub.Type.SQL_STMT_EXECUTE_OK;\n\nmodule.exports = StmtExecuteOk;\n"]},"metadata":{},"sourceType":"script"}