{"ast":null,"code":"var _jsxFileName = \"/home/ad/Bureau/infof308/src/src/components/GameBoard.js\";\nimport React, { Component } from 'react'; //import {getSession} from '@mysql/xdevapi';\n\nimport './GameBoard.css';\nimport HelpPopup from './HelpPopup';\nimport Instance from './Instance';\nimport Solution from './Solution';\nimport Pair from \"../game/Pair\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GameBoard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setTrigger = () => {\n      this.setState({\n        helpButtonPopUp: !this.state.helpButtonPopUp\n      });\n    };\n\n    this.state = {\n      helpButtonPopUp: false\n    };\n  }\n\n  async get_from_db() {\n    const config = {\n      password: '86Ex$y3s',\n      user: 'pcp-user',\n      host: 'pcp.digitelstudios.lu:3306',\n      schema: 'pcp-db'\n    };\n    await getSession(config).then(session => {\n      return session.sql('select * from instances order by rand()').execute().then(session.close());\n    }).then(result => {\n      this.data = result.fetchOne()[1];\n    }).catch(error => {\n      // Use `error` here without `throw`ing -- report it, put it in a log, etc.\n      console.log(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"gameButtons\",\n          children: \"Load Instance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"gameButtons\",\n          children: \"Start playing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"gameButtons\",\n          onClick: this.setTrigger,\n          children: \"Help ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [this.state.helpButtonPopUp && /*#__PURE__*/_jsxDEV(HelpPopup, {\n          setTrigger: this.setTrigger,\n          text: \"text test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rectangle\",\n          children: /*#__PURE__*/_jsxDEV(Instance, {\n            data: \"11,22,33,44\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default GameBoard;","map":{"version":3,"sources":["/home/ad/Bureau/infof308/src/src/components/GameBoard.js"],"names":["React","Component","HelpPopup","Instance","Solution","Pair","GameBoard","constructor","props","setTrigger","setState","helpButtonPopUp","state","get_from_db","config","password","user","host","schema","getSession","then","session","sql","execute","close","result","data","fetchOne","catch","error","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAO,iBAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,cAAjB;;;AAEA,MAAMC,SAAN,SAAwBN,KAAK,CAACC,SAA9B,CAAuC;AACnCM,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAOlBC,UAPkB,GAOL,MAAK;AACd,WAAKC,QAAL,CAAc;AAACC,QAAAA,eAAe,EAAG,CAAC,KAAKC,KAAL,CAAWD;AAA/B,OAAd;AACH,KATiB;;AAEd,SAAKC,KAAL,GAAa;AACTD,MAAAA,eAAe,EAAE;AADR,KAAb;AAGH;;AAMgB,QAAXE,WAAW,GAAG;AAChB,UAAMC,MAAM,GAAG;AACXC,MAAAA,QAAQ,EAAE,UADC;AAEXC,MAAAA,IAAI,EAAE,UAFK;AAGXC,MAAAA,IAAI,EAAE,4BAHK;AAIXC,MAAAA,MAAM,EAAE;AAJG,KAAf;AAOA,UAAMC,UAAU,CAACL,MAAD,CAAV,CACDM,IADC,CACIC,OAAO,IAAI;AACb,aAAOA,OAAO,CAACC,GAAR,CAAY,yCAAZ,EACFC,OADE,GACQH,IADR,CACaC,OAAO,CAACG,KAAR,EADb,CAAP;AAEH,KAJC,EAKDJ,IALC,CAKIK,MAAM,IAAI;AACZ,WAAKC,IAAL,GAAYD,MAAM,CAACE,QAAP,GAAkB,CAAlB,CAAZ;AACH,KAPC,EAOCC,KAPD,CAOOC,KAAK,IAAI;AACd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAVC,CAAN;AAWH;;AAEDG,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,8BACI;AAAA,gCACI;AAAQ,UAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAQ,UAAA,SAAS,EAAC,aAAlB;AAAgC,UAAA,OAAO,EAAE,KAAKvB,UAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAMQ;AAAA,mBACK,KAAKG,KAAL,CAAWD,eAAX,iBACD,QAAC,SAAD;AAAW,UAAA,UAAU,EAAE,KAAKF,UAA5B;AAAwC,UAAA,IAAI,EAAE;AAA9C;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCACA,QAAC,QAAD;AAAU,YAAA,IAAI,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANR;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAkBH;;AApDkC;;AAuDvC,eAAeH,SAAf","sourcesContent":["import React, { Component } from 'react';\n//import {getSession} from '@mysql/xdevapi';\nimport './GameBoard.css'\nimport HelpPopup from './HelpPopup';\nimport Instance from './Instance';\nimport Solution from './Solution';\nimport Pair from \"../game/Pair\";\n\nclass GameBoard extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            helpButtonPopUp: false,\n        };\n    }\n\n    setTrigger = () =>{\n        this.setState({helpButtonPopUp : !this.state.helpButtonPopUp})        \n    }\n\n    async get_from_db() {\n        const config = {\n            password: '86Ex$y3s',\n            user: 'pcp-user',\n            host: 'pcp.digitelstudios.lu:3306',\n            schema: 'pcp-db'\n        };\n\n        await getSession(config)\n            .then(session => {\n                return session.sql('select * from instances order by rand()')\n                    .execute().then(session.close());\n            })\n            .then(result => {\n                this.data = result.fetchOne()[1];\n            }).catch(error => {\n                // Use `error` here without `throw`ing -- report it, put it in a log, etc.\n                console.log(error)\n            });\n    }\n\n    render(){\n        return(\n            <main>\n                <div>                \n                    <button className='gameButtons'>Load Instance</button>\n                    <button className='gameButtons'>Start playing</button>\n                    <button className='gameButtons' onClick={this.setTrigger}>Help ?</button>\n                </div>\n                    <div>\n                        {this.state.helpButtonPopUp && \n                        <HelpPopup setTrigger={this.setTrigger} text={\"text test\"}/>}\n                        <div className='rectangle'>\n                        <Instance data=\"11,22,33,44\"/>\n                        \n                    </div>                                     \n                </div>\n            </main>\n            \n        );\n    }\n}\n\nexport default GameBoard"]},"metadata":{},"sourceType":"module"}