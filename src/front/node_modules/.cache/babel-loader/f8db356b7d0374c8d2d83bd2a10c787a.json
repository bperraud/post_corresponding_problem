{"ast":null,"code":"/*\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License, version 2.0, as\n * published by the Free Software Foundation.\n *\n * This program is also distributed with certain software (including\n * but not limited to OpenSSL) that is licensed under separate terms,\n * as designated in a particular file or component or in included license\n * documentation.  The authors of MySQL hereby grant you an\n * additional permission to link the program and your derivative works\n * with the separately licensed software that they have included with\n * MySQL.\n *\n * Without limiting anything contained in the foregoing, this file,\n * which is part of MySQL Connector/Node.js, is also subject to the\n * Universal FOSS Exception, version 1.0, a copy of which can be found at\n * http://oss.oracle.com/licenses/universal-foss-exception.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License, version 2.0, for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA\n */\n'use strict';\n/**\n * Mysqlx.Connection outbound message handlers.\n * @private\n * @module handlers.Mysqlx.Connection\n */\n\nconst capabilitiesGet = require('../Wrappers/Messages/Connection/CapabilitiesGet');\n\nconst capabilitiesSet = require('../Wrappers/Messages/Connection/CapabilitiesSet');\n\nconst close = require('../Wrappers/Messages/Connection/Close');\n\nconst logger = require('../../logger');\n\nconst log = logger('protocol:outbound:Mysqlx.Connection');\n/**\n * Encode a Mysqlx.Connection.CapabilitiesGet protobuf message.\n * @function\n * @name module:handlers.Mysqlx.Connection#encodeCapabilitiesGet\n * @returns {Buffer} The protobuf encoded buffer payload.\n */\n\nexports.encodeCapabilitiesGet = function () {\n  const outboundCapabilitiesGet = capabilitiesGet.create();\n  log.info('CapabilitiesGet', outboundCapabilitiesGet);\n  return outboundCapabilitiesGet.serialize();\n};\n/**\n * Encode a Mysqlx.Connection.CapabilitiesSet protobuf message.\n * @function\n * @name module:handlers.Mysqlx.Connection#encodeCapabilitiesSet\n * @param {Object} properties - connection properties\n * @returns {Buffer} The protobuf encoded buffer payload.\n */\n\n\nexports.encodeCapabilitiesSet = function (properties) {\n  const outboundCapabilitiesSet = capabilitiesSet.create(properties);\n  log.info('CapabilitiesSet', outboundCapabilitiesSet);\n  return outboundCapabilitiesSet.serialize();\n};\n/**\n * Encode a Mysqlx.Connection.Close protobuf message.\n * @function\n * @name module:handlers.Mysqlx.Connection#encodeClose\n * @returns {Buffer} The protobuf encoded buffer payload.\n */\n\n\nexports.encodeClose = function () {\n  const outboundClose = close.create();\n  log.info('Close', outboundClose);\n  return outboundClose.serialize();\n};","map":{"version":3,"sources":["/home/ad/Bureau/infof308/src/node_modules/@mysql/xdevapi/lib/Protocol/OutboundHandlers/Connection.js"],"names":["capabilitiesGet","require","capabilitiesSet","close","logger","log","exports","encodeCapabilitiesGet","outboundCapabilitiesGet","create","info","serialize","encodeCapabilitiesSet","properties","outboundCapabilitiesSet","encodeClose","outboundClose"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,eAAe,GAAGC,OAAO,CAAC,iDAAD,CAA/B;;AACA,MAAMC,eAAe,GAAGD,OAAO,CAAC,iDAAD,CAA/B;;AACA,MAAME,KAAK,GAAGF,OAAO,CAAC,uCAAD,CAArB;;AACA,MAAMG,MAAM,GAAGH,OAAO,CAAC,cAAD,CAAtB;;AAEA,MAAMI,GAAG,GAAGD,MAAM,CAAC,qCAAD,CAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACAE,OAAO,CAACC,qBAAR,GAAgC,YAAY;AACxC,QAAMC,uBAAuB,GAAGR,eAAe,CAACS,MAAhB,EAAhC;AACAJ,EAAAA,GAAG,CAACK,IAAJ,CAAS,iBAAT,EAA4BF,uBAA5B;AAEA,SAAOA,uBAAuB,CAACG,SAAxB,EAAP;AACH,CALD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAL,OAAO,CAACM,qBAAR,GAAgC,UAAUC,UAAV,EAAsB;AAClD,QAAMC,uBAAuB,GAAGZ,eAAe,CAACO,MAAhB,CAAuBI,UAAvB,CAAhC;AACAR,EAAAA,GAAG,CAACK,IAAJ,CAAS,iBAAT,EAA4BI,uBAA5B;AAEA,SAAOA,uBAAuB,CAACH,SAAxB,EAAP;AACH,CALD;AAOA;AACA;AACA;AACA;AACA;AACA;;;AACAL,OAAO,CAACS,WAAR,GAAsB,YAAY;AAC9B,QAAMC,aAAa,GAAGb,KAAK,CAACM,MAAN,EAAtB;AACAJ,EAAAA,GAAG,CAACK,IAAJ,CAAS,OAAT,EAAkBM,aAAlB;AAEA,SAAOA,aAAa,CAACL,SAAd,EAAP;AACH,CALD","sourcesContent":["/*\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License, version 2.0, as\n * published by the Free Software Foundation.\n *\n * This program is also distributed with certain software (including\n * but not limited to OpenSSL) that is licensed under separate terms,\n * as designated in a particular file or component or in included license\n * documentation.  The authors of MySQL hereby grant you an\n * additional permission to link the program and your derivative works\n * with the separately licensed software that they have included with\n * MySQL.\n *\n * Without limiting anything contained in the foregoing, this file,\n * which is part of MySQL Connector/Node.js, is also subject to the\n * Universal FOSS Exception, version 1.0, a copy of which can be found at\n * http://oss.oracle.com/licenses/universal-foss-exception.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License, version 2.0, for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\n'use strict';\n\n/**\n * Mysqlx.Connection outbound message handlers.\n * @private\n * @module handlers.Mysqlx.Connection\n */\n\nconst capabilitiesGet = require('../Wrappers/Messages/Connection/CapabilitiesGet');\nconst capabilitiesSet = require('../Wrappers/Messages/Connection/CapabilitiesSet');\nconst close = require('../Wrappers/Messages/Connection/Close');\nconst logger = require('../../logger');\n\nconst log = logger('protocol:outbound:Mysqlx.Connection');\n\n/**\n * Encode a Mysqlx.Connection.CapabilitiesGet protobuf message.\n * @function\n * @name module:handlers.Mysqlx.Connection#encodeCapabilitiesGet\n * @returns {Buffer} The protobuf encoded buffer payload.\n */\nexports.encodeCapabilitiesGet = function () {\n    const outboundCapabilitiesGet = capabilitiesGet.create();\n    log.info('CapabilitiesGet', outboundCapabilitiesGet);\n\n    return outboundCapabilitiesGet.serialize();\n};\n\n/**\n * Encode a Mysqlx.Connection.CapabilitiesSet protobuf message.\n * @function\n * @name module:handlers.Mysqlx.Connection#encodeCapabilitiesSet\n * @param {Object} properties - connection properties\n * @returns {Buffer} The protobuf encoded buffer payload.\n */\nexports.encodeCapabilitiesSet = function (properties) {\n    const outboundCapabilitiesSet = capabilitiesSet.create(properties);\n    log.info('CapabilitiesSet', outboundCapabilitiesSet);\n\n    return outboundCapabilitiesSet.serialize();\n};\n\n/**\n * Encode a Mysqlx.Connection.Close protobuf message.\n * @function\n * @name module:handlers.Mysqlx.Connection#encodeClose\n * @returns {Buffer} The protobuf encoded buffer payload.\n */\nexports.encodeClose = function () {\n    const outboundClose = close.create();\n    log.info('Close', outboundClose);\n\n    return outboundClose.serialize();\n};\n"]},"metadata":{},"sourceType":"script"}